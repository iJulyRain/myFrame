!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ADDR	utilities/sqlite3/sqlite3.c	8318;"	d	file:
AGGREGATE	utilities/sqlite3/sqlite3.c	9699;"	d	file:
ALWAYS	utilities/sqlite3/sqlite3.c	114114;"	d	file:
ALWAYS	utilities/sqlite3/sqlite3.c	114117;"	d	file:
ALWAYS	utilities/sqlite3/sqlite3.c	517;"	d	file:
ALWAYS	utilities/sqlite3/sqlite3.c	520;"	d	file:
ALWAYS	utilities/sqlite3/sqlite3.c	523;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	298;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	301;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	304;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	307;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	310;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	313;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	316;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	320;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	291;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	294;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	297;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	300;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	303;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	306;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	309;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	313;"	d	file:
AdjustTree	utilities/sqlite3/sqlite3.c	/^static int AdjustTree($/;"	f	file:
AggInfo	utilities/sqlite3/sqlite3.c	/^struct AggInfo {$/;"	s	file:
AggInfo	utilities/sqlite3/sqlite3.c	/^typedef struct AggInfo AggInfo;$/;"	t	typeref:struct:AggInfo	file:
AggInfo_col	utilities/sqlite3/sqlite3.c	/^  struct AggInfo_col {    \/* For each column used in source tables *\/$/;"	s	struct:AggInfo	file:
AggInfo_func	utilities/sqlite3/sqlite3.c	/^  struct AggInfo_func {   \/* For each aggregate function *\/$/;"	s	struct:AggInfo	file:
AreFileApisANSI	utilities/sqlite3/sqlite3.c	31631;"	d	file:
ArraySize	utilities/sqlite3/sqlite3.c	7809;"	d	file:
AssignCells	utilities/sqlite3/sqlite3.c	127111;"	d	file:
AssignCells	utilities/sqlite3/sqlite3.c	127116;"	d	file:
AssignCells	utilities/sqlite3/sqlite3.c	127119;"	d	file:
AttachKey	utilities/sqlite3/sqlite3.c	/^struct AttachKey { int type;  Token key; };$/;"	s	file:
AuthContext	utilities/sqlite3/sqlite3.c	/^struct AuthContext {$/;"	s	file:
AuthContext	utilities/sqlite3/sqlite3.c	/^typedef struct AuthContext AuthContext;$/;"	t	typeref:struct:AuthContext	file:
AutoincInfo	utilities/sqlite3/sqlite3.c	/^struct AutoincInfo {$/;"	s	file:
AutoincInfo	utilities/sqlite3/sqlite3.c	/^typedef struct AutoincInfo AutoincInfo;$/;"	t	typeref:struct:AutoincInfo	file:
AuxData	utilities/sqlite3/sqlite3.c	/^  struct AuxData {$/;"	s	struct:VdbeFunc	file:
BITVEC_HASH	utilities/sqlite3/sqlite3.c	34828;"	d	file:
BITVEC_MXHASH	utilities/sqlite3/sqlite3.c	34823;"	d	file:
BITVEC_NBIT	utilities/sqlite3/sqlite3.c	34817;"	d	file:
BITVEC_NELEM	utilities/sqlite3/sqlite3.c	34815;"	d	file:
BITVEC_NINT	utilities/sqlite3/sqlite3.c	34820;"	d	file:
BITVEC_NPTR	utilities/sqlite3/sqlite3.c	34830;"	d	file:
BITVEC_SZ	utilities/sqlite3/sqlite3.c	34801;"	d	file:
BITVEC_SZELEM	utilities/sqlite3/sqlite3.c	34813;"	d	file:
BITVEC_TELEM	utilities/sqlite3/sqlite3.c	34811;"	d	file:
BITVEC_USIZE	utilities/sqlite3/sqlite3.c	34805;"	d	file:
BMS	utilities/sqlite3/sqlite3.c	10461;"	d	file:
BTCURSOR_MAX_DEPTH	utilities/sqlite3/sqlite3.c	47806;"	d	file:
BTREE_AUTOVACUUM_FULL	utilities/sqlite3/sqlite3.c	7948;"	d	file:
BTREE_AUTOVACUUM_INCR	utilities/sqlite3/sqlite3.c	7949;"	d	file:
BTREE_AUTOVACUUM_NONE	utilities/sqlite3/sqlite3.c	7947;"	d	file:
BTREE_BLOBKEY	utilities/sqlite3/sqlite3.c	8024;"	d	file:
BTREE_DEFAULT_CACHE_SIZE	utilities/sqlite3/sqlite3.c	8048;"	d	file:
BTREE_FILE_FORMAT	utilities/sqlite3/sqlite3.c	8047;"	d	file:
BTREE_FREE_PAGE_COUNT	utilities/sqlite3/sqlite3.c	8045;"	d	file:
BTREE_INCR_VACUUM	utilities/sqlite3/sqlite3.c	8052;"	d	file:
BTREE_INTKEY	utilities/sqlite3/sqlite3.c	8023;"	d	file:
BTREE_LARGEST_ROOT_PAGE	utilities/sqlite3/sqlite3.c	8049;"	d	file:
BTREE_MEMORY	utilities/sqlite3/sqlite3.c	7976;"	d	file:
BTREE_NO_READLOCK	utilities/sqlite3/sqlite3.c	7975;"	d	file:
BTREE_OMIT_JOURNAL	utilities/sqlite3/sqlite3.c	7974;"	d	file:
BTREE_SCHEMA_VERSION	utilities/sqlite3/sqlite3.c	8046;"	d	file:
BTREE_SINGLE	utilities/sqlite3/sqlite3.c	7977;"	d	file:
BTREE_TEXT_ENCODING	utilities/sqlite3/sqlite3.c	8050;"	d	file:
BTREE_UNORDERED	utilities/sqlite3/sqlite3.c	7978;"	d	file:
BTREE_USER_VERSION	utilities/sqlite3/sqlite3.c	8051;"	d	file:
BYTE	include/types.h	/^typedef unsigned char   BYTE;$/;"	t
BYTESWAP32	utilities/sqlite3/sqlite3.c	44939;"	d	file:
BenignMallocHooks	utilities/sqlite3/sqlite3.c	/^static SQLITE_WSD struct BenignMallocHooks {$/;"	s	file:
BenignMallocHooks	utilities/sqlite3/sqlite3.c	/^typedef struct BenignMallocHooks BenignMallocHooks;$/;"	t	typeref:struct:BenignMallocHooks	file:
Bitmask	utilities/sqlite3/sqlite3.c	/^typedef u64 Bitmask;$/;"	t	file:
Bitvec	utilities/sqlite3/sqlite3.c	/^struct Bitvec {$/;"	s	file:
Bitvec	utilities/sqlite3/sqlite3.c	/^typedef struct Bitvec Bitvec;$/;"	t	typeref:struct:Bitvec	file:
Bool	utilities/sqlite3/sqlite3.c	/^typedef unsigned char Bool;$/;"	t	file:
BtCursor	utilities/sqlite3/sqlite3.c	/^struct BtCursor {$/;"	s	file:
BtCursor	utilities/sqlite3/sqlite3.c	/^typedef struct BtCursor BtCursor;$/;"	t	typeref:struct:BtCursor	file:
BtLock	utilities/sqlite3/sqlite3.c	/^struct BtLock {$/;"	s	file:
BtLock	utilities/sqlite3/sqlite3.c	/^typedef struct BtLock BtLock;$/;"	t	typeref:struct:BtLock	file:
BtShared	utilities/sqlite3/sqlite3.c	/^struct BtShared {$/;"	s	file:
BtShared	utilities/sqlite3/sqlite3.c	/^typedef struct BtShared BtShared;$/;"	t	typeref:struct:BtShared	file:
Btree	utilities/sqlite3/sqlite3.c	/^struct Btree {$/;"	s	file:
Btree	utilities/sqlite3/sqlite3.c	/^typedef struct Btree Btree;$/;"	t	typeref:struct:Btree	file:
BusyHandler	utilities/sqlite3/sqlite3.c	/^struct BusyHandler {$/;"	s	file:
BusyHandler	utilities/sqlite3/sqlite3.c	/^typedef struct BusyHandler BusyHandler;$/;"	t	typeref:struct:BusyHandler	file:
ByteRangeLockPB2	utilities/sqlite3/sqlite3.c	/^struct ByteRangeLockPB2$/;"	s	file:
CACHE_STALE	utilities/sqlite3/sqlite3.c	12675;"	d	file:
CHECK_FOR_INTERRUPT	utilities/sqlite3/sqlite3.c	63575;"	d	file:
CHECK_PAGE	utilities/sqlite3/sqlite3.c	38696;"	d	file:
CHECK_PAGE	utilities/sqlite3/sqlite3.c	38707;"	d	file:
CLEARBIT	utilities/sqlite3/sqlite3.c	35061;"	d	file:
CMAKE_BINARY_DIR	build/Makefile	/^CMAKE_BINARY_DIR = \/home\/julyrain\/work\/git\/Tt\/build$/;"	m
CMAKE_BINARY_DIR	build/components/Makefile	/^CMAKE_BINARY_DIR = \/home\/julyrain\/work\/git\/Tt\/build$/;"	m
CMAKE_BINARY_DIR	build/components/io/Makefile	/^CMAKE_BINARY_DIR = \/home\/julyrain\/work\/git\/Tt\/build$/;"	m
CMAKE_BINARY_DIR	build/src/Makefile	/^CMAKE_BINARY_DIR = \/home\/julyrain\/work\/git\/Tt\/build$/;"	m
CMAKE_BINARY_DIR	build/src/application/Makefile	/^CMAKE_BINARY_DIR = \/home\/julyrain\/work\/git\/Tt\/build$/;"	m
CMAKE_BINARY_DIR	build/src/kernel/Makefile	/^CMAKE_BINARY_DIR = \/home\/julyrain\/work\/git\/Tt\/build$/;"	m
CMAKE_BINARY_DIR	build/utilities/Makefile	/^CMAKE_BINARY_DIR = \/home\/julyrain\/work\/git\/Tt\/build$/;"	m
CMAKE_BINARY_DIR	build/utilities/common/Makefile	/^CMAKE_BINARY_DIR = \/home\/julyrain\/work\/git\/Tt\/build$/;"	m
CMAKE_BINARY_DIR	build/utilities/modbus/Makefile	/^CMAKE_BINARY_DIR = \/home\/julyrain\/work\/git\/Tt\/build$/;"	m
CMAKE_BINARY_DIR	build/utilities/sqlite3/Makefile	/^CMAKE_BINARY_DIR = \/home\/julyrain\/work\/git\/Tt\/build$/;"	m
CMAKE_COMMAND	build/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/components/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/components/io/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/src/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/src/application/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/src/kernel/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/utilities/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/utilities/common/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/utilities/modbus/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/utilities/sqlite3/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_EDIT_COMMAND	build/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	build/components/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	build/components/io/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	build/src/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	build/src/application/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	build/src/kernel/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	build/utilities/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	build/utilities/common/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	build/utilities/modbus/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	build/utilities/sqlite3/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_SOURCE_DIR	build/Makefile	/^CMAKE_SOURCE_DIR = \/home\/julyrain\/work\/git\/Tt$/;"	m
CMAKE_SOURCE_DIR	build/components/Makefile	/^CMAKE_SOURCE_DIR = \/home\/julyrain\/work\/git\/Tt$/;"	m
CMAKE_SOURCE_DIR	build/components/io/Makefile	/^CMAKE_SOURCE_DIR = \/home\/julyrain\/work\/git\/Tt$/;"	m
CMAKE_SOURCE_DIR	build/src/Makefile	/^CMAKE_SOURCE_DIR = \/home\/julyrain\/work\/git\/Tt$/;"	m
CMAKE_SOURCE_DIR	build/src/application/Makefile	/^CMAKE_SOURCE_DIR = \/home\/julyrain\/work\/git\/Tt$/;"	m
CMAKE_SOURCE_DIR	build/src/kernel/Makefile	/^CMAKE_SOURCE_DIR = \/home\/julyrain\/work\/git\/Tt$/;"	m
CMAKE_SOURCE_DIR	build/utilities/Makefile	/^CMAKE_SOURCE_DIR = \/home\/julyrain\/work\/git\/Tt$/;"	m
CMAKE_SOURCE_DIR	build/utilities/common/Makefile	/^CMAKE_SOURCE_DIR = \/home\/julyrain\/work\/git\/Tt$/;"	m
CMAKE_SOURCE_DIR	build/utilities/modbus/Makefile	/^CMAKE_SOURCE_DIR = \/home\/julyrain\/work\/git\/Tt$/;"	m
CMAKE_SOURCE_DIR	build/utilities/sqlite3/Makefile	/^CMAKE_SOURCE_DIR = \/home\/julyrain\/work\/git\/Tt$/;"	m
CODEC1	utilities/sqlite3/sqlite3.c	37945;"	d	file:
CODEC1	utilities/sqlite3/sqlite3.c	37951;"	d	file:
CODEC2	utilities/sqlite3/sqlite3.c	37947;"	d	file:
CODEC2	utilities/sqlite3/sqlite3.c	37952;"	d	file:
COLNAME_COLUMN	utilities/sqlite3/sqlite3.c	8301;"	d	file:
COLNAME_DATABASE	utilities/sqlite3/sqlite3.c	8299;"	d	file:
COLNAME_DECLTYPE	utilities/sqlite3/sqlite3.c	8298;"	d	file:
COLNAME_N	utilities/sqlite3/sqlite3.c	8303;"	d	file:
COLNAME_N	utilities/sqlite3/sqlite3.c	8306;"	d	file:
COLNAME_N	utilities/sqlite3/sqlite3.c	8308;"	d	file:
COLNAME_NAME	utilities/sqlite3/sqlite3.c	8297;"	d	file:
COLNAME_TABLE	utilities/sqlite3/sqlite3.c	8300;"	d	file:
COLUMN_MASK	utilities/sqlite3/sqlite3.c	86508;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	107;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	112;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	119;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	122;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	125;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	133;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	13;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	152;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	160;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	165;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	170;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	177;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	194;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	197;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	200;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	24;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	32;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	38;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	44;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	50;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	56;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	70;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	77;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	85;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	88;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	90;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	99;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	104;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	112;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	117;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	124;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	127;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	12;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	135;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	154;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	162;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	167;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	170;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	187;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	18;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	190;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	193;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	29;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	37;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	43;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	49;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	55;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	61;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	75;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	82;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	90;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	93;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	95;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	100;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	108;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	114;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	126;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	135;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	154;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	15;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	172;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	180;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	185;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	25;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	33;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	39;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	46;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	52;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	59;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	64;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	72;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	79;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	93;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	105;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	113;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	119;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	128;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	137;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	14;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	156;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	173;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	178;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	20;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	30;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	38;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	44;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	51;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	57;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	64;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	69;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	77;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	84;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	98;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	101;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	109;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	115;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	127;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	136;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	155;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	16;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	173;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	181;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	186;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	26;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	34;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	40;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	47;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	53;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	60;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	65;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	73;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	80;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	94;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	106;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	114;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	120;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	129;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	138;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	157;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	15;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	174;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	179;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	21;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	31;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	39;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	45;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	52;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	58;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	65;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	70;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	78;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	85;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	99;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	103;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	116;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	129;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	140;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	143;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	156;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	174;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	17;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	182;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	187;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	28;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	35;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	41;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	61;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	66;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	74;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	81;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	95;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	100;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	108;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	121;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	131;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	142;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	145;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	158;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	175;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	180;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	22;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	33;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	40;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	46;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	66;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	71;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	79;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	86;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	147;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	20;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	149;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	25;"	d	file:
CTIMEOPT_VAL	utilities/sqlite3/sqlite3.c	12152;"	d	file:
CTIMEOPT_VAL_	utilities/sqlite3/sqlite3.c	12151;"	d	file:
CTRL_FREE	utilities/sqlite3/sqlite3.c	16268;"	d	file:
CTRL_LOGSIZE	utilities/sqlite3/sqlite3.c	16267;"	d	file:
CURSOR_FAULT	utilities/sqlite3/sqlite3.c	47874;"	d	file:
CURSOR_INVALID	utilities/sqlite3/sqlite3.c	47871;"	d	file:
CURSOR_REQUIRESEEK	utilities/sqlite3/sqlite3.c	47873;"	d	file:
CURSOR_VALID	utilities/sqlite3/sqlite3.c	47872;"	d	file:
CellInfo	utilities/sqlite3/sqlite3.c	/^struct CellInfo {$/;"	s	file:
CellInfo	utilities/sqlite3/sqlite3.c	/^typedef struct CellInfo CellInfo;$/;"	t	typeref:struct:CellInfo	file:
ChooseLeaf	utilities/sqlite3/sqlite3.c	/^static int ChooseLeaf($/;"	f	file:
Cleanup	utilities/sqlite3/sqlite3.c	/^static void Cleanup(Vdbe *p){$/;"	f	file:
CollSeq	utilities/sqlite3/sqlite3.c	/^struct CollSeq {$/;"	s	file:
CollSeq	utilities/sqlite3/sqlite3.c	/^typedef struct CollSeq CollSeq;$/;"	t	typeref:struct:CollSeq	file:
Column	utilities/sqlite3/sqlite3.c	/^struct Column {$/;"	s	file:
Column	utilities/sqlite3/sqlite3.c	/^typedef struct Column Column;$/;"	t	typeref:struct:Column	file:
CountCtx	utilities/sqlite3/sqlite3.c	/^struct CountCtx {$/;"	s	file:
CountCtx	utilities/sqlite3/sqlite3.c	/^typedef struct CountCtx CountCtx;$/;"	t	typeref:struct:CountCtx	file:
D	utilities/sqlite3/sqlite3.c	/^  int Y, M, D;       \/* Year, month, and day *\/$/;"	m	struct:DateTime	file:
DB_Empty	utilities/sqlite3/sqlite3.c	9364;"	d	file:
DB_SchemaLoaded	utilities/sqlite3/sqlite3.c	9362;"	d	file:
DB_UnresetViews	utilities/sqlite3/sqlite3.c	9363;"	d	file:
DCOORD	utilities/sqlite3/sqlite3.c	127254;"	d	file:
DEBUG	include/print.h	30;"	d
DEC	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	324;"	d	file:
DEC	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	317;"	d	file:
DIRECT_MODE	utilities/sqlite3/sqlite3.c	43131;"	d	file:
DOCID_CMP	utilities/sqlite3/sqlite3.c	116247;"	d	file:
DOTLOCK_SUFFIX	utilities/sqlite3/sqlite3.c	26459;"	d	file:
DO_OS_MALLOC_TEST	utilities/sqlite3/sqlite3.c	14369;"	d	file:
DO_OS_MALLOC_TEST	utilities/sqlite3/sqlite3.c	14376;"	d	file:
DWORD	include/types.h	/^typedef unsigned long   DWORD;$/;"	t
DateTime	utilities/sqlite3/sqlite3.c	/^struct DateTime {$/;"	s	file:
DateTime	utilities/sqlite3/sqlite3.c	/^typedef struct DateTime DateTime;$/;"	t	typeref:struct:DateTime	file:
Db	utilities/sqlite3/sqlite3.c	/^struct Db {$/;"	s	file:
Db	utilities/sqlite3/sqlite3.c	/^typedef struct Db Db;$/;"	t	typeref:struct:Db	file:
DbClearProperty	utilities/sqlite3/sqlite3.c	9350;"	d	file:
DbFixer	utilities/sqlite3/sqlite3.c	/^struct DbFixer {$/;"	s	file:
DbFixer	utilities/sqlite3/sqlite3.c	/^typedef struct DbFixer DbFixer;$/;"	t	typeref:struct:DbFixer	file:
DbHasAnyProperty	utilities/sqlite3/sqlite3.c	9348;"	d	file:
DbHasProperty	utilities/sqlite3/sqlite3.c	9347;"	d	file:
DbPage	utilities/sqlite3/sqlite3.c	/^typedef struct PgHdr DbPage;$/;"	t	typeref:struct:PgHdr	file:
DbSetProperty	utilities/sqlite3/sqlite3.c	9349;"	d	file:
Deephemeralize	utilities/sqlite3/sqlite3.c	63152;"	d	file:
ECONNREFUSED	utilities/modbus/modbus-tcp.h	30;"	d
ECONNRESET	utilities/modbus/modbus-tcp.h	29;"	d
EIGHT_BYTE_ALIGNMENT	utilities/sqlite3/sqlite3.c	7765;"	d	file:
EIGHT_BYTE_ALIGNMENT	utilities/sqlite3/sqlite3.c	7767;"	d	file:
EMBBADCRC	utilities/modbus/modbus.h	115;"	d
EMBBADDATA	utilities/modbus/modbus.h	116;"	d
EMBBADEXC	utilities/modbus/modbus.h	117;"	d
EMBMDATA	utilities/modbus/modbus.h	119;"	d
EMBUNKEXC	utilities/modbus/modbus.h	118;"	d
EMBXACK	utilities/modbus/modbus.h	107;"	d
EMBXGPATH	utilities/modbus/modbus.h	111;"	d
EMBXGTAR	utilities/modbus/modbus.h	112;"	d
EMBXILADD	utilities/modbus/modbus.h	104;"	d
EMBXILFUN	utilities/modbus/modbus.h	103;"	d
EMBXILVAL	utilities/modbus/modbus.h	105;"	d
EMBXMEMPAR	utilities/modbus/modbus.h	110;"	d
EMBXNACK	utilities/modbus/modbus.h	109;"	d
EMBXSBUSY	utilities/modbus/modbus.h	108;"	d
EMBXSFAIL	utilities/modbus/modbus.h	106;"	d
ENC	utilities/sqlite3/sqlite3.c	9555;"	d	file:
ENOPROTOOPT	utilities/modbus/modbus-tcp.h	32;"	d
ENOTSUP	utilities/modbus/modbus-rtu-private.h	41;"	d
ENTER_LOCK	include/def.h	36;"	d
EP2_Irreducible	utilities/sqlite3/sqlite3.c	10353;"	d	file:
EP2_MallocedToken	utilities/sqlite3/sqlite3.c	10352;"	d	file:
EP_Agg	utilities/sqlite3/sqlite3.c	10333;"	d	file:
EP_DblQuoted	utilities/sqlite3/sqlite3.c	10338;"	d	file:
EP_Distinct	utilities/sqlite3/sqlite3.c	10336;"	d	file:
EP_Error	utilities/sqlite3/sqlite3.c	10335;"	d	file:
EP_ExpCollate	utilities/sqlite3/sqlite3.c	10340;"	d	file:
EP_FixedDest	utilities/sqlite3/sqlite3.c	10341;"	d	file:
EP_FromJoin	utilities/sqlite3/sqlite3.c	10332;"	d	file:
EP_InfixFunc	utilities/sqlite3/sqlite3.c	10339;"	d	file:
EP_IntValue	utilities/sqlite3/sqlite3.c	10342;"	d	file:
EP_Reduced	utilities/sqlite3/sqlite3.c	10345;"	d	file:
EP_Resolved	utilities/sqlite3/sqlite3.c	10334;"	d	file:
EP_Static	utilities/sqlite3/sqlite3.c	10347;"	d	file:
EP_TokenOnly	utilities/sqlite3/sqlite3.c	10346;"	d	file:
EP_VarSelect	utilities/sqlite3/sqlite3.c	10337;"	d	file:
EP_xIsSelect	utilities/sqlite3/sqlite3.c	10343;"	d	file:
EQUALS	build/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/components/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/components/io/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/src/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/src/application/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/src/kernel/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/utilities/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/utilities/common/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/utilities/modbus/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/utilities/sqlite3/Makefile	/^EQUALS = =$/;"	m
ERR_TRACE	utilities/sqlite3/sqlite3.c	23151;"	d	file:
ETIMEDOUT	utilities/modbus/modbus-tcp.h	31;"	d
EXCLUSIVE_LOCK	utilities/sqlite3/sqlite3.c	9099;"	d	file:
EXIT_LOCK	include/def.h	37;"	d
EXPRDUP_REDUCE	utilities/sqlite3/sqlite3.c	10389;"	d	file:
EXPR_FULLSIZE	utilities/sqlite3/sqlite3.c	10381;"	d	file:
EXPR_REDUCEDSIZE	utilities/sqlite3/sqlite3.c	10382;"	d	file:
EXPR_TOKENONLYSIZE	utilities/sqlite3/sqlite3.c	10383;"	d	file:
EXTRA_SIZE	utilities/sqlite3/sqlite3.c	47639;"	d	file:
ExpandBlob	utilities/sqlite3/sqlite3.c	63160;"	d	file:
Expr	utilities/sqlite3/sqlite3.c	/^struct Expr {$/;"	s	file:
Expr	utilities/sqlite3/sqlite3.c	/^typedef struct Expr Expr;$/;"	t	typeref:struct:Expr	file:
ExprClearProperty	utilities/sqlite3/sqlite3.c	10374;"	d	file:
ExprHasAnyProperty	utilities/sqlite3/sqlite3.c	10372;"	d	file:
ExprHasProperty	utilities/sqlite3/sqlite3.c	10371;"	d	file:
ExprList	utilities/sqlite3/sqlite3.c	/^struct ExprList {$/;"	s	file:
ExprList	utilities/sqlite3/sqlite3.c	/^typedef struct ExprList ExprList;$/;"	t	typeref:struct:ExprList	file:
ExprList_item	utilities/sqlite3/sqlite3.c	/^  struct ExprList_item {$/;"	s	struct:ExprList	file:
ExprSetIrreducible	utilities/sqlite3/sqlite3.c	10362;"	d	file:
ExprSetIrreducible	utilities/sqlite3/sqlite3.c	10364;"	d	file:
ExprSetProperty	utilities/sqlite3/sqlite3.c	10373;"	d	file:
ExprSpan	utilities/sqlite3/sqlite3.c	/^struct ExprSpan {$/;"	s	file:
ExprSpan	utilities/sqlite3/sqlite3.c	/^typedef struct ExprSpan ExprSpan;$/;"	t	typeref:struct:ExprSpan	file:
FABS	utilities/sqlite3/sqlite3.c	128814;"	d	file:
FALSE	include/def.h	25;"	d
FALSE	utilities/modbus/modbus.h	48;"	d
FILEHANDLEID	utilities/sqlite3/sqlite3.c	37664;"	d	file:
FKey	utilities/sqlite3/sqlite3.c	/^struct FKey {$/;"	s	file:
FKey	utilities/sqlite3/sqlite3.c	/^typedef struct FKey FKey;$/;"	t	typeref:struct:FKey	file:
FLAG_INTERN	utilities/sqlite3/sqlite3.c	18975;"	d	file:
FLAG_SIGNED	utilities/sqlite3/sqlite3.c	18974;"	d	file:
FLAG_STRING	utilities/sqlite3/sqlite3.c	18976;"	d	file:
FOREGUARD	utilities/sqlite3/sqlite3.c	15033;"	d	file:
FTS3_DOCID_SEARCH	utilities/sqlite3/sqlite3.c	114281;"	d	file:
FTS3_EVAL_FILTER	utilities/sqlite3/sqlite3.c	114261;"	d	file:
FTS3_EVAL_MATCHINFO	utilities/sqlite3/sqlite3.c	114263;"	d	file:
FTS3_EVAL_NEXT	utilities/sqlite3/sqlite3.c	114262;"	d	file:
FTS3_FULLSCAN_SEARCH	utilities/sqlite3/sqlite3.c	114280;"	d	file:
FTS3_FULLTEXT_SEARCH	utilities/sqlite3/sqlite3.c	114282;"	d	file:
FTS3_HASH_BINARY	utilities/sqlite3/sqlite3.c	113988;"	d	file:
FTS3_HASH_STRING	utilities/sqlite3/sqlite3.c	113987;"	d	file:
FTS3_MATCHINFO_AVGLENGTH	utilities/sqlite3/sqlite3.c	125551;"	d	file:
FTS3_MATCHINFO_DEFAULT	utilities/sqlite3/sqlite3.c	125559;"	d	file:
FTS3_MATCHINFO_HITS	utilities/sqlite3/sqlite3.c	125554;"	d	file:
FTS3_MATCHINFO_LCS	utilities/sqlite3/sqlite3.c	125553;"	d	file:
FTS3_MATCHINFO_LENGTH	utilities/sqlite3/sqlite3.c	125552;"	d	file:
FTS3_MATCHINFO_NCOL	utilities/sqlite3/sqlite3.c	125549;"	d	file:
FTS3_MATCHINFO_NDOC	utilities/sqlite3/sqlite3.c	125550;"	d	file:
FTS3_MATCHINFO_NPHRASE	utilities/sqlite3/sqlite3.c	125548;"	d	file:
FTS3_MAX_PENDING_DATA	utilities/sqlite3/sqlite3.c	114051;"	d	file:
FTS3_MERGE_COUNT	utilities/sqlite3/sqlite3.c	114041;"	d	file:
FTS3_NODE_CHUNKSIZE	utilities/sqlite3/sqlite3.c	122314;"	d	file:
FTS3_NODE_CHUNKSIZE	utilities/sqlite3/sqlite3.c	122317;"	d	file:
FTS3_NODE_CHUNK_THRESHOLD	utilities/sqlite3/sqlite3.c	122315;"	d	file:
FTS3_NODE_CHUNK_THRESHOLD	utilities/sqlite3/sqlite3.c	122318;"	d	file:
FTS3_NODE_PADDING	utilities/sqlite3/sqlite3.c	122292;"	d	file:
FTS3_SEGCURSOR_ALL	utilities/sqlite3/sqlite3.c	114409;"	d	file:
FTS3_SEGCURSOR_PENDING	utilities/sqlite3/sqlite3.c	114408;"	d	file:
FTS3_SEGDIR_MAXLEVEL	utilities/sqlite3/sqlite3.c	114086;"	d	file:
FTS3_SEGDIR_MAXLEVEL_STR	utilities/sqlite3/sqlite3.c	114087;"	d	file:
FTS3_SEGMENT_COLUMN_FILTER	utilities/sqlite3/sqlite3.c	114421;"	d	file:
FTS3_SEGMENT_IGNORE_EMPTY	utilities/sqlite3/sqlite3.c	114420;"	d	file:
FTS3_SEGMENT_PREFIX	utilities/sqlite3/sqlite3.c	114422;"	d	file:
FTS3_SEGMENT_REQUIRE_POS	utilities/sqlite3/sqlite3.c	114419;"	d	file:
FTS3_SEGMENT_SCAN	utilities/sqlite3/sqlite3.c	114423;"	d	file:
FTS3_TERMS_SCHEMA	utilities/sqlite3/sqlite3.c	119106;"	d	file:
FTS3_VARINT_MAX	utilities/sqlite3/sqlite3.c	114069;"	d	file:
FTS4AUX_EQ_CONSTRAINT	utilities/sqlite3/sqlite3.c	119185;"	d	file:
FTS4AUX_GE_CONSTRAINT	utilities/sqlite3/sqlite3.c	119186;"	d	file:
FTS4AUX_LE_CONSTRAINT	utilities/sqlite3/sqlite3.c	119187;"	d	file:
FTSQUERY_AND	utilities/sqlite3/sqlite3.c	114379;"	d	file:
FTSQUERY_NEAR	utilities/sqlite3/sqlite3.c	114377;"	d	file:
FTSQUERY_NOT	utilities/sqlite3/sqlite3.c	114378;"	d	file:
FTSQUERY_OR	utilities/sqlite3/sqlite3.c	114380;"	d	file:
FTSQUERY_PHRASE	utilities/sqlite3/sqlite3.c	114381;"	d	file:
FUNCTION	utilities/sqlite3/sqlite3.c	9691;"	d	file:
FileChunk	utilities/sqlite3/sqlite3.c	/^struct FileChunk {$/;"	s	file:
FileChunk	utilities/sqlite3/sqlite3.c	/^typedef struct FileChunk FileChunk;$/;"	t	typeref:struct:FileChunk	file:
FilePoint	utilities/sqlite3/sqlite3.c	/^struct FilePoint {$/;"	s	file:
FilePoint	utilities/sqlite3/sqlite3.c	/^typedef struct FilePoint FilePoint;$/;"	t	typeref:struct:FilePoint	file:
FormatMessageW	utilities/sqlite3/sqlite3.c	31632;"	d	file:
Fts3Cursor	utilities/sqlite3/sqlite3.c	/^struct Fts3Cursor {$/;"	s	file:
Fts3Cursor	utilities/sqlite3/sqlite3.c	/^typedef struct Fts3Cursor Fts3Cursor;$/;"	t	typeref:struct:Fts3Cursor	file:
Fts3DeferredToken	utilities/sqlite3/sqlite3.c	/^struct Fts3DeferredToken {$/;"	s	file:
Fts3DeferredToken	utilities/sqlite3/sqlite3.c	/^typedef struct Fts3DeferredToken Fts3DeferredToken;$/;"	t	typeref:struct:Fts3DeferredToken	file:
Fts3Doclist	utilities/sqlite3/sqlite3.c	/^struct Fts3Doclist {$/;"	s	file:
Fts3Doclist	utilities/sqlite3/sqlite3.c	/^typedef struct Fts3Doclist Fts3Doclist;$/;"	t	typeref:struct:Fts3Doclist	file:
Fts3Expr	utilities/sqlite3/sqlite3.c	/^struct Fts3Expr {$/;"	s	file:
Fts3Expr	utilities/sqlite3/sqlite3.c	/^typedef struct Fts3Expr Fts3Expr;$/;"	t	typeref:struct:Fts3Expr	file:
Fts3Hash	utilities/sqlite3/sqlite3.c	/^struct Fts3Hash {$/;"	s	file:
Fts3Hash	utilities/sqlite3/sqlite3.c	/^typedef struct Fts3Hash Fts3Hash;$/;"	t	typeref:struct:Fts3Hash	file:
Fts3HashElem	utilities/sqlite3/sqlite3.c	/^struct Fts3HashElem {$/;"	s	file:
Fts3HashElem	utilities/sqlite3/sqlite3.c	/^typedef struct Fts3HashElem Fts3HashElem;$/;"	t	typeref:struct:Fts3HashElem	file:
Fts3Index	utilities/sqlite3/sqlite3.c	/^  struct Fts3Index {$/;"	s	struct:Fts3Table	file:
Fts3MultiSegReader	utilities/sqlite3/sqlite3.c	/^struct Fts3MultiSegReader {$/;"	s	file:
Fts3MultiSegReader	utilities/sqlite3/sqlite3.c	/^typedef struct Fts3MultiSegReader Fts3MultiSegReader;$/;"	t	typeref:struct:Fts3MultiSegReader	file:
Fts3Phrase	utilities/sqlite3/sqlite3.c	/^struct Fts3Phrase {$/;"	s	file:
Fts3Phrase	utilities/sqlite3/sqlite3.c	/^typedef struct Fts3Phrase Fts3Phrase;$/;"	t	typeref:struct:Fts3Phrase	file:
Fts3PhraseToken	utilities/sqlite3/sqlite3.c	/^struct Fts3PhraseToken {$/;"	s	file:
Fts3PhraseToken	utilities/sqlite3/sqlite3.c	/^typedef struct Fts3PhraseToken Fts3PhraseToken;$/;"	t	typeref:struct:Fts3PhraseToken	file:
Fts3SegFilter	utilities/sqlite3/sqlite3.c	/^struct Fts3SegFilter {$/;"	s	file:
Fts3SegFilter	utilities/sqlite3/sqlite3.c	/^typedef struct Fts3SegFilter Fts3SegFilter;$/;"	t	typeref:struct:Fts3SegFilter	file:
Fts3SegReader	utilities/sqlite3/sqlite3.c	/^struct Fts3SegReader {$/;"	s	file:
Fts3SegReader	utilities/sqlite3/sqlite3.c	/^typedef struct Fts3SegReader Fts3SegReader;$/;"	t	typeref:struct:Fts3SegReader	file:
Fts3Table	utilities/sqlite3/sqlite3.c	/^struct Fts3Table {$/;"	s	file:
Fts3Table	utilities/sqlite3/sqlite3.c	/^typedef struct Fts3Table Fts3Table;$/;"	t	typeref:struct:Fts3Table	file:
Fts3TokenAndCost	utilities/sqlite3/sqlite3.c	/^struct Fts3TokenAndCost {$/;"	s	file:
Fts3TokenAndCost	utilities/sqlite3/sqlite3.c	/^typedef struct Fts3TokenAndCost Fts3TokenAndCost;$/;"	t	typeref:struct:Fts3TokenAndCost	file:
Fts3auxColstats	utilities/sqlite3/sqlite3.c	/^  struct Fts3auxColstats {$/;"	s	struct:Fts3auxCursor	file:
Fts3auxCursor	utilities/sqlite3/sqlite3.c	/^struct Fts3auxCursor {$/;"	s	file:
Fts3auxCursor	utilities/sqlite3/sqlite3.c	/^typedef struct Fts3auxCursor Fts3auxCursor;$/;"	t	typeref:struct:Fts3auxCursor	file:
Fts3auxTable	utilities/sqlite3/sqlite3.c	/^struct Fts3auxTable {$/;"	s	file:
Fts3auxTable	utilities/sqlite3/sqlite3.c	/^typedef struct Fts3auxTable Fts3auxTable;$/;"	t	typeref:struct:Fts3auxTable	file:
FuncDef	utilities/sqlite3/sqlite3.c	/^struct FuncDef {$/;"	s	file:
FuncDef	utilities/sqlite3/sqlite3.c	/^typedef struct FuncDef FuncDef;$/;"	t	typeref:struct:FuncDef	file:
FuncDefHash	utilities/sqlite3/sqlite3.c	/^struct FuncDefHash {$/;"	s	file:
FuncDefHash	utilities/sqlite3/sqlite3.c	/^typedef struct FuncDefHash FuncDefHash;$/;"	t	typeref:struct:FuncDefHash	file:
FuncDestructor	utilities/sqlite3/sqlite3.c	/^struct FuncDestructor {$/;"	s	file:
FuncDestructor	utilities/sqlite3/sqlite3.c	/^typedef struct FuncDestructor FuncDestructor;$/;"	t	typeref:struct:FuncDestructor	file:
GLOBAL	utilities/sqlite3/sqlite3.c	7833;"	d	file:
GLOBAL	utilities/sqlite3/sqlite3.c	7839;"	d	file:
GetCurrentProcessId	utilities/sqlite3/sqlite3.c	/^int GetCurrentProcessId(void) {$/;"	f
GetTempPathA	utilities/sqlite3/sqlite3.c	32294;"	d	file:
GlogUpperToLower	utilities/sqlite3/sqlite3.c	84557;"	d	file:
GlogUpperToLower	utilities/sqlite3/sqlite3.c	84559;"	d	file:
HANDLE_TO_WINFILE	utilities/sqlite3/sqlite3.c	32300;"	d	file:
HASHSIZE	utilities/sqlite3/sqlite3.c	127163;"	d	file:
HASHTABLE_HASH_1	utilities/sqlite3/sqlite3.c	44853;"	d	file:
HASHTABLE_NPAGE	utilities/sqlite3/sqlite3.c	44852;"	d	file:
HASHTABLE_NPAGE_ONE	utilities/sqlite3/sqlite3.c	44861;"	d	file:
HASHTABLE_NSLOT	utilities/sqlite3/sqlite3.c	44854;"	d	file:
HAVE_ARPA_INET_H	utilities/modbus/config.h	5;"	d
HAVE_DECL_TIOCSRS485	utilities/modbus/config.h	9;"	d
HAVE_DECL___CYGWIN__	utilities/modbus/config.h	13;"	d
HAVE_DLFCN_H	utilities/modbus/config.h	16;"	d
HAVE_ERRNO_H	utilities/modbus/config.h	19;"	d
HAVE_FCNTL_H	utilities/modbus/config.h	22;"	d
HAVE_FORK	utilities/modbus/config.h	25;"	d
HAVE_FULLFSYNC	utilities/sqlite3/sqlite3.c	27739;"	d	file:
HAVE_FULLFSYNC	utilities/sqlite3/sqlite3.c	27741;"	d	file:
HAVE_GETADDRINFO	utilities/modbus/config.h	28;"	d
HAVE_GETTIMEOFDAY	utilities/modbus/config.h	31;"	d
HAVE_INET_NTOA	utilities/modbus/config.h	34;"	d
HAVE_INTTYPES_H	utilities/modbus/config.h	37;"	d
HAVE_LIMITS_H	utilities/modbus/config.h	40;"	d
HAVE_LINUX_SERIAL_H	utilities/modbus/config.h	43;"	d
HAVE_LOCALTIME_S	utilities/sqlite3/sqlite3.c	13615;"	d	file:
HAVE_MEMORY_H	utilities/modbus/config.h	46;"	d
HAVE_MEMSET	utilities/modbus/config.h	49;"	d
HAVE_NETDB_H	utilities/modbus/config.h	52;"	d
HAVE_NETINET_IN_H	utilities/modbus/config.h	55;"	d
HAVE_NETINET_TCP_H	utilities/modbus/config.h	58;"	d
HAVE_SELECT	utilities/modbus/config.h	61;"	d
HAVE_SOCKET	utilities/modbus/config.h	64;"	d
HAVE_STDINT_H	utilities/modbus/config.h	67;"	d
HAVE_STDLIB_H	utilities/modbus/config.h	70;"	d
HAVE_STRERROR	utilities/modbus/config.h	73;"	d
HAVE_STRINGS_H	utilities/modbus/config.h	76;"	d
HAVE_STRING_H	utilities/modbus/config.h	79;"	d
HAVE_SYS_IOCTL_H	utilities/modbus/config.h	85;"	d
HAVE_SYS_SOCKET_H	utilities/modbus/config.h	88;"	d
HAVE_SYS_STAT_H	utilities/modbus/config.h	91;"	d
HAVE_SYS_TIME_H	utilities/modbus/config.h	94;"	d
HAVE_SYS_TYPES_H	utilities/modbus/config.h	97;"	d
HAVE_TERMIOS_H	utilities/modbus/config.h	100;"	d
HAVE_TIME_H	utilities/modbus/config.h	103;"	d
HAVE_UNISTD_H	utilities/modbus/config.h	106;"	d
HAVE_VFORK	utilities/modbus/config.h	109;"	d
HAVE_WORKING_FORK	utilities/modbus/config.h	118;"	d
HAVE_WORKING_VFORK	utilities/modbus/config.h	121;"	d
HEX	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	335;"	d	file:
HEX	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	328;"	d	file:
HIBYTE	include/types.h	87;"	d
HIWORD	include/types.h	102;"	d
HMOD	include/def.h	/^typedef UINT HMOD;$/;"	t
Hash	utilities/sqlite3/sqlite3.c	/^struct Hash {$/;"	s	file:
Hash	utilities/sqlite3/sqlite3.c	/^typedef struct Hash Hash;$/;"	t	typeref:struct:Hash	file:
HashElem	utilities/sqlite3/sqlite3.c	/^struct HashElem {$/;"	s	file:
HashElem	utilities/sqlite3/sqlite3.c	/^typedef struct HashElem HashElem;$/;"	t	typeref:struct:HashElem	file:
ID_VOID_MAIN	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	9;"	d	file:
INCL_DOSDATETIME	utilities/sqlite3/sqlite3.c	9025;"	d	file:
INCL_DOSERRORS	utilities/sqlite3/sqlite3.c	9027;"	d	file:
INCL_DOSFILEMGR	utilities/sqlite3/sqlite3.c	9026;"	d	file:
INCL_DOSMISC	utilities/sqlite3/sqlite3.c	9028;"	d	file:
INCL_DOSMODULEMGR	utilities/sqlite3/sqlite3.c	9030;"	d	file:
INCL_DOSPROCESS	utilities/sqlite3/sqlite3.c	9029;"	d	file:
INCL_DOSSEMAPHORES	utilities/sqlite3/sqlite3.c	9031;"	d	file:
INIT_LOCK	include/def.h	35;"	d
INT16_TYPE	utilities/sqlite3/sqlite3.c	7678;"	d	file:
INT16_TYPE	utilities/sqlite3/sqlite3.c	7680;"	d	file:
INT8_TYPE	utilities/sqlite3/sqlite3.c	7692;"	d	file:
INT8_TYPE	utilities/sqlite3/sqlite3.c	7694;"	d	file:
INTERFACE	utilities/sqlite3/sqlite3.c	105681;"	d	file:
INVALID_FILE_ATTRIBUTES	utilities/sqlite3/sqlite3.c	31623;"	d	file:
INVALID_SET_FILE_POINTER	utilities/sqlite3/sqlite3.c	32591;"	d	file:
IN_DECLARE_VTAB	utilities/sqlite3/sqlite3.c	10915;"	d	file:
IN_DECLARE_VTAB	utilities/sqlite3/sqlite3.c	10917;"	d	file:
IN_INDEX_EPH	utilities/sqlite3/sqlite3.c	11794;"	d	file:
IN_INDEX_INDEX	utilities/sqlite3/sqlite3.c	11795;"	d	file:
IN_INDEX_ROWID	utilities/sqlite3/sqlite3.c	11793;"	d	file:
IOMETHODS	utilities/sqlite3/sqlite3.c	28842;"	d	file:
IOTRACE	utilities/sqlite3/sqlite3.c	11843;"	d	file:
IOTRACE	utilities/sqlite3/sqlite3.c	11847;"	d	file:
ISAUTOVACUUM	utilities/sqlite3/sqlite3.c	47953;"	d	file:
ISAUTOVACUUM	utilities/sqlite3/sqlite3.c	47955;"	d	file:
IS_BIG_INT	utilities/sqlite3/sqlite3.c	532;"	d	file:
IS_LOCK_ERROR	utilities/sqlite3/sqlite3.c	24550;"	d	file:
IcuCursor	utilities/sqlite3/sqlite3.c	/^struct IcuCursor {$/;"	s	file:
IcuCursor	utilities/sqlite3/sqlite3.c	/^typedef struct IcuCursor IcuCursor;$/;"	t	typeref:struct:IcuCursor	file:
IcuTokenizer	utilities/sqlite3/sqlite3.c	/^struct IcuTokenizer {$/;"	s	file:
IcuTokenizer	utilities/sqlite3/sqlite3.c	/^typedef struct IcuTokenizer IcuTokenizer;$/;"	t	typeref:struct:IcuTokenizer	file:
IdChar	utilities/sqlite3/sqlite3.c	109324;"	d	file:
IdChar	utilities/sqlite3/sqlite3.c	109342;"	d	file:
IdChar	utilities/sqlite3/sqlite3.c	109794;"	d	file:
IdChar	utilities/sqlite3/sqlite3.c	109798;"	d	file:
IdList	utilities/sqlite3/sqlite3.c	/^struct IdList {$/;"	s	file:
IdList	utilities/sqlite3/sqlite3.c	/^typedef struct IdList IdList;$/;"	t	typeref:struct:IdList	file:
IdList_item	utilities/sqlite3/sqlite3.c	/^  struct IdList_item {$/;"	s	struct:IdList	file:
IgnorableOrderby	utilities/sqlite3/sqlite3.c	10728;"	d	file:
InLoop	utilities/sqlite3/sqlite3.c	/^      struct InLoop {$/;"	s	struct:WhereLevel::__anon13::__anon14	file:
Incrblob	utilities/sqlite3/sqlite3.c	/^struct Incrblob {$/;"	s	file:
Incrblob	utilities/sqlite3/sqlite3.c	/^typedef struct Incrblob Incrblob;$/;"	t	typeref:struct:Incrblob	file:
Index	utilities/sqlite3/sqlite3.c	/^struct Index {$/;"	s	file:
Index	utilities/sqlite3/sqlite3.c	/^typedef struct Index Index;$/;"	t	typeref:struct:Index	file:
IndexSample	utilities/sqlite3/sqlite3.c	/^struct IndexSample {$/;"	s	file:
IndexSample	utilities/sqlite3/sqlite3.c	/^typedef struct IndexSample IndexSample;$/;"	t	typeref:struct:IndexSample	file:
InitData	utilities/sqlite3/sqlite3.c	/^} InitData;$/;"	t	typeref:struct:__anon15	file:
IntegrityCk	utilities/sqlite3/sqlite3.c	/^struct IntegrityCk {$/;"	s	file:
IntegrityCk	utilities/sqlite3/sqlite3.c	/^typedef struct IntegrityCk IntegrityCk;$/;"	t	typeref:struct:IntegrityCk	file:
IsHiddenColumn	utilities/sqlite3/sqlite3.c	9965;"	d	file:
IsHiddenColumn	utilities/sqlite3/sqlite3.c	9968;"	d	file:
IsVirtual	utilities/sqlite3/sqlite3.c	9964;"	d	file:
IsVirtual	utilities/sqlite3/sqlite3.c	9967;"	d	file:
JOURNAL_CHUNKSIZE	utilities/sqlite3/sqlite3.c	71429;"	d	file:
JOURNAL_HDR_SZ	utilities/sqlite3/sqlite3.c	38277;"	d	file:
JOURNAL_PG_SZ	utilities/sqlite3/sqlite3.c	38271;"	d	file:
JT_CROSS	utilities/sqlite3/sqlite3.c	10512;"	d	file:
JT_ERROR	utilities/sqlite3/sqlite3.c	10517;"	d	file:
JT_INNER	utilities/sqlite3/sqlite3.c	10511;"	d	file:
JT_LEFT	utilities/sqlite3/sqlite3.c	10514;"	d	file:
JT_NATURAL	utilities/sqlite3/sqlite3.c	10513;"	d	file:
JT_OUTER	utilities/sqlite3/sqlite3.c	10516;"	d	file:
JT_RIGHT	utilities/sqlite3/sqlite3.c	10515;"	d	file:
JournalFile	utilities/sqlite3/sqlite3.c	/^struct JournalFile {$/;"	s	file:
JournalFile	utilities/sqlite3/sqlite3.c	/^typedef struct JournalFile JournalFile;$/;"	t	typeref:struct:JournalFile	file:
JournalFileMethods	utilities/sqlite3/sqlite3.c	/^static struct sqlite3_io_methods JournalFileMethods = {$/;"	v	typeref:struct:sqlite3_io_methods	file:
KeyClass	utilities/sqlite3/sqlite3.c	/^typedef struct KeyClass KeyClass;$/;"	t	typeref:struct:KeyClass	file:
KeyInfo	utilities/sqlite3/sqlite3.c	/^struct KeyInfo {$/;"	s	file:
KeyInfo	utilities/sqlite3/sqlite3.c	/^typedef struct KeyInfo KeyInfo;$/;"	t	typeref:struct:KeyInfo	file:
LARGEST_INT64	utilities/sqlite3/sqlite3.c	7741;"	d	file:
LCS_ITERATOR_FINISHED	utilities/sqlite3/sqlite3.c	126401;"	d	file:
LIBMODBUS_VERSION	utilities/modbus/modbus-version.h	31;"	d
LIBMODBUS_VERSION_CHECK	utilities/modbus/modbus-version.h	44;"	d
LIBMODBUS_VERSION_HEX	utilities/modbus/modbus-version.h	38;"	d
LIBMODBUS_VERSION_MAJOR	utilities/modbus/modbus-version.h	22;"	d
LIBMODBUS_VERSION_MICRO	utilities/modbus/modbus-version.h	28;"	d
LIBMODBUS_VERSION_MINOR	utilities/modbus/modbus-version.h	25;"	d
LIBMODBUS_VERSION_STRING	utilities/modbus/modbus-version.h	35;"	d
LIKEFUNC	utilities/sqlite3/sqlite3.c	9697;"	d	file:
LOBYTE	include/types.h	80;"	d
LOCKFILE_FAIL_IMMEDIATELY	utilities/sqlite3/sqlite3.c	32886;"	d	file:
LOCK_TIMEOUT	utilities/sqlite3/sqlite3.c	22519;"	d	file:
LOGMAX	utilities/sqlite3/sqlite3.c	16262;"	d	file:
LONG	include/types.h	/^typedef long            LONG;$/;"	t
LONGDOUBLE_TYPE	utilities/sqlite3/sqlite3.c	7586;"	d	file:
LONGDOUBLE_TYPE	utilities/sqlite3/sqlite3.c	7698;"	d	file:
LOWORD	include/types.h	95;"	d
LPARAM	include/types.h	/^typedef DWORD           LPARAM;$/;"	t
LT_OBJDIR	utilities/modbus/config.h	125;"	d
LcsIterator	utilities/sqlite3/sqlite3.c	/^struct LcsIterator {$/;"	s	file:
LcsIterator	utilities/sqlite3/sqlite3.c	/^typedef struct LcsIterator LcsIterator;$/;"	t	typeref:struct:LcsIterator	file:
LikeOp	utilities/sqlite3/sqlite3.c	/^struct LikeOp {$/;"	s	file:
LimitVal	utilities/sqlite3/sqlite3.c	/^struct LimitVal {$/;"	s	file:
LinearPickNext	utilities/sqlite3/sqlite3.c	/^static RtreeCell *LinearPickNext($/;"	f	file:
LinearPickSeeds	utilities/sqlite3/sqlite3.c	/^static void LinearPickSeeds($/;"	f	file:
LoadDoclistCtx	utilities/sqlite3/sqlite3.c	/^struct LoadDoclistCtx {$/;"	s	file:
LoadDoclistCtx	utilities/sqlite3/sqlite3.c	/^typedef struct LoadDoclistCtx LoadDoclistCtx;$/;"	t	typeref:struct:LoadDoclistCtx	file:
LockFile	utilities/sqlite3/sqlite3.c	32296;"	d	file:
LockFileEx	utilities/sqlite3/sqlite3.c	32298;"	d	file:
Lookaside	utilities/sqlite3/sqlite3.c	/^struct Lookaside {$/;"	s	file:
Lookaside	utilities/sqlite3/sqlite3.c	/^typedef struct Lookaside Lookaside;$/;"	t	typeref:struct:Lookaside	file:
LookasideSlot	utilities/sqlite3/sqlite3.c	/^struct LookasideSlot {$/;"	s	file:
LookasideSlot	utilities/sqlite3/sqlite3.c	/^typedef struct LookasideSlot LookasideSlot;$/;"	t	typeref:struct:LookasideSlot	file:
M	utilities/sqlite3/sqlite3.c	/^  int Y, M, D;       \/* Year, month, and day *\/$/;"	m	struct:DateTime	file:
MASTER_NAME	utilities/sqlite3/sqlite3.c	7792;"	d	file:
MASTER_ROOT	utilities/sqlite3/sqlite3.c	7798;"	d	file:
MAX	utilities/sqlite3/sqlite3.c	127335;"	d	file:
MAX_6BYTE	utilities/sqlite3/sqlite3.c	60873;"	d	file:
MAX_MESSAGE_LENGTH	utilities/modbus/modbus.c	44;"	d	file:
MAX_PATHNAME	utilities/sqlite3/sqlite3.c	24544;"	d	file:
MAX_ROWID	utilities/sqlite3/sqlite3.c	67382;"	d	file:
MAX_SECTOR_SIZE	utilities/sqlite3/sqlite3.c	37961;"	d	file:
MEM5LINK	utilities/sqlite3/sqlite3.c	16325;"	d	file:
MEMCELLSIZE	utilities/sqlite3/sqlite3.c	57754;"	d	file:
MEMDB	utilities/sqlite3/sqlite3.c	38286;"	d	file:
MEMDB	utilities/sqlite3/sqlite3.c	38288;"	d	file:
MEMTYPE_DB	utilities/sqlite3/sqlite3.c	11892;"	d	file:
MEMTYPE_HEAP	utilities/sqlite3/sqlite3.c	11888;"	d	file:
MEMTYPE_LOOKASIDE	utilities/sqlite3/sqlite3.c	11889;"	d	file:
MEMTYPE_PCACHE	utilities/sqlite3/sqlite3.c	11891;"	d	file:
MEMTYPE_SCRATCH	utilities/sqlite3/sqlite3.c	11890;"	d	file:
MEM_Agg	utilities/sqlite3/sqlite3.c	12736;"	d	file:
MEM_Blob	utilities/sqlite3/sqlite3.c	12721;"	d	file:
MEM_Dyn	utilities/sqlite3/sqlite3.c	12733;"	d	file:
MEM_Ephem	utilities/sqlite3/sqlite3.c	12735;"	d	file:
MEM_Frame	utilities/sqlite3/sqlite3.c	12723;"	d	file:
MEM_Int	utilities/sqlite3/sqlite3.c	12719;"	d	file:
MEM_Invalid	utilities/sqlite3/sqlite3.c	12724;"	d	file:
MEM_Null	utilities/sqlite3/sqlite3.c	12717;"	d	file:
MEM_Real	utilities/sqlite3/sqlite3.c	12720;"	d	file:
MEM_RowSet	utilities/sqlite3/sqlite3.c	12722;"	d	file:
MEM_Static	utilities/sqlite3/sqlite3.c	12734;"	d	file:
MEM_Str	utilities/sqlite3/sqlite3.c	12718;"	d	file:
MEM_Term	utilities/sqlite3/sqlite3.c	12732;"	d	file:
MEM_TypeMask	utilities/sqlite3/sqlite3.c	12725;"	d	file:
MEM_Zero	utilities/sqlite3/sqlite3.c	12737;"	d	file:
MEM_Zero	utilities/sqlite3/sqlite3.c	12739;"	d	file:
MEM_Zero	utilities/sqlite3/sqlite3.c	12740;"	d	file:
MIN	utilities/sqlite3/sqlite3.c	114062;"	d	file:
MIN	utilities/sqlite3/sqlite3.c	127338;"	d	file:
MIN	utilities/sqlite3/sqlite3.c	56462;"	d	file:
MIN	utilities/sqlite3/sqlite3.c	71434;"	d	file:
MODBUS_BEGIN_DECLS	utilities/modbus/modbus.h	38;"	d
MODBUS_BEGIN_DECLS	utilities/modbus/modbus.h	41;"	d
MODBUS_BROADCAST_ADDRESS	utilities/modbus/modbus.h	63;"	d
MODBUS_END_DECLS	utilities/modbus/modbus.h	39;"	d
MODBUS_END_DECLS	utilities/modbus/modbus.h	42;"	d
MODBUS_ENOBASE	utilities/modbus/modbus.h	85;"	d
MODBUS_ERROR_RECOVERY_LINK	utilities/modbus/modbus.h	/^    MODBUS_ERROR_RECOVERY_LINK          = (1<<1),$/;"	e	enum:__anon4
MODBUS_ERROR_RECOVERY_NONE	utilities/modbus/modbus.h	/^    MODBUS_ERROR_RECOVERY_NONE          = 0,$/;"	e	enum:__anon4
MODBUS_ERROR_RECOVERY_PROTOCOL	utilities/modbus/modbus.h	/^    MODBUS_ERROR_RECOVERY_PROTOCOL      = (1<<2),$/;"	e	enum:__anon4
MODBUS_EXCEPTION_ACKNOWLEDGE	utilities/modbus/modbus.h	/^    MODBUS_EXCEPTION_ACKNOWLEDGE,$/;"	e	enum:__anon2
MODBUS_EXCEPTION_GATEWAY_PATH	utilities/modbus/modbus.h	/^    MODBUS_EXCEPTION_GATEWAY_PATH,$/;"	e	enum:__anon2
MODBUS_EXCEPTION_GATEWAY_TARGET	utilities/modbus/modbus.h	/^    MODBUS_EXCEPTION_GATEWAY_TARGET,$/;"	e	enum:__anon2
MODBUS_EXCEPTION_ILLEGAL_DATA_ADDRESS	utilities/modbus/modbus.h	/^    MODBUS_EXCEPTION_ILLEGAL_DATA_ADDRESS,$/;"	e	enum:__anon2
MODBUS_EXCEPTION_ILLEGAL_DATA_VALUE	utilities/modbus/modbus.h	/^    MODBUS_EXCEPTION_ILLEGAL_DATA_VALUE,$/;"	e	enum:__anon2
MODBUS_EXCEPTION_ILLEGAL_FUNCTION	utilities/modbus/modbus.h	/^    MODBUS_EXCEPTION_ILLEGAL_FUNCTION = 0x01,$/;"	e	enum:__anon2
MODBUS_EXCEPTION_MAX	utilities/modbus/modbus.h	/^    MODBUS_EXCEPTION_MAX$/;"	e	enum:__anon2
MODBUS_EXCEPTION_MEMORY_PARITY	utilities/modbus/modbus.h	/^    MODBUS_EXCEPTION_MEMORY_PARITY,$/;"	e	enum:__anon2
MODBUS_EXCEPTION_NEGATIVE_ACKNOWLEDGE	utilities/modbus/modbus.h	/^    MODBUS_EXCEPTION_NEGATIVE_ACKNOWLEDGE,$/;"	e	enum:__anon2
MODBUS_EXCEPTION_NOT_DEFINED	utilities/modbus/modbus.h	/^    MODBUS_EXCEPTION_NOT_DEFINED,$/;"	e	enum:__anon2
MODBUS_EXCEPTION_SLAVE_OR_SERVER_BUSY	utilities/modbus/modbus.h	/^    MODBUS_EXCEPTION_SLAVE_OR_SERVER_BUSY,$/;"	e	enum:__anon2
MODBUS_EXCEPTION_SLAVE_OR_SERVER_FAILURE	utilities/modbus/modbus.h	/^    MODBUS_EXCEPTION_SLAVE_OR_SERVER_FAILURE,$/;"	e	enum:__anon2
MODBUS_GET_HIGH_BYTE	utilities/modbus/modbus.h	201;"	d
MODBUS_GET_INT16_FROM_INT8	utilities/modbus/modbus.h	204;"	d
MODBUS_GET_INT32_FROM_INT16	utilities/modbus/modbus.h	203;"	d
MODBUS_GET_LOW_BYTE	utilities/modbus/modbus.h	202;"	d
MODBUS_MAX_READ_BITS	utilities/modbus/modbus.h	70;"	d
MODBUS_MAX_READ_REGISTERS	utilities/modbus/modbus.h	80;"	d
MODBUS_MAX_RW_WRITE_REGISTERS	utilities/modbus/modbus.h	82;"	d
MODBUS_MAX_WRITE_BITS	utilities/modbus/modbus.h	71;"	d
MODBUS_MAX_WRITE_REGISTERS	utilities/modbus/modbus.h	81;"	d
MODBUS_RTU_MAX_ADU_LENGTH	utilities/modbus/modbus-rtu.h	29;"	d
MODBUS_RTU_RS232	utilities/modbus/modbus-rtu.h	34;"	d
MODBUS_RTU_RS485	utilities/modbus/modbus-rtu.h	35;"	d
MODBUS_SET_INT16_TO_INT8	utilities/modbus/modbus.h	205;"	d
MODBUS_TCP_DEFAULT_PORT	utilities/modbus/modbus-tcp.h	35;"	d
MODBUS_TCP_MAX_ADU_LENGTH	utilities/modbus/modbus-tcp.h	41;"	d
MODBUS_TCP_SLAVE	utilities/modbus/modbus-tcp.h	36;"	d
MSGQUEUE_MAX	include/def.h	32;"	d
MSG_COMMAND	include/message.h	38;"	d
MSG_CONFIRMATION	utilities/modbus/modbus.c	/^    MSG_CONFIRMATION$/;"	e	enum:__anon6	file:
MSG_INDICATION	utilities/modbus/modbus.c	/^    MSG_INDICATION,$/;"	e	enum:__anon6	file:
MSG_INIT	include/message.h	24;"	d
MSG_LENGTH_UNDEFINED	utilities/modbus/modbus.c	36;"	d	file:
MSG_NOSIGNAL	utilities/modbus/modbus-tcp.c	57;"	d	file:
MSG_TIMER	include/message.h	29;"	d
MX_CELL	utilities/sqlite3/sqlite3.c	47566;"	d	file:
MX_CELL_SIZE	utilities/sqlite3/sqlite3.c	47559;"	d	file:
MX_CLOSE_ATTEMPT	utilities/sqlite3/sqlite3.c	32634;"	d	file:
MX_SMALL	utilities/sqlite3/sqlite3.c	15535;"	d	file:
MatchInfo	utilities/sqlite3/sqlite3.c	/^struct MatchInfo {$/;"	s	file:
MatchInfo	utilities/sqlite3/sqlite3.c	/^typedef struct MatchInfo MatchInfo;$/;"	t	typeref:struct:MatchInfo	file:
Mem	utilities/sqlite3/sqlite3.c	/^struct Mem {$/;"	s	file:
Mem	utilities/sqlite3/sqlite3.c	/^typedef struct Mem Mem;$/;"	t	typeref:struct:Mem	file:
Mem0Global	utilities/sqlite3/sqlite3.c	/^static SQLITE_WSD struct Mem0Global {$/;"	s	file:
Mem3Block	utilities/sqlite3/sqlite3.c	/^struct Mem3Block {$/;"	s	file:
Mem3Block	utilities/sqlite3/sqlite3.c	/^typedef struct Mem3Block Mem3Block;$/;"	t	typeref:struct:Mem3Block	file:
Mem3Global	utilities/sqlite3/sqlite3.c	/^static SQLITE_WSD struct Mem3Global {$/;"	s	file:
Mem5Global	utilities/sqlite3/sqlite3.c	/^static SQLITE_WSD struct Mem5Global {$/;"	s	file:
Mem5Link	utilities/sqlite3/sqlite3.c	/^struct Mem5Link {$/;"	s	file:
Mem5Link	utilities/sqlite3/sqlite3.c	/^typedef struct Mem5Link Mem5Link;$/;"	t	typeref:struct:Mem5Link	file:
MemBlockHdr	utilities/sqlite3/sqlite3.c	/^struct MemBlockHdr {$/;"	s	file:
MemJournal	utilities/sqlite3/sqlite3.c	/^struct MemJournal {$/;"	s	file:
MemJournal	utilities/sqlite3/sqlite3.c	/^typedef struct MemJournal MemJournal;$/;"	t	typeref:struct:MemJournal	file:
MemJournalMethods	utilities/sqlite3/sqlite3.c	/^static const struct sqlite3_io_methods MemJournalMethods = {$/;"	v	typeref:struct:sqlite3_io_methods	file:
MemPage	utilities/sqlite3/sqlite3.c	/^struct MemPage {$/;"	s	file:
MemPage	utilities/sqlite3/sqlite3.c	/^typedef struct MemPage MemPage;$/;"	t	typeref:struct:MemPage	file:
MemReleaseExt	utilities/sqlite3/sqlite3.c	12928;"	d	file:
MemSetTypeFlag	utilities/sqlite3/sqlite3.c	12746;"	d	file:
Module	utilities/sqlite3/sqlite3.c	/^struct Module {$/;"	s	file:
Module	utilities/sqlite3/sqlite3.c	/^typedef struct Module Module;$/;"	t	typeref:struct:Module	file:
NAME	src/application/daemon.c	20;"	d	file:
NB	utilities/sqlite3/sqlite3.c	53859;"	d	file:
NCELL	utilities/sqlite3/sqlite3.c	127290;"	d	file:
NCSIZE	utilities/sqlite3/sqlite3.c	15039;"	d	file:
NDEBUG	utilities/sqlite3/sqlite3.c	113743;"	d	file:
NDEBUG	utilities/sqlite3/sqlite3.c	114138;"	d	file:
NDEBUG	utilities/sqlite3/sqlite3.c	127123;"	d	file:
NDEBUG	utilities/sqlite3/sqlite3.c	452;"	d	file:
NDELAY	utilities/sqlite3/sqlite3.c	111049;"	d	file:
NEVER	utilities/sqlite3/sqlite3.c	114115;"	d	file:
NEVER	utilities/sqlite3/sqlite3.c	114118;"	d	file:
NEVER	utilities/sqlite3/sqlite3.c	518;"	d	file:
NEVER	utilities/sqlite3/sqlite3.c	521;"	d	file:
NEVER	utilities/sqlite3/sqlite3.c	524;"	d	file:
NN	utilities/sqlite3/sqlite3.c	53858;"	d	file:
NOW	include/def.h	33;"	d
NO_LOCK	utilities/sqlite3/sqlite3.c	9095;"	d	file:
N_HASH	utilities/sqlite3/sqlite3.c	15541;"	d	file:
N_SORT_BUCKET	utilities/sqlite3/sqlite3.c	35666;"	d	file:
N_STATEMENT	utilities/sqlite3/sqlite3.c	129911;"	d	file:
NameContext	utilities/sqlite3/sqlite3.c	/^struct NameContext {$/;"	s	file:
NameContext	utilities/sqlite3/sqlite3.c	/^typedef struct NameContext NameContext;$/;"	t	typeref:struct:NameContext	file:
OBJ_ANY	utilities/sqlite3/sqlite3.c	22526;"	d	file:
OBJ_NAME_MAX	include/def.h	30;"	d
OE_Abort	utilities/sqlite3/sqlite3.c	10034;"	d	file:
OE_Cascade	utilities/sqlite3/sqlite3.c	10042;"	d	file:
OE_Default	utilities/sqlite3/sqlite3.c	10044;"	d	file:
OE_Fail	utilities/sqlite3/sqlite3.c	10035;"	d	file:
OE_Ignore	utilities/sqlite3/sqlite3.c	10036;"	d	file:
OE_None	utilities/sqlite3/sqlite3.c	10032;"	d	file:
OE_Replace	utilities/sqlite3/sqlite3.c	10037;"	d	file:
OE_Restrict	utilities/sqlite3/sqlite3.c	10039;"	d	file:
OE_Rollback	utilities/sqlite3/sqlite3.c	10033;"	d	file:
OE_SetDflt	utilities/sqlite3/sqlite3.c	10041;"	d	file:
OE_SetNull	utilities/sqlite3/sqlite3.c	10040;"	d	file:
OFF	utilities/modbus/modbus.h	56;"	d
OFFLINE	include/def.h	28;"	d
OMIT_TEMPDB	utilities/sqlite3/sqlite3.c	7605;"	d	file:
OMIT_TEMPDB	utilities/sqlite3/sqlite3.c	7607;"	d	file:
ON	utilities/modbus/modbus.h	60;"	d
ONLINE	include/def.h	27;"	d
OPFLAG_APPEND	utilities/sqlite3/sqlite3.c	10935;"	d	file:
OPFLAG_CLEARCACHE	utilities/sqlite3/sqlite3.c	10937;"	d	file:
OPFLAG_ISUPDATE	utilities/sqlite3/sqlite3.c	10934;"	d	file:
OPFLAG_LASTROWID	utilities/sqlite3/sqlite3.c	10933;"	d	file:
OPFLAG_NCHANGE	utilities/sqlite3/sqlite3.c	10932;"	d	file:
OPFLAG_USESEEKRESULT	utilities/sqlite3/sqlite3.c	10936;"	d	file:
OPFLG_IN1	utilities/sqlite3/sqlite3.c	8486;"	d	file:
OPFLG_IN2	utilities/sqlite3/sqlite3.c	8487;"	d	file:
OPFLG_IN3	utilities/sqlite3/sqlite3.c	8488;"	d	file:
OPFLG_INITIALIZER	utilities/sqlite3/sqlite3.c	8491;"	d	file:
OPFLG_JUMP	utilities/sqlite3/sqlite3.c	8484;"	d	file:
OPFLG_OUT2	utilities/sqlite3/sqlite3.c	8489;"	d	file:
OPFLG_OUT2_PRERELEASE	utilities/sqlite3/sqlite3.c	8485;"	d	file:
OPFLG_OUT3	utilities/sqlite3/sqlite3.c	8490;"	d	file:
OP_Add	utilities/sqlite3/sqlite3.c	8347;"	d	file:
OP_AddImm	utilities/sqlite3/sqlite3.c	8358;"	d	file:
OP_Affinity	utilities/sqlite3/sqlite3.c	8385;"	d	file:
OP_AggFinal	utilities/sqlite3/sqlite3.c	8457;"	d	file:
OP_AggStep	utilities/sqlite3/sqlite3.c	8456;"	d	file:
OP_And	utilities/sqlite3/sqlite3.c	8375;"	d	file:
OP_AutoCommit	utilities/sqlite3/sqlite3.c	8389;"	d	file:
OP_BitAnd	utilities/sqlite3/sqlite3.c	8354;"	d	file:
OP_BitNot	utilities/sqlite3/sqlite3.c	8378;"	d	file:
OP_BitOr	utilities/sqlite3/sqlite3.c	8355;"	d	file:
OP_Blob	utilities/sqlite3/sqlite3.c	8340;"	d	file:
OP_Checkpoint	utilities/sqlite3/sqlite3.c	8458;"	d	file:
OP_Clear	utilities/sqlite3/sqlite3.c	8436;"	d	file:
OP_Close	utilities/sqlite3/sqlite3.c	8400;"	d	file:
OP_CollSeq	utilities/sqlite3/sqlite3.c	8352;"	d	file:
OP_Column	utilities/sqlite3/sqlite3.c	8384;"	d	file:
OP_Compare	utilities/sqlite3/sqlite3.c	8373;"	d	file:
OP_Concat	utilities/sqlite3/sqlite3.c	8346;"	d	file:
OP_Copy	utilities/sqlite3/sqlite3.c	8343;"	d	file:
OP_Count	utilities/sqlite3/sqlite3.c	8387;"	d	file:
OP_CreateIndex	utilities/sqlite3/sqlite3.c	8437;"	d	file:
OP_CreateTable	utilities/sqlite3/sqlite3.c	8438;"	d	file:
OP_Delete	utilities/sqlite3/sqlite3.c	8414;"	d	file:
OP_Destroy	utilities/sqlite3/sqlite3.c	8435;"	d	file:
OP_Divide	utilities/sqlite3/sqlite3.c	8350;"	d	file:
OP_DropIndex	utilities/sqlite3/sqlite3.c	8442;"	d	file:
OP_DropTable	utilities/sqlite3/sqlite3.c	8441;"	d	file:
OP_DropTrigger	utilities/sqlite3/sqlite3.c	8443;"	d	file:
OP_Eq	utilities/sqlite3/sqlite3.c	8366;"	d	file:
OP_Expire	utilities/sqlite3/sqlite3.c	8462;"	d	file:
OP_Explain	utilities/sqlite3/sqlite3.c	8477;"	d	file:
OP_FkCounter	utilities/sqlite3/sqlite3.c	8450;"	d	file:
OP_FkIfZero	utilities/sqlite3/sqlite3.c	8451;"	d	file:
OP_Found	utilities/sqlite3/sqlite3.c	8407;"	d	file:
OP_Function	utilities/sqlite3/sqlite3.c	8353;"	d	file:
OP_Ge	utilities/sqlite3/sqlite3.c	8371;"	d	file:
OP_Gosub	utilities/sqlite3/sqlite3.c	8329;"	d	file:
OP_Goto	utilities/sqlite3/sqlite3.c	8328;"	d	file:
OP_Gt	utilities/sqlite3/sqlite3.c	8370;"	d	file:
OP_Halt	utilities/sqlite3/sqlite3.c	8333;"	d	file:
OP_HaltIfNull	utilities/sqlite3/sqlite3.c	8332;"	d	file:
OP_IdxDelete	utilities/sqlite3/sqlite3.c	8431;"	d	file:
OP_IdxGE	utilities/sqlite3/sqlite3.c	8434;"	d	file:
OP_IdxInsert	utilities/sqlite3/sqlite3.c	8430;"	d	file:
OP_IdxLT	utilities/sqlite3/sqlite3.c	8433;"	d	file:
OP_IdxRowid	utilities/sqlite3/sqlite3.c	8432;"	d	file:
OP_If	utilities/sqlite3/sqlite3.c	8380;"	d	file:
OP_IfNeg	utilities/sqlite3/sqlite3.c	8454;"	d	file:
OP_IfNot	utilities/sqlite3/sqlite3.c	8381;"	d	file:
OP_IfPos	utilities/sqlite3/sqlite3.c	8453;"	d	file:
OP_IfZero	utilities/sqlite3/sqlite3.c	8455;"	d	file:
OP_IncrVacuum	utilities/sqlite3/sqlite3.c	8461;"	d	file:
OP_Insert	utilities/sqlite3/sqlite3.c	8412;"	d	file:
OP_InsertInt	utilities/sqlite3/sqlite3.c	8413;"	d	file:
OP_Int64	utilities/sqlite3/sqlite3.c	8335;"	d	file:
OP_Integer	utilities/sqlite3/sqlite3.c	8334;"	d	file:
OP_IntegrityCk	utilities/sqlite3/sqlite3.c	8444;"	d	file:
OP_IsNull	utilities/sqlite3/sqlite3.c	8382;"	d	file:
OP_IsUnique	utilities/sqlite3/sqlite3.c	8408;"	d	file:
OP_JournalMode	utilities/sqlite3/sqlite3.c	8459;"	d	file:
OP_Jump	utilities/sqlite3/sqlite3.c	8374;"	d	file:
OP_Last	utilities/sqlite3/sqlite3.c	8422;"	d	file:
OP_Le	utilities/sqlite3/sqlite3.c	8369;"	d	file:
OP_LoadAnalysis	utilities/sqlite3/sqlite3.c	8440;"	d	file:
OP_Lt	utilities/sqlite3/sqlite3.c	8368;"	d	file:
OP_MakeRecord	utilities/sqlite3/sqlite3.c	8386;"	d	file:
OP_MaxPgcnt	utilities/sqlite3/sqlite3.c	8474;"	d	file:
OP_MemMax	utilities/sqlite3/sqlite3.c	8452;"	d	file:
OP_Move	utilities/sqlite3/sqlite3.c	8342;"	d	file:
OP_Multiply	utilities/sqlite3/sqlite3.c	8349;"	d	file:
OP_MustBeInt	utilities/sqlite3/sqlite3.c	8359;"	d	file:
OP_Ne	utilities/sqlite3/sqlite3.c	8367;"	d	file:
OP_NewRowid	utilities/sqlite3/sqlite3.c	8411;"	d	file:
OP_Next	utilities/sqlite3/sqlite3.c	8428;"	d	file:
OP_Noop	utilities/sqlite3/sqlite3.c	8476;"	d	file:
OP_Not	utilities/sqlite3/sqlite3.c	8377;"	d	file:
OP_NotExists	utilities/sqlite3/sqlite3.c	8409;"	d	file:
OP_NotFound	utilities/sqlite3/sqlite3.c	8406;"	d	file:
OP_NotNull	utilities/sqlite3/sqlite3.c	8383;"	d	file:
OP_Null	utilities/sqlite3/sqlite3.c	8339;"	d	file:
OP_NullRow	utilities/sqlite3/sqlite3.c	8421;"	d	file:
OP_Once	utilities/sqlite3/sqlite3.c	8379;"	d	file:
OP_OpenAutoindex	utilities/sqlite3/sqlite3.c	8396;"	d	file:
OP_OpenEphemeral	utilities/sqlite3/sqlite3.c	8397;"	d	file:
OP_OpenPseudo	utilities/sqlite3/sqlite3.c	8399;"	d	file:
OP_OpenRead	utilities/sqlite3/sqlite3.c	8394;"	d	file:
OP_OpenWrite	utilities/sqlite3/sqlite3.c	8395;"	d	file:
OP_Or	utilities/sqlite3/sqlite3.c	8376;"	d	file:
OP_Pagecount	utilities/sqlite3/sqlite3.c	8473;"	d	file:
OP_Param	utilities/sqlite3/sqlite3.c	8449;"	d	file:
OP_ParseSchema	utilities/sqlite3/sqlite3.c	8439;"	d	file:
OP_Permutation	utilities/sqlite3/sqlite3.c	8372;"	d	file:
OP_Prev	utilities/sqlite3/sqlite3.c	8427;"	d	file:
OP_Program	utilities/sqlite3/sqlite3.c	8448;"	d	file:
OP_ReadCookie	utilities/sqlite3/sqlite3.c	8391;"	d	file:
OP_Real	utilities/sqlite3/sqlite3.c	8336;"	d	file:
OP_RealAffinity	utilities/sqlite3/sqlite3.c	8360;"	d	file:
OP_Remainder	utilities/sqlite3/sqlite3.c	8351;"	d	file:
OP_ResetCount	utilities/sqlite3/sqlite3.c	8415;"	d	file:
OP_ResultRow	utilities/sqlite3/sqlite3.c	8345;"	d	file:
OP_Return	utilities/sqlite3/sqlite3.c	8330;"	d	file:
OP_Rewind	utilities/sqlite3/sqlite3.c	8425;"	d	file:
OP_RowData	utilities/sqlite3/sqlite3.c	8419;"	d	file:
OP_RowKey	utilities/sqlite3/sqlite3.c	8418;"	d	file:
OP_RowSetAdd	utilities/sqlite3/sqlite3.c	8445;"	d	file:
OP_RowSetRead	utilities/sqlite3/sqlite3.c	8446;"	d	file:
OP_RowSetTest	utilities/sqlite3/sqlite3.c	8447;"	d	file:
OP_Rowid	utilities/sqlite3/sqlite3.c	8420;"	d	file:
OP_SCopy	utilities/sqlite3/sqlite3.c	8344;"	d	file:
OP_Savepoint	utilities/sqlite3/sqlite3.c	8388;"	d	file:
OP_Seek	utilities/sqlite3/sqlite3.c	8405;"	d	file:
OP_SeekGe	utilities/sqlite3/sqlite3.c	8403;"	d	file:
OP_SeekGt	utilities/sqlite3/sqlite3.c	8404;"	d	file:
OP_SeekLe	utilities/sqlite3/sqlite3.c	8402;"	d	file:
OP_SeekLt	utilities/sqlite3/sqlite3.c	8401;"	d	file:
OP_Sequence	utilities/sqlite3/sqlite3.c	8410;"	d	file:
OP_SetCookie	utilities/sqlite3/sqlite3.c	8392;"	d	file:
OP_ShiftLeft	utilities/sqlite3/sqlite3.c	8356;"	d	file:
OP_ShiftRight	utilities/sqlite3/sqlite3.c	8357;"	d	file:
OP_Sort	utilities/sqlite3/sqlite3.c	8424;"	d	file:
OP_SorterCompare	utilities/sqlite3/sqlite3.c	8416;"	d	file:
OP_SorterData	utilities/sqlite3/sqlite3.c	8417;"	d	file:
OP_SorterInsert	utilities/sqlite3/sqlite3.c	8429;"	d	file:
OP_SorterNext	utilities/sqlite3/sqlite3.c	8426;"	d	file:
OP_SorterOpen	utilities/sqlite3/sqlite3.c	8398;"	d	file:
OP_SorterSort	utilities/sqlite3/sqlite3.c	8423;"	d	file:
OP_String	utilities/sqlite3/sqlite3.c	8338;"	d	file:
OP_String8	utilities/sqlite3/sqlite3.c	8337;"	d	file:
OP_Subtract	utilities/sqlite3/sqlite3.c	8348;"	d	file:
OP_TableLock	utilities/sqlite3/sqlite3.c	8463;"	d	file:
OP_ToBlob	utilities/sqlite3/sqlite3.c	8362;"	d	file:
OP_ToInt	utilities/sqlite3/sqlite3.c	8364;"	d	file:
OP_ToNumeric	utilities/sqlite3/sqlite3.c	8363;"	d	file:
OP_ToReal	utilities/sqlite3/sqlite3.c	8365;"	d	file:
OP_ToText	utilities/sqlite3/sqlite3.c	8361;"	d	file:
OP_Trace	utilities/sqlite3/sqlite3.c	8475;"	d	file:
OP_Transaction	utilities/sqlite3/sqlite3.c	8390;"	d	file:
OP_VBegin	utilities/sqlite3/sqlite3.c	8464;"	d	file:
OP_VColumn	utilities/sqlite3/sqlite3.c	8469;"	d	file:
OP_VCreate	utilities/sqlite3/sqlite3.c	8465;"	d	file:
OP_VDestroy	utilities/sqlite3/sqlite3.c	8466;"	d	file:
OP_VFilter	utilities/sqlite3/sqlite3.c	8468;"	d	file:
OP_VNext	utilities/sqlite3/sqlite3.c	8470;"	d	file:
OP_VOpen	utilities/sqlite3/sqlite3.c	8467;"	d	file:
OP_VRename	utilities/sqlite3/sqlite3.c	8471;"	d	file:
OP_VUpdate	utilities/sqlite3/sqlite3.c	8472;"	d	file:
OP_Vacuum	utilities/sqlite3/sqlite3.c	8460;"	d	file:
OP_Variable	utilities/sqlite3/sqlite3.c	8341;"	d	file:
OP_VerifyCookie	utilities/sqlite3/sqlite3.c	8393;"	d	file:
OP_Yield	utilities/sqlite3/sqlite3.c	8331;"	d	file:
OS2_SHM_BASE	utilities/sqlite3/sqlite3.c	23258;"	d	file:
OS2_SHM_BASE	utilities/sqlite3/sqlite3.c	23260;"	d	file:
OS2_SHM_DMS	utilities/sqlite3/sqlite3.c	23263;"	d	file:
OSTRACE	utilities/sqlite3/sqlite3.c	22328;"	d	file:
OSTRACE	utilities/sqlite3/sqlite3.c	22330;"	d	file:
OSTRACE	utilities/sqlite3/sqlite3.c	24670;"	d	file:
OSTRACE	utilities/sqlite3/sqlite3.c	24672;"	d	file:
OSTRACE	utilities/sqlite3/sqlite3.c	31447;"	d	file:
OSTRACE	utilities/sqlite3/sqlite3.c	31449;"	d	file:
OS_BSD	utilities/modbus/modbus-tcp.c	44;"	d	file:
OS_VXWORKS	utilities/sqlite3/sqlite3.c	24448;"	d	file:
OS_VXWORKS	utilities/sqlite3/sqlite3.c	24450;"	d	file:
OS_WIN32	utilities/modbus/modbus-tcp.c	30;"	d	file:
O_BINARY	utilities/sqlite3/sqlite3.c	24856;"	d	file:
O_LARGEFILE	utilities/sqlite3/sqlite3.c	24846;"	d	file:
O_LARGEFILE	utilities/sqlite3/sqlite3.c	24849;"	d	file:
O_LARGEFILE	utilities/sqlite3/sqlite3.c	24850;"	d	file:
O_NOFOLLOW	utilities/sqlite3/sqlite3.c	24853;"	d	file:
Op	utilities/sqlite3/sqlite3.c	/^typedef struct VdbeOp Op;$/;"	t	typeref:struct:VdbeOp	file:
OpenCounter	utilities/sqlite3/sqlite3.c	22490;"	d	file:
OpenCounter	utilities/sqlite3/sqlite3.c	22492;"	d	file:
OpenCounter	utilities/sqlite3/sqlite3.c	24832;"	d	file:
OpenCounter	utilities/sqlite3/sqlite3.c	24834;"	d	file:
OpenCounter	utilities/sqlite3/sqlite3.c	31609;"	d	file:
OpenCounter	utilities/sqlite3/sqlite3.c	31611;"	d	file:
P4_ADVANCE	utilities/sqlite3/sqlite3.c	8281;"	d	file:
P4_COLLSEQ	utilities/sqlite3/sqlite3.c	8268;"	d	file:
P4_DYNAMIC	utilities/sqlite3/sqlite3.c	8266;"	d	file:
P4_FUNCDEF	utilities/sqlite3/sqlite3.c	8269;"	d	file:
P4_INT32	utilities/sqlite3/sqlite3.c	8278;"	d	file:
P4_INT64	utilities/sqlite3/sqlite3.c	8277;"	d	file:
P4_INTARRAY	utilities/sqlite3/sqlite3.c	8279;"	d	file:
P4_KEYINFO	utilities/sqlite3/sqlite3.c	8270;"	d	file:
P4_KEYINFO_HANDOFF	utilities/sqlite3/sqlite3.c	8290;"	d	file:
P4_KEYINFO_STATIC	utilities/sqlite3/sqlite3.c	8291;"	d	file:
P4_MEM	utilities/sqlite3/sqlite3.c	8272;"	d	file:
P4_MPRINTF	utilities/sqlite3/sqlite3.c	8275;"	d	file:
P4_NOTUSED	utilities/sqlite3/sqlite3.c	8265;"	d	file:
P4_REAL	utilities/sqlite3/sqlite3.c	8276;"	d	file:
P4_STATIC	utilities/sqlite3/sqlite3.c	8267;"	d	file:
P4_SUBPROGRAM	utilities/sqlite3/sqlite3.c	8280;"	d	file:
P4_TRANSIENT	utilities/sqlite3/sqlite3.c	8273;"	d	file:
P4_VDBEFUNC	utilities/sqlite3/sqlite3.c	8271;"	d	file:
P4_VTAB	utilities/sqlite3/sqlite3.c	8274;"	d	file:
PACKAGE	utilities/modbus/config.h	128;"	d
PACKAGE_BUGREPORT	utilities/modbus/config.h	131;"	d
PACKAGE_NAME	utilities/modbus/config.h	134;"	d
PACKAGE_STRING	utilities/modbus/config.h	137;"	d
PACKAGE_TARNAME	utilities/modbus/config.h	140;"	d
PACKAGE_URL	utilities/modbus/config.h	143;"	d
PACKAGE_VERSION	utilities/modbus/config.h	146;"	d
PAGECACHE_BLOCKALLOC_MINENTRY	utilities/sqlite3/sqlite3.c	35884;"	d	file:
PAGERID	utilities/sqlite3/sqlite3.c	37663;"	d	file:
PAGERTRACE	utilities/sqlite3/sqlite3.c	37652;"	d	file:
PAGER_ERROR	utilities/sqlite3/sqlite3.c	37889;"	d	file:
PAGER_INCR	utilities/sqlite3/sqlite3.c	38233;"	d	file:
PAGER_INCR	utilities/sqlite3/sqlite3.c	38235;"	d	file:
PAGER_JOURNALMODE_DELETE	utilities/sqlite3/sqlite3.c	8664;"	d	file:
PAGER_JOURNALMODE_MEMORY	utilities/sqlite3/sqlite3.c	8668;"	d	file:
PAGER_JOURNALMODE_OFF	utilities/sqlite3/sqlite3.c	8666;"	d	file:
PAGER_JOURNALMODE_PERSIST	utilities/sqlite3/sqlite3.c	8665;"	d	file:
PAGER_JOURNALMODE_QUERY	utilities/sqlite3/sqlite3.c	8663;"	d	file:
PAGER_JOURNALMODE_TRUNCATE	utilities/sqlite3/sqlite3.c	8667;"	d	file:
PAGER_JOURNALMODE_WAL	utilities/sqlite3/sqlite3.c	8669;"	d	file:
PAGER_LOCKINGMODE_EXCLUSIVE	utilities/sqlite3/sqlite3.c	8658;"	d	file:
PAGER_LOCKINGMODE_NORMAL	utilities/sqlite3/sqlite3.c	8657;"	d	file:
PAGER_LOCKINGMODE_QUERY	utilities/sqlite3/sqlite3.c	8656;"	d	file:
PAGER_MAX_PGNO	utilities/sqlite3/sqlite3.c	38294;"	d	file:
PAGER_MEMORY	utilities/sqlite3/sqlite3.c	8651;"	d	file:
PAGER_MJ_PGNO	utilities/sqlite3/sqlite3.c	8642;"	d	file:
PAGER_NO_READLOCK	utilities/sqlite3/sqlite3.c	8650;"	d	file:
PAGER_OMIT_JOURNAL	utilities/sqlite3/sqlite3.c	8649;"	d	file:
PAGER_OPEN	utilities/sqlite3/sqlite3.c	37883;"	d	file:
PAGER_READER	utilities/sqlite3/sqlite3.c	37884;"	d	file:
PAGER_WRITER_CACHEMOD	utilities/sqlite3/sqlite3.c	37886;"	d	file:
PAGER_WRITER_DBMOD	utilities/sqlite3/sqlite3.c	37887;"	d	file:
PAGER_WRITER_FINISHED	utilities/sqlite3/sqlite3.c	37888;"	d	file:
PAGER_WRITER_LOCKED	utilities/sqlite3/sqlite3.c	37885;"	d	file:
PAGE_GET_BLOCKPTR	utilities/sqlite3/sqlite3.c	35996;"	d	file:
PAGE_SET_BLOCKPTR	utilities/sqlite3/sqlite3.c	35993;"	d	file:
PAGE_TO_PGHDR1	utilities/sqlite3/sqlite3.c	35987;"	d	file:
PCache	utilities/sqlite3/sqlite3.c	/^struct PCache {$/;"	s	file:
PCache	utilities/sqlite3/sqlite3.c	/^typedef struct PCache PCache;$/;"	t	typeref:struct:PCache	file:
PCache1	utilities/sqlite3/sqlite3.c	/^struct PCache1 {$/;"	s	file:
PCache1	utilities/sqlite3/sqlite3.c	/^typedef struct PCache1 PCache1;$/;"	t	typeref:struct:PCache1	file:
PCacheGlobal	utilities/sqlite3/sqlite3.c	/^static SQLITE_WSD struct PCacheGlobal {$/;"	s	file:
PENDING_BYTE	utilities/sqlite3/sqlite3.c	9157;"	d	file:
PENDING_BYTE	utilities/sqlite3/sqlite3.c	9159;"	d	file:
PENDING_BYTE_PAGE	utilities/sqlite3/sqlite3.c	47879;"	d	file:
PENDING_LOCK	utilities/sqlite3/sqlite3.c	9098;"	d	file:
PGHDR1_TO_PAGE	utilities/sqlite3/sqlite3.c	35986;"	d	file:
PGHDR_DIRTY	utilities/sqlite3/sqlite3.c	8823;"	d	file:
PGHDR_DONT_WRITE	utilities/sqlite3/sqlite3.c	8828;"	d	file:
PGHDR_NEED_READ	utilities/sqlite3/sqlite3.c	8826;"	d	file:
PGHDR_NEED_SYNC	utilities/sqlite3/sqlite3.c	8824;"	d	file:
PGHDR_REUSE_UNLIKELY	utilities/sqlite3/sqlite3.c	8827;"	d	file:
PGroup	utilities/sqlite3/sqlite3.c	/^struct PGroup {$/;"	s	file:
PGroup	utilities/sqlite3/sqlite3.c	/^typedef struct PGroup PGroup;$/;"	t	typeref:struct:PGroup	file:
PGroupBlock	utilities/sqlite3/sqlite3.c	/^struct PGroupBlock {$/;"	s	file:
PGroupBlock	utilities/sqlite3/sqlite3.c	/^typedef struct PGroupBlock PGroupBlock;$/;"	t	typeref:struct:PGroupBlock	file:
PGroupBlockList	utilities/sqlite3/sqlite3.c	/^struct PGroupBlockList {$/;"	s	file:
PGroupBlockList	utilities/sqlite3/sqlite3.c	/^typedef struct PGroupBlockList PGroupBlockList;$/;"	t	typeref:struct:PGroupBlockList	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	212;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	215;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	218;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	221;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	224;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	227;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	230;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	233;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	236;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	239;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	242;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	245;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	248;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	251;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	254;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	257;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	260;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	263;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	266;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	269;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	272;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	275;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	278;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	281;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	284;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	287;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	205;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	208;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	211;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	214;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	217;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	220;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	223;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	226;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	229;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	232;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	235;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	238;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	241;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	244;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	247;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	250;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	253;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	256;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	259;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	262;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	265;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	268;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	271;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	274;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	277;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	280;"	d	file:
POSITION_LIST_END	utilities/sqlite3/sqlite3.c	115846;"	d	file:
POS_COLUMN	utilities/sqlite3/sqlite3.c	114100;"	d	file:
POS_END	utilities/sqlite3/sqlite3.c	114101;"	d	file:
PROXY_CONCHVERSION	utilities/sqlite3/sqlite3.c	30440;"	d	file:
PROXY_HEADERLEN	utilities/sqlite3/sqlite3.c	30441;"	d	file:
PROXY_HOSTIDLEN	utilities/sqlite3/sqlite3.c	30402;"	d	file:
PROXY_MAXCONCHLEN	utilities/sqlite3/sqlite3.c	30443;"	d	file:
PROXY_PATHINDEX	utilities/sqlite3/sqlite3.c	30442;"	d	file:
PTF_INTKEY	utilities/sqlite3/sqlite3.c	47592;"	d	file:
PTF_LEAF	utilities/sqlite3/sqlite3.c	47595;"	d	file:
PTF_LEAFDATA	utilities/sqlite3/sqlite3.c	47594;"	d	file:
PTF_ZERODATA	utilities/sqlite3/sqlite3.c	47593;"	d	file:
PTRMAP_BTREE	utilities/sqlite3/sqlite3.c	47935;"	d	file:
PTRMAP_FREEPAGE	utilities/sqlite3/sqlite3.c	47932;"	d	file:
PTRMAP_ISPAGE	utilities/sqlite3/sqlite3.c	47898;"	d	file:
PTRMAP_OVERFLOW1	utilities/sqlite3/sqlite3.c	47933;"	d	file:
PTRMAP_OVERFLOW2	utilities/sqlite3/sqlite3.c	47934;"	d	file:
PTRMAP_PAGENO	utilities/sqlite3/sqlite3.c	47896;"	d	file:
PTRMAP_PTROFFSET	utilities/sqlite3/sqlite3.c	47897;"	d	file:
PTRMAP_ROOTPAGE	utilities/sqlite3/sqlite3.c	47931;"	d	file:
PY_BUF_SIZE	utilities/modbus/modbus-rtu-private.h	44;"	d
Pager	utilities/sqlite3/sqlite3.c	/^struct Pager {$/;"	s	file:
Pager	utilities/sqlite3/sqlite3.c	/^typedef struct Pager Pager;$/;"	t	typeref:struct:Pager	file:
PagerSavepoint	utilities/sqlite3/sqlite3.c	/^struct PagerSavepoint {$/;"	s	file:
PagerSavepoint	utilities/sqlite3/sqlite3.c	/^typedef struct PagerSavepoint PagerSavepoint;$/;"	t	typeref:struct:PagerSavepoint	file:
Parse	utilities/sqlite3/sqlite3.c	/^struct Parse {$/;"	s	file:
Parse	utilities/sqlite3/sqlite3.c	/^typedef struct Parse Parse;$/;"	t	typeref:struct:Parse	file:
ParseContext	utilities/sqlite3/sqlite3.c	/^struct ParseContext {$/;"	s	file:
ParseContext	utilities/sqlite3/sqlite3.c	/^typedef struct ParseContext ParseContext;$/;"	t	typeref:struct:ParseContext	file:
PendingList	utilities/sqlite3/sqlite3.c	/^struct PendingList {$/;"	s	file:
PendingList	utilities/sqlite3/sqlite3.c	/^typedef struct PendingList PendingList;$/;"	t	typeref:struct:PendingList	file:
PgFreeslot	utilities/sqlite3/sqlite3.c	/^struct PgFreeslot {$/;"	s	file:
PgFreeslot	utilities/sqlite3/sqlite3.c	/^typedef struct PgFreeslot PgFreeslot;$/;"	t	typeref:struct:PgFreeslot	file:
PgHdr	utilities/sqlite3/sqlite3.c	/^struct PgHdr {$/;"	s	file:
PgHdr	utilities/sqlite3/sqlite3.c	/^typedef struct PgHdr PgHdr;$/;"	t	typeref:struct:PgHdr	file:
PgHdr1	utilities/sqlite3/sqlite3.c	/^struct PgHdr1 {$/;"	s	file:
PgHdr1	utilities/sqlite3/sqlite3.c	/^typedef struct PgHdr1 PgHdr1;$/;"	t	typeref:struct:PgHdr1	file:
Pgno	utilities/sqlite3/sqlite3.c	/^typedef u32 Pgno;$/;"	t	file:
PickNext	utilities/sqlite3/sqlite3.c	127109;"	d	file:
PickNext	utilities/sqlite3/sqlite3.c	127114;"	d	file:
PickSeeds	utilities/sqlite3/sqlite3.c	127110;"	d	file:
PickSeeds	utilities/sqlite3/sqlite3.c	127115;"	d	file:
QS_POSTMSG	include/message.h	43;"	d
QuadraticPickNext	utilities/sqlite3/sqlite3.c	/^static RtreeCell *QuadraticPickNext($/;"	f	file:
QuadraticPickSeeds	utilities/sqlite3/sqlite3.c	/^static void QuadraticPickSeeds($/;"	f	file:
READMARK_NOT_USED	utilities/sqlite3/sqlite3.c	44732;"	d	file:
READ_LOCK	utilities/sqlite3/sqlite3.c	47656;"	d	file:
READ_UTF16BE	utilities/sqlite3/sqlite3.c	20167;"	d	file:
READ_UTF16LE	utilities/sqlite3/sqlite3.c	20157;"	d	file:
READ_UTF8	utilities/sqlite3/sqlite3.c	20204;"	d	file:
REARGUARD	utilities/sqlite3/sqlite3.c	15034;"	d	file:
REGISTER_TRACE	utilities/sqlite3/sqlite3.c	63460;"	d	file:
REGISTER_TRACE	utilities/sqlite3/sqlite3.c	63462;"	d	file:
RELEASE	include/print.h	31;"	d
RESERVED_BYTE	utilities/sqlite3/sqlite3.c	9161;"	d	file:
RESERVED_LOCK	utilities/sqlite3/sqlite3.c	9097;"	d	file:
RM	build/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/components/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/components/io/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/src/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/src/application/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/src/kernel/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/utilities/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/utilities/common/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/utilities/modbus/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/utilities/sqlite3/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
ROUND8	utilities/sqlite3/sqlite3.c	7748;"	d	file:
ROUNDDOWN8	utilities/sqlite3/sqlite3.c	7753;"	d	file:
ROWSET_ALLOCATION_SIZE	utilities/sqlite3/sqlite3.c	37052;"	d	file:
ROWSET_ENTRY_PER_CHUNK	utilities/sqlite3/sqlite3.c	37057;"	d	file:
RTREE_COORD_INT32	utilities/sqlite3/sqlite3.c	127208;"	d	file:
RTREE_COORD_REAL32	utilities/sqlite3/sqlite3.c	127207;"	d	file:
RTREE_EQ	utilities/sqlite3/sqlite3.c	127272;"	d	file:
RTREE_GE	utilities/sqlite3/sqlite3.c	127275;"	d	file:
RTREE_GEOMETRY_MAGIC	utilities/sqlite3/sqlite3.c	127306;"	d	file:
RTREE_GT	utilities/sqlite3/sqlite3.c	127276;"	d	file:
RTREE_LE	utilities/sqlite3/sqlite3.c	127273;"	d	file:
RTREE_LT	utilities/sqlite3/sqlite3.c	127274;"	d	file:
RTREE_MATCH	utilities/sqlite3/sqlite3.c	127277;"	d	file:
RTREE_MAXCELLS	utilities/sqlite3/sqlite3.c	127221;"	d	file:
RTREE_MAX_DEPTH	utilities/sqlite3/sqlite3.c	127230;"	d	file:
RTREE_MAX_DIMENSIONS	utilities/sqlite3/sqlite3.c	127157;"	d	file:
RTREE_MINCELLS	utilities/sqlite3/sqlite3.c	127219;"	d	file:
RTREE_REINSERT	utilities/sqlite3/sqlite3.c	127220;"	d	file:
Read	utilities/common/tools.c	/^ssize_t Read(int fd, void *ptr, size_t nbytes)$/;"	f
Readline	utilities/common/tools.c	/^ssize_t Readline(int fd, void *vptr, size_t maxlen, const char tail)$/;"	f
Readn	utilities/common/tools.c	/^int Readn(int fd, void *vptr, int n, int data_len)$/;"	f
Reinsert	utilities/sqlite3/sqlite3.c	/^static int Reinsert($/;"	f	file:
RowSet	utilities/sqlite3/sqlite3.c	/^struct RowSet {$/;"	s	file:
RowSet	utilities/sqlite3/sqlite3.c	/^typedef struct RowSet RowSet;$/;"	t	typeref:struct:RowSet	file:
RowSetChunk	utilities/sqlite3/sqlite3.c	/^struct RowSetChunk {$/;"	s	file:
RowSetEntry	utilities/sqlite3/sqlite3.c	/^struct RowSetEntry {            $/;"	s	file:
Rtree	utilities/sqlite3/sqlite3.c	/^struct Rtree {$/;"	s	file:
Rtree	utilities/sqlite3/sqlite3.c	/^typedef struct Rtree Rtree;$/;"	t	typeref:struct:Rtree	file:
RtreeCell	utilities/sqlite3/sqlite3.c	/^struct RtreeCell {$/;"	s	file:
RtreeCell	utilities/sqlite3/sqlite3.c	/^typedef struct RtreeCell RtreeCell;$/;"	t	typeref:struct:RtreeCell	file:
RtreeConstraint	utilities/sqlite3/sqlite3.c	/^struct RtreeConstraint {$/;"	s	file:
RtreeConstraint	utilities/sqlite3/sqlite3.c	/^typedef struct RtreeConstraint RtreeConstraint;$/;"	t	typeref:struct:RtreeConstraint	file:
RtreeCoord	utilities/sqlite3/sqlite3.c	/^typedef union RtreeCoord RtreeCoord;$/;"	t	typeref:union:RtreeCoord	file:
RtreeCoord	utilities/sqlite3/sqlite3.c	/^union RtreeCoord {$/;"	u	file:
RtreeCursor	utilities/sqlite3/sqlite3.c	/^struct RtreeCursor {$/;"	s	file:
RtreeCursor	utilities/sqlite3/sqlite3.c	/^typedef struct RtreeCursor RtreeCursor;$/;"	t	typeref:struct:RtreeCursor	file:
RtreeGeomCallback	utilities/sqlite3/sqlite3.c	/^struct RtreeGeomCallback {$/;"	s	file:
RtreeGeomCallback	utilities/sqlite3/sqlite3.c	/^typedef struct RtreeGeomCallback RtreeGeomCallback;$/;"	t	typeref:struct:RtreeGeomCallback	file:
RtreeMatchArg	utilities/sqlite3/sqlite3.c	/^struct RtreeMatchArg {$/;"	s	file:
RtreeMatchArg	utilities/sqlite3/sqlite3.c	/^typedef struct RtreeMatchArg RtreeMatchArg;$/;"	t	typeref:struct:RtreeMatchArg	file:
RtreeNode	utilities/sqlite3/sqlite3.c	/^struct RtreeNode {$/;"	s	file:
RtreeNode	utilities/sqlite3/sqlite3.c	/^typedef struct RtreeNode RtreeNode;$/;"	t	typeref:struct:RtreeNode	file:
SAVEPOINT_BEGIN	utilities/sqlite3/sqlite3.c	9719;"	d	file:
SAVEPOINT_RELEASE	utilities/sqlite3/sqlite3.c	9720;"	d	file:
SAVEPOINT_ROLLBACK	utilities/sqlite3/sqlite3.c	9721;"	d	file:
SAVE_SZ	utilities/sqlite3/sqlite3.c	79366;"	d	file:
SBYTE	include/types.h	/^typedef signed char     SBYTE;$/;"	t
SCHEMA_TABLE	utilities/sqlite3/sqlite3.c	7803;"	d	file:
SDWORD	include/types.h	/^typedef signed long     SDWORD;$/;"	t
SEMUN	utilities/common/sem.c	/^}SEMUN;$/;"	t	typeref:union:semun	file:
SETBIT	utilities/sqlite3/sqlite3.c	35060;"	d	file:
SET_FULLSYNC	utilities/sqlite3/sqlite3.c	9043;"	d	file:
SF_Aggregate	utilities/sqlite3/sqlite3.c	10711;"	d	file:
SF_Distinct	utilities/sqlite3/sqlite3.c	10709;"	d	file:
SF_Expanded	utilities/sqlite3/sqlite3.c	10713;"	d	file:
SF_HasTypeInfo	utilities/sqlite3/sqlite3.c	10714;"	d	file:
SF_Resolved	utilities/sqlite3/sqlite3.c	10710;"	d	file:
SF_UseSorter	utilities/sqlite3/sqlite3.c	10715;"	d	file:
SF_UsesEphemeral	utilities/sqlite3/sqlite3.c	10712;"	d	file:
SHARED_FIRST	utilities/sqlite3/sqlite3.c	9162;"	d	file:
SHARED_LOCK	utilities/sqlite3/sqlite3.c	9096;"	d	file:
SHARED_SIZE	utilities/sqlite3/sqlite3.c	9163;"	d	file:
SHELL	build/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/components/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/components/io/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/src/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/src/application/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/src/kernel/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/utilities/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/utilities/common/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/utilities/modbus/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/utilities/sqlite3/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHUT_RDWR	utilities/modbus/modbus-tcp.c	37;"	d	file:
SLOT_2_0	utilities/sqlite3/sqlite3.c	21271;"	d	file:
SLOT_4_2_0	utilities/sqlite3/sqlite3.c	21272;"	d	file:
SMALLEST_INT64	utilities/sqlite3/sqlite3.c	7742;"	d	file:
SORTER_MAX_MERGE_COUNT	utilities/sqlite3/sqlite3.c	70412;"	d	file:
SORTER_MIN_WORKING	utilities/sqlite3/sqlite3.c	70409;"	d	file:
SQLITE3_MUTEX_INITIALIZER	utilities/sqlite3/sqlite3.c	17170;"	d	file:
SQLITE3_MUTEX_INITIALIZER	utilities/sqlite3/sqlite3.c	17172;"	d	file:
SQLITE3_MUTEX_INITIALIZER	utilities/sqlite3/sqlite3.c	17457;"	d	file:
SQLITE3_MUTEX_INITIALIZER	utilities/sqlite3/sqlite3.c	17459;"	d	file:
SQLITE3_MUTEX_INITIALIZER	utilities/sqlite3/sqlite3.c	17795;"	d	file:
SQLITE3_MUTEX_INITIALIZER	utilities/sqlite3/sqlite3.c	17797;"	d	file:
SQLITE3_TEXT	utilities/sqlite3/sqlite3.c	3940;"	d	file:
SQLITE3_TEXT	utilities/sqlite3/sqlite3.h	3391;"	d
SQLITE_ABORT	utilities/sqlite3/sqlite3.c	935;"	d	file:
SQLITE_ABORT	utilities/sqlite3/sqlite3.h	386;"	d
SQLITE_ACCESS_EXISTS	utilities/sqlite3/sqlite3.c	1566;"	d	file:
SQLITE_ACCESS_EXISTS	utilities/sqlite3/sqlite3.h	1017;"	d
SQLITE_ACCESS_READ	utilities/sqlite3/sqlite3.c	1568;"	d	file:
SQLITE_ACCESS_READ	utilities/sqlite3/sqlite3.h	1019;"	d
SQLITE_ACCESS_READWRITE	utilities/sqlite3/sqlite3.c	1567;"	d	file:
SQLITE_ACCESS_READWRITE	utilities/sqlite3/sqlite3.h	1018;"	d
SQLITE_AFF_INTEGER	utilities/sqlite3/sqlite3.c	9815;"	d	file:
SQLITE_AFF_MASK	utilities/sqlite3/sqlite3.c	9824;"	d	file:
SQLITE_AFF_NONE	utilities/sqlite3/sqlite3.c	9813;"	d	file:
SQLITE_AFF_NUMERIC	utilities/sqlite3/sqlite3.c	9814;"	d	file:
SQLITE_AFF_REAL	utilities/sqlite3/sqlite3.c	9816;"	d	file:
SQLITE_AFF_TEXT	utilities/sqlite3/sqlite3.c	9812;"	d	file:
SQLITE_ALTER_TABLE	utilities/sqlite3/sqlite3.c	2859;"	d	file:
SQLITE_ALTER_TABLE	utilities/sqlite3/sqlite3.h	2310;"	d
SQLITE_AMALGAMATION	utilities/sqlite3/sqlite3.c	21;"	d	file:
SQLITE_ANALYZE	utilities/sqlite3/sqlite3.c	2861;"	d	file:
SQLITE_ANALYZE	utilities/sqlite3/sqlite3.h	2312;"	d
SQLITE_ANY	utilities/sqlite3/sqlite3.c	4298;"	d	file:
SQLITE_ANY	utilities/sqlite3/sqlite3.h	3749;"	d
SQLITE_API	utilities/sqlite3/sqlite3.c	26;"	d	file:
SQLITE_API	utilities/sqlite3/sqlite3.c	602;"	d	file:
SQLITE_API	utilities/sqlite3/sqlite3.h	53;"	d
SQLITE_ASCII	utilities/sqlite3/sqlite3.c	7652;"	d	file:
SQLITE_ATTACH	utilities/sqlite3/sqlite3.c	2857;"	d	file:
SQLITE_ATTACH	utilities/sqlite3/sqlite3.h	2308;"	d
SQLITE_AUTH	utilities/sqlite3/sqlite3.c	954;"	d	file:
SQLITE_AUTH	utilities/sqlite3/sqlite3.h	405;"	d
SQLITE_AutoIndex	utilities/sqlite3/sqlite3.c	9583;"	d	file:
SQLITE_BIGENDIAN	utilities/sqlite3/sqlite3.c	7727;"	d	file:
SQLITE_BIGENDIAN	utilities/sqlite3/sqlite3.c	7731;"	d	file:
SQLITE_BIG_DBL	utilities/sqlite3/sqlite3.c	7588;"	d	file:
SQLITE_BIG_DBL	utilities/sqlite3/sqlite3.c	7596;"	d	file:
SQLITE_BLOB	utilities/sqlite3/sqlite3.c	3933;"	d	file:
SQLITE_BLOB	utilities/sqlite3/sqlite3.h	3384;"	d
SQLITE_BUSY	utilities/sqlite3/sqlite3.c	936;"	d	file:
SQLITE_BUSY	utilities/sqlite3/sqlite3.h	387;"	d
SQLITE_BUSY_RECOVERY	utilities/sqlite3/sqlite3.c	1008;"	d	file:
SQLITE_BUSY_RECOVERY	utilities/sqlite3/sqlite3.h	459;"	d
SQLITE_CANTOPEN	utilities/sqlite3/sqlite3.c	945;"	d	file:
SQLITE_CANTOPEN	utilities/sqlite3/sqlite3.h	396;"	d
SQLITE_CANTOPEN_BKPT	utilities/sqlite3/sqlite3.c	11160;"	d	file:
SQLITE_CANTOPEN_NOTEMPDIR	utilities/sqlite3/sqlite3.c	1009;"	d	file:
SQLITE_CANTOPEN_NOTEMPDIR	utilities/sqlite3/sqlite3.h	460;"	d
SQLITE_CHECKPOINT_FULL	utilities/sqlite3/sqlite3.c	7147;"	d	file:
SQLITE_CHECKPOINT_FULL	utilities/sqlite3/sqlite3.h	6598;"	d
SQLITE_CHECKPOINT_PASSIVE	utilities/sqlite3/sqlite3.c	7146;"	d	file:
SQLITE_CHECKPOINT_PASSIVE	utilities/sqlite3/sqlite3.h	6597;"	d
SQLITE_CHECKPOINT_RESTART	utilities/sqlite3/sqlite3.c	7148;"	d	file:
SQLITE_CHECKPOINT_RESTART	utilities/sqlite3/sqlite3.h	6599;"	d
SQLITE_COLL_BINARY	utilities/sqlite3/sqlite3.c	9787;"	d	file:
SQLITE_COLL_NOCASE	utilities/sqlite3/sqlite3.c	9788;"	d	file:
SQLITE_COLL_REVERSE	utilities/sqlite3/sqlite3.c	9789;"	d	file:
SQLITE_COLL_USER	utilities/sqlite3/sqlite3.c	9790;"	d	file:
SQLITE_CONFIG_GETMALLOC	utilities/sqlite3/sqlite3.c	2036;"	d	file:
SQLITE_CONFIG_GETMALLOC	utilities/sqlite3/sqlite3.h	1487;"	d
SQLITE_CONFIG_GETMUTEX	utilities/sqlite3/sqlite3.c	2042;"	d	file:
SQLITE_CONFIG_GETMUTEX	utilities/sqlite3/sqlite3.h	1493;"	d
SQLITE_CONFIG_GETPCACHE	utilities/sqlite3/sqlite3.c	2046;"	d	file:
SQLITE_CONFIG_GETPCACHE	utilities/sqlite3/sqlite3.h	1497;"	d
SQLITE_CONFIG_HEAP	utilities/sqlite3/sqlite3.c	2039;"	d	file:
SQLITE_CONFIG_HEAP	utilities/sqlite3/sqlite3.h	1490;"	d
SQLITE_CONFIG_LOG	utilities/sqlite3/sqlite3.c	2047;"	d	file:
SQLITE_CONFIG_LOG	utilities/sqlite3/sqlite3.h	1498;"	d
SQLITE_CONFIG_LOOKASIDE	utilities/sqlite3/sqlite3.c	2044;"	d	file:
SQLITE_CONFIG_LOOKASIDE	utilities/sqlite3/sqlite3.h	1495;"	d
SQLITE_CONFIG_MALLOC	utilities/sqlite3/sqlite3.c	2035;"	d	file:
SQLITE_CONFIG_MALLOC	utilities/sqlite3/sqlite3.h	1486;"	d
SQLITE_CONFIG_MEMSTATUS	utilities/sqlite3/sqlite3.c	2040;"	d	file:
SQLITE_CONFIG_MEMSTATUS	utilities/sqlite3/sqlite3.h	1491;"	d
SQLITE_CONFIG_MULTITHREAD	utilities/sqlite3/sqlite3.c	2033;"	d	file:
SQLITE_CONFIG_MULTITHREAD	utilities/sqlite3/sqlite3.h	1484;"	d
SQLITE_CONFIG_MUTEX	utilities/sqlite3/sqlite3.c	2041;"	d	file:
SQLITE_CONFIG_MUTEX	utilities/sqlite3/sqlite3.h	1492;"	d
SQLITE_CONFIG_PAGECACHE	utilities/sqlite3/sqlite3.c	2038;"	d	file:
SQLITE_CONFIG_PAGECACHE	utilities/sqlite3/sqlite3.h	1489;"	d
SQLITE_CONFIG_PCACHE	utilities/sqlite3/sqlite3.c	2045;"	d	file:
SQLITE_CONFIG_PCACHE	utilities/sqlite3/sqlite3.h	1496;"	d
SQLITE_CONFIG_SCRATCH	utilities/sqlite3/sqlite3.c	2037;"	d	file:
SQLITE_CONFIG_SCRATCH	utilities/sqlite3/sqlite3.h	1488;"	d
SQLITE_CONFIG_SERIALIZED	utilities/sqlite3/sqlite3.c	2034;"	d	file:
SQLITE_CONFIG_SERIALIZED	utilities/sqlite3/sqlite3.h	1485;"	d
SQLITE_CONFIG_SINGLETHREAD	utilities/sqlite3/sqlite3.c	2032;"	d	file:
SQLITE_CONFIG_SINGLETHREAD	utilities/sqlite3/sqlite3.h	1483;"	d
SQLITE_CONFIG_URI	utilities/sqlite3/sqlite3.c	2048;"	d	file:
SQLITE_CONFIG_URI	utilities/sqlite3/sqlite3.h	1499;"	d
SQLITE_CONSTRAINT	utilities/sqlite3/sqlite3.c	950;"	d	file:
SQLITE_CONSTRAINT	utilities/sqlite3/sqlite3.h	401;"	d
SQLITE_COPY	utilities/sqlite3/sqlite3.c	2866;"	d	file:
SQLITE_COPY	utilities/sqlite3/sqlite3.h	2317;"	d
SQLITE_CORE	utilities/sqlite3/sqlite3.c	114514;"	d	file:
SQLITE_CORE	utilities/sqlite3/sqlite3.c	20;"	d	file:
SQLITE_CORE	utilities/sqlite3/sqlite3.c	88886;"	d	file:
SQLITE_CORRUPT	utilities/sqlite3/sqlite3.c	942;"	d	file:
SQLITE_CORRUPT	utilities/sqlite3/sqlite3.h	393;"	d
SQLITE_CORRUPT_BKPT	utilities/sqlite3/sqlite3.c	11158;"	d	file:
SQLITE_CORRUPT_VTAB	utilities/sqlite3/sqlite3.c	1010;"	d	file:
SQLITE_CORRUPT_VTAB	utilities/sqlite3/sqlite3.h	461;"	d
SQLITE_CREATE_INDEX	utilities/sqlite3/sqlite3.c	2834;"	d	file:
SQLITE_CREATE_INDEX	utilities/sqlite3/sqlite3.h	2285;"	d
SQLITE_CREATE_TABLE	utilities/sqlite3/sqlite3.c	2835;"	d	file:
SQLITE_CREATE_TABLE	utilities/sqlite3/sqlite3.h	2286;"	d
SQLITE_CREATE_TEMP_INDEX	utilities/sqlite3/sqlite3.c	2836;"	d	file:
SQLITE_CREATE_TEMP_INDEX	utilities/sqlite3/sqlite3.h	2287;"	d
SQLITE_CREATE_TEMP_TABLE	utilities/sqlite3/sqlite3.c	2837;"	d	file:
SQLITE_CREATE_TEMP_TABLE	utilities/sqlite3/sqlite3.h	2288;"	d
SQLITE_CREATE_TEMP_TRIGGER	utilities/sqlite3/sqlite3.c	2838;"	d	file:
SQLITE_CREATE_TEMP_TRIGGER	utilities/sqlite3/sqlite3.h	2289;"	d
SQLITE_CREATE_TEMP_VIEW	utilities/sqlite3/sqlite3.c	2839;"	d	file:
SQLITE_CREATE_TEMP_VIEW	utilities/sqlite3/sqlite3.h	2290;"	d
SQLITE_CREATE_TRIGGER	utilities/sqlite3/sqlite3.c	2840;"	d	file:
SQLITE_CREATE_TRIGGER	utilities/sqlite3/sqlite3.h	2291;"	d
SQLITE_CREATE_VIEW	utilities/sqlite3/sqlite3.c	2841;"	d	file:
SQLITE_CREATE_VIEW	utilities/sqlite3/sqlite3.h	2292;"	d
SQLITE_CREATE_VTABLE	utilities/sqlite3/sqlite3.c	2862;"	d	file:
SQLITE_CREATE_VTABLE	utilities/sqlite3/sqlite3.h	2313;"	d
SQLITE_CkptFullFSync	utilities/sqlite3/sqlite3.c	9578;"	d	file:
SQLITE_ColumnCache	utilities/sqlite3/sqlite3.c	9594;"	d	file:
SQLITE_CountRows	utilities/sqlite3/sqlite3.c	9564;"	d	file:
SQLITE_DBCONFIG_ENABLE_FKEY	utilities/sqlite3/sqlite3.c	2109;"	d	file:
SQLITE_DBCONFIG_ENABLE_FKEY	utilities/sqlite3/sqlite3.h	1560;"	d
SQLITE_DBCONFIG_ENABLE_TRIGGER	utilities/sqlite3/sqlite3.c	2110;"	d	file:
SQLITE_DBCONFIG_ENABLE_TRIGGER	utilities/sqlite3/sqlite3.h	1561;"	d
SQLITE_DBCONFIG_LOOKASIDE	utilities/sqlite3/sqlite3.c	2108;"	d	file:
SQLITE_DBCONFIG_LOOKASIDE	utilities/sqlite3/sqlite3.h	1559;"	d
SQLITE_DBSTATUS_CACHE_USED	utilities/sqlite3/sqlite3.c	6370;"	d	file:
SQLITE_DBSTATUS_CACHE_USED	utilities/sqlite3/sqlite3.h	5821;"	d
SQLITE_DBSTATUS_LOOKASIDE_HIT	utilities/sqlite3/sqlite3.c	6373;"	d	file:
SQLITE_DBSTATUS_LOOKASIDE_HIT	utilities/sqlite3/sqlite3.h	5824;"	d
SQLITE_DBSTATUS_LOOKASIDE_MISS_FULL	utilities/sqlite3/sqlite3.c	6375;"	d	file:
SQLITE_DBSTATUS_LOOKASIDE_MISS_FULL	utilities/sqlite3/sqlite3.h	5826;"	d
SQLITE_DBSTATUS_LOOKASIDE_MISS_SIZE	utilities/sqlite3/sqlite3.c	6374;"	d	file:
SQLITE_DBSTATUS_LOOKASIDE_MISS_SIZE	utilities/sqlite3/sqlite3.h	5825;"	d
SQLITE_DBSTATUS_LOOKASIDE_USED	utilities/sqlite3/sqlite3.c	6369;"	d	file:
SQLITE_DBSTATUS_LOOKASIDE_USED	utilities/sqlite3/sqlite3.h	5820;"	d
SQLITE_DBSTATUS_MAX	utilities/sqlite3/sqlite3.c	6376;"	d	file:
SQLITE_DBSTATUS_MAX	utilities/sqlite3/sqlite3.h	5827;"	d
SQLITE_DBSTATUS_SCHEMA_USED	utilities/sqlite3/sqlite3.c	6371;"	d	file:
SQLITE_DBSTATUS_SCHEMA_USED	utilities/sqlite3/sqlite3.h	5822;"	d
SQLITE_DBSTATUS_STMT_USED	utilities/sqlite3/sqlite3.c	6372;"	d	file:
SQLITE_DBSTATUS_STMT_USED	utilities/sqlite3/sqlite3.h	5823;"	d
SQLITE_DEBUG_OS_TRACE	utilities/sqlite3/sqlite3.c	22325;"	d	file:
SQLITE_DEBUG_OS_TRACE	utilities/sqlite3/sqlite3.c	24667;"	d	file:
SQLITE_DEBUG_OS_TRACE	utilities/sqlite3/sqlite3.c	31444;"	d	file:
SQLITE_DEFAULT_AUTOVACUUM	utilities/sqlite3/sqlite3.c	7944;"	d	file:
SQLITE_DEFAULT_CACHE_SIZE	utilities/sqlite3/sqlite3.c	187;"	d	file:
SQLITE_DEFAULT_FILE_FORMAT	utilities/sqlite3/sqlite3.c	7618;"	d	file:
SQLITE_DEFAULT_FILE_PERMISSIONS	utilities/sqlite3/sqlite3.c	24531;"	d	file:
SQLITE_DEFAULT_JOURNAL_SIZE_LIMIT	utilities/sqlite3/sqlite3.c	8615;"	d	file:
SQLITE_DEFAULT_MEMSTATUS	utilities/sqlite3/sqlite3.c	382;"	d	file:
SQLITE_DEFAULT_PAGE_SIZE	utilities/sqlite3/sqlite3.c	239;"	d	file:
SQLITE_DEFAULT_PAGE_SIZE	utilities/sqlite3/sqlite3.c	242;"	d	file:
SQLITE_DEFAULT_PAGE_SIZE	utilities/sqlite3/sqlite3.c	243;"	d	file:
SQLITE_DEFAULT_PROXYDIR_PERMISSIONS	utilities/sqlite3/sqlite3.c	24538;"	d	file:
SQLITE_DEFAULT_RECURSIVE_TRIGGERS	utilities/sqlite3/sqlite3.c	7626;"	d	file:
SQLITE_DEFAULT_SECTOR_SIZE	utilities/sqlite3/sqlite3.c	9050;"	d	file:
SQLITE_DEFAULT_TEMP_CACHE_SIZE	utilities/sqlite3/sqlite3.c	190;"	d	file:
SQLITE_DEFAULT_WAL_AUTOCHECKPOINT	utilities/sqlite3/sqlite3.c	198;"	d	file:
SQLITE_DELETE	utilities/sqlite3/sqlite3.c	2842;"	d	file:
SQLITE_DELETE	utilities/sqlite3/sqlite3.h	2293;"	d
SQLITE_DENY	utilities/sqlite3/sqlite3.c	2811;"	d	file:
SQLITE_DENY	utilities/sqlite3/sqlite3.h	2262;"	d
SQLITE_DEPRECATED	utilities/sqlite3/sqlite3.c	619;"	d	file:
SQLITE_DEPRECATED	utilities/sqlite3/sqlite3.h	70;"	d
SQLITE_DETACH	utilities/sqlite3/sqlite3.c	2858;"	d	file:
SQLITE_DETACH	utilities/sqlite3/sqlite3.h	2309;"	d
SQLITE_DONE	utilities/sqlite3/sqlite3.c	959;"	d	file:
SQLITE_DONE	utilities/sqlite3/sqlite3.h	410;"	d
SQLITE_DROP_INDEX	utilities/sqlite3/sqlite3.c	2843;"	d	file:
SQLITE_DROP_INDEX	utilities/sqlite3/sqlite3.h	2294;"	d
SQLITE_DROP_TABLE	utilities/sqlite3/sqlite3.c	2844;"	d	file:
SQLITE_DROP_TABLE	utilities/sqlite3/sqlite3.h	2295;"	d
SQLITE_DROP_TEMP_INDEX	utilities/sqlite3/sqlite3.c	2845;"	d	file:
SQLITE_DROP_TEMP_INDEX	utilities/sqlite3/sqlite3.h	2296;"	d
SQLITE_DROP_TEMP_TABLE	utilities/sqlite3/sqlite3.c	2846;"	d	file:
SQLITE_DROP_TEMP_TABLE	utilities/sqlite3/sqlite3.h	2297;"	d
SQLITE_DROP_TEMP_TRIGGER	utilities/sqlite3/sqlite3.c	2847;"	d	file:
SQLITE_DROP_TEMP_TRIGGER	utilities/sqlite3/sqlite3.h	2298;"	d
SQLITE_DROP_TEMP_VIEW	utilities/sqlite3/sqlite3.c	2848;"	d	file:
SQLITE_DROP_TEMP_VIEW	utilities/sqlite3/sqlite3.h	2299;"	d
SQLITE_DROP_TRIGGER	utilities/sqlite3/sqlite3.c	2849;"	d	file:
SQLITE_DROP_TRIGGER	utilities/sqlite3/sqlite3.h	2300;"	d
SQLITE_DROP_VIEW	utilities/sqlite3/sqlite3.c	2850;"	d	file:
SQLITE_DROP_VIEW	utilities/sqlite3/sqlite3.h	2301;"	d
SQLITE_DROP_VTABLE	utilities/sqlite3/sqlite3.c	2863;"	d	file:
SQLITE_DROP_VTABLE	utilities/sqlite3/sqlite3.h	2314;"	d
SQLITE_DYNAMIC	utilities/sqlite3/sqlite3.c	7815;"	d	file:
SQLITE_DistinctOpt	utilities/sqlite3/sqlite3.c	9601;"	d	file:
SQLITE_EBCDIC	utilities/sqlite3/sqlite3.c	7650;"	d	file:
SQLITE_EMPTY	utilities/sqlite3/sqlite3.c	947;"	d	file:
SQLITE_EMPTY	utilities/sqlite3/sqlite3.h	398;"	d
SQLITE_ENABLE_FTS3	utilities/sqlite3/sqlite3.c	11169;"	d	file:
SQLITE_ENABLE_FTS3	utilities/sqlite3/sqlite3.c	113752;"	d	file:
SQLITE_ENABLE_LOCKING_STYLE	utilities/sqlite3/sqlite3.c	24436;"	d	file:
SQLITE_ENABLE_LOCKING_STYLE	utilities/sqlite3/sqlite3.c	24438;"	d	file:
SQLITE_ENABLE_LOCKING_STYLE	utilities/sqlite3/sqlite3.c	90728;"	d	file:
SQLITE_ERROR	utilities/sqlite3/sqlite3.c	932;"	d	file:
SQLITE_ERROR	utilities/sqlite3/sqlite3.h	383;"	d
SQLITE_EXPERIMENTAL	utilities/sqlite3/sqlite3.c	620;"	d	file:
SQLITE_EXPERIMENTAL	utilities/sqlite3/sqlite3.h	71;"	d
SQLITE_EXTENSION_INIT1	utilities/sqlite3/sqlite3.c	89311;"	d	file:
SQLITE_EXTENSION_INIT2	utilities/sqlite3/sqlite3.c	89312;"	d	file:
SQLITE_EXTERN	utilities/sqlite3/sqlite3.c	598;"	d	file:
SQLITE_EXTERN	utilities/sqlite3/sqlite3.h	49;"	d
SQLITE_EnableTrigger	utilities/sqlite3/sqlite3.c	9586;"	d	file:
SQLITE_FAIL	utilities/sqlite3/sqlite3.c	7232;"	d	file:
SQLITE_FAIL	utilities/sqlite3/sqlite3.h	6683;"	d
SQLITE_FAULTINJECTOR_COUNT	utilities/sqlite3/sqlite3.c	11778;"	d	file:
SQLITE_FAULTINJECTOR_MALLOC	utilities/sqlite3/sqlite3.c	11777;"	d	file:
SQLITE_FCNTL_CHUNK_SIZE	utilities/sqlite3/sqlite3.c	1330;"	d	file:
SQLITE_FCNTL_CHUNK_SIZE	utilities/sqlite3/sqlite3.h	781;"	d
SQLITE_FCNTL_DB_UNCHANGED	utilities/sqlite3/sqlite3.c	9183;"	d	file:
SQLITE_FCNTL_FILE_POINTER	utilities/sqlite3/sqlite3.c	1331;"	d	file:
SQLITE_FCNTL_FILE_POINTER	utilities/sqlite3/sqlite3.h	782;"	d
SQLITE_FCNTL_LOCKSTATE	utilities/sqlite3/sqlite3.c	1325;"	d	file:
SQLITE_FCNTL_LOCKSTATE	utilities/sqlite3/sqlite3.h	776;"	d
SQLITE_FCNTL_PERSIST_WAL	utilities/sqlite3/sqlite3.c	1334;"	d	file:
SQLITE_FCNTL_PERSIST_WAL	utilities/sqlite3/sqlite3.h	785;"	d
SQLITE_FCNTL_SIZE_HINT	utilities/sqlite3/sqlite3.c	1329;"	d	file:
SQLITE_FCNTL_SIZE_HINT	utilities/sqlite3/sqlite3.h	780;"	d
SQLITE_FCNTL_SYNC_OMITTED	utilities/sqlite3/sqlite3.c	1332;"	d	file:
SQLITE_FCNTL_SYNC_OMITTED	utilities/sqlite3/sqlite3.h	783;"	d
SQLITE_FCNTL_WIN32_AV_RETRY	utilities/sqlite3/sqlite3.c	1333;"	d	file:
SQLITE_FCNTL_WIN32_AV_RETRY	utilities/sqlite3/sqlite3.h	784;"	d
SQLITE_FILE_HEADER	utilities/sqlite3/sqlite3.c	47585;"	d	file:
SQLITE_FLOAT	utilities/sqlite3/sqlite3.c	3932;"	d	file:
SQLITE_FLOAT	utilities/sqlite3/sqlite3.h	3383;"	d
SQLITE_FORMAT	utilities/sqlite3/sqlite3.c	955;"	d	file:
SQLITE_FORMAT	utilities/sqlite3/sqlite3.h	406;"	d
SQLITE_FSFLAGS_IS_MSDOS	utilities/sqlite3/sqlite3.c	24516;"	d	file:
SQLITE_FTS3_DEFAULT_NEAR_PARAM	utilities/sqlite3/sqlite3.c	119613;"	d	file:
SQLITE_FULL	utilities/sqlite3/sqlite3.c	944;"	d	file:
SQLITE_FULL	utilities/sqlite3/sqlite3.h	395;"	d
SQLITE_FUNCTION	utilities/sqlite3/sqlite3.c	2864;"	d	file:
SQLITE_FUNCTION	utilities/sqlite3/sqlite3.h	2315;"	d
SQLITE_FUNC_CASE	utilities/sqlite3/sqlite3.c	9659;"	d	file:
SQLITE_FUNC_COALESCE	utilities/sqlite3/sqlite3.c	9664;"	d	file:
SQLITE_FUNC_COUNT	utilities/sqlite3/sqlite3.c	9663;"	d	file:
SQLITE_FUNC_EPHEM	utilities/sqlite3/sqlite3.c	9660;"	d	file:
SQLITE_FUNC_LIKE	utilities/sqlite3/sqlite3.c	9658;"	d	file:
SQLITE_FUNC_NEEDCOLL	utilities/sqlite3/sqlite3.c	9661;"	d	file:
SQLITE_FUNC_PRIVATE	utilities/sqlite3/sqlite3.c	9662;"	d	file:
SQLITE_FactorOutConst	utilities/sqlite3/sqlite3.c	9599;"	d	file:
SQLITE_ForeignKeys	utilities/sqlite3/sqlite3.c	9582;"	d	file:
SQLITE_FullColNames	utilities/sqlite3/sqlite3.c	9562;"	d	file:
SQLITE_FullFSync	utilities/sqlite3/sqlite3.c	9577;"	d	file:
SQLITE_GET_LOCKPROXYFILE	utilities/sqlite3/sqlite3.c	1326;"	d	file:
SQLITE_GET_LOCKPROXYFILE	utilities/sqlite3/sqlite3.h	777;"	d
SQLITE_GroupByOrder	utilities/sqlite3/sqlite3.c	9598;"	d	file:
SQLITE_HAVE_ISNAN	utilities/sqlite3/sqlite3.c	7593;"	d	file:
SQLITE_IGNORE	utilities/sqlite3/sqlite3.c	2812;"	d	file:
SQLITE_IGNORE	utilities/sqlite3/sqlite3.h	2263;"	d
SQLITE_INDEX_CONSTRAINT_EQ	utilities/sqlite3/sqlite3.c	5440;"	d	file:
SQLITE_INDEX_CONSTRAINT_EQ	utilities/sqlite3/sqlite3.h	4891;"	d
SQLITE_INDEX_CONSTRAINT_GE	utilities/sqlite3/sqlite3.c	5444;"	d	file:
SQLITE_INDEX_CONSTRAINT_GE	utilities/sqlite3/sqlite3.h	4895;"	d
SQLITE_INDEX_CONSTRAINT_GT	utilities/sqlite3/sqlite3.c	5441;"	d	file:
SQLITE_INDEX_CONSTRAINT_GT	utilities/sqlite3/sqlite3.h	4892;"	d
SQLITE_INDEX_CONSTRAINT_LE	utilities/sqlite3/sqlite3.c	5442;"	d	file:
SQLITE_INDEX_CONSTRAINT_LE	utilities/sqlite3/sqlite3.h	4893;"	d
SQLITE_INDEX_CONSTRAINT_LT	utilities/sqlite3/sqlite3.c	5443;"	d	file:
SQLITE_INDEX_CONSTRAINT_LT	utilities/sqlite3/sqlite3.h	4894;"	d
SQLITE_INDEX_CONSTRAINT_MATCH	utilities/sqlite3/sqlite3.c	5445;"	d	file:
SQLITE_INDEX_CONSTRAINT_MATCH	utilities/sqlite3/sqlite3.h	4896;"	d
SQLITE_INDEX_SAMPLES	utilities/sqlite3/sqlite3.c	324;"	d	file:
SQLITE_INSERT	utilities/sqlite3/sqlite3.c	2851;"	d	file:
SQLITE_INSERT	utilities/sqlite3/sqlite3.h	2302;"	d
SQLITE_INTEGER	utilities/sqlite3/sqlite3.c	3931;"	d	file:
SQLITE_INTEGER	utilities/sqlite3/sqlite3.h	3382;"	d
SQLITE_INTEGRITY_CHECK_ERROR_MAX	utilities/sqlite3/sqlite3.c	91012;"	d	file:
SQLITE_INTERNAL	utilities/sqlite3/sqlite3.c	933;"	d	file:
SQLITE_INTERNAL	utilities/sqlite3/sqlite3.h	384;"	d
SQLITE_INTERRUPT	utilities/sqlite3/sqlite3.c	940;"	d	file:
SQLITE_INTERRUPT	utilities/sqlite3/sqlite3.h	391;"	d
SQLITE_INT_TO_PTR	utilities/sqlite3/sqlite3.c	343;"	d	file:
SQLITE_INT_TO_PTR	utilities/sqlite3/sqlite3.c	346;"	d	file:
SQLITE_INT_TO_PTR	utilities/sqlite3/sqlite3.c	349;"	d	file:
SQLITE_INT_TO_PTR	utilities/sqlite3/sqlite3.c	352;"	d	file:
SQLITE_IOCAP_ATOMIC	utilities/sqlite3/sqlite3.c	1063;"	d	file:
SQLITE_IOCAP_ATOMIC	utilities/sqlite3/sqlite3.h	514;"	d
SQLITE_IOCAP_ATOMIC16K	utilities/sqlite3/sqlite3.c	1069;"	d	file:
SQLITE_IOCAP_ATOMIC16K	utilities/sqlite3/sqlite3.h	520;"	d
SQLITE_IOCAP_ATOMIC1K	utilities/sqlite3/sqlite3.c	1065;"	d	file:
SQLITE_IOCAP_ATOMIC1K	utilities/sqlite3/sqlite3.h	516;"	d
SQLITE_IOCAP_ATOMIC2K	utilities/sqlite3/sqlite3.c	1066;"	d	file:
SQLITE_IOCAP_ATOMIC2K	utilities/sqlite3/sqlite3.h	517;"	d
SQLITE_IOCAP_ATOMIC32K	utilities/sqlite3/sqlite3.c	1070;"	d	file:
SQLITE_IOCAP_ATOMIC32K	utilities/sqlite3/sqlite3.h	521;"	d
SQLITE_IOCAP_ATOMIC4K	utilities/sqlite3/sqlite3.c	1067;"	d	file:
SQLITE_IOCAP_ATOMIC4K	utilities/sqlite3/sqlite3.h	518;"	d
SQLITE_IOCAP_ATOMIC512	utilities/sqlite3/sqlite3.c	1064;"	d	file:
SQLITE_IOCAP_ATOMIC512	utilities/sqlite3/sqlite3.h	515;"	d
SQLITE_IOCAP_ATOMIC64K	utilities/sqlite3/sqlite3.c	1071;"	d	file:
SQLITE_IOCAP_ATOMIC64K	utilities/sqlite3/sqlite3.h	522;"	d
SQLITE_IOCAP_ATOMIC8K	utilities/sqlite3/sqlite3.c	1068;"	d	file:
SQLITE_IOCAP_ATOMIC8K	utilities/sqlite3/sqlite3.h	519;"	d
SQLITE_IOCAP_SAFE_APPEND	utilities/sqlite3/sqlite3.c	1072;"	d	file:
SQLITE_IOCAP_SAFE_APPEND	utilities/sqlite3/sqlite3.h	523;"	d
SQLITE_IOCAP_SEQUENTIAL	utilities/sqlite3/sqlite3.c	1073;"	d	file:
SQLITE_IOCAP_SEQUENTIAL	utilities/sqlite3/sqlite3.h	524;"	d
SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN	utilities/sqlite3/sqlite3.c	1074;"	d	file:
SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN	utilities/sqlite3/sqlite3.h	525;"	d
SQLITE_IOERR	utilities/sqlite3/sqlite3.c	941;"	d	file:
SQLITE_IOERR	utilities/sqlite3/sqlite3.h	392;"	d
SQLITE_IOERR_ACCESS	utilities/sqlite3/sqlite3.c	997;"	d	file:
SQLITE_IOERR_ACCESS	utilities/sqlite3/sqlite3.h	448;"	d
SQLITE_IOERR_BLOCKED	utilities/sqlite3/sqlite3.c	995;"	d	file:
SQLITE_IOERR_BLOCKED	utilities/sqlite3/sqlite3.h	446;"	d
SQLITE_IOERR_CHECKRESERVEDLOCK	utilities/sqlite3/sqlite3.c	998;"	d	file:
SQLITE_IOERR_CHECKRESERVEDLOCK	utilities/sqlite3/sqlite3.h	449;"	d
SQLITE_IOERR_CLOSE	utilities/sqlite3/sqlite3.c	1000;"	d	file:
SQLITE_IOERR_CLOSE	utilities/sqlite3/sqlite3.h	451;"	d
SQLITE_IOERR_DELETE	utilities/sqlite3/sqlite3.c	994;"	d	file:
SQLITE_IOERR_DELETE	utilities/sqlite3/sqlite3.h	445;"	d
SQLITE_IOERR_DIR_CLOSE	utilities/sqlite3/sqlite3.c	1001;"	d	file:
SQLITE_IOERR_DIR_CLOSE	utilities/sqlite3/sqlite3.h	452;"	d
SQLITE_IOERR_DIR_FSYNC	utilities/sqlite3/sqlite3.c	989;"	d	file:
SQLITE_IOERR_DIR_FSYNC	utilities/sqlite3/sqlite3.h	440;"	d
SQLITE_IOERR_FSTAT	utilities/sqlite3/sqlite3.c	991;"	d	file:
SQLITE_IOERR_FSTAT	utilities/sqlite3/sqlite3.h	442;"	d
SQLITE_IOERR_FSYNC	utilities/sqlite3/sqlite3.c	988;"	d	file:
SQLITE_IOERR_FSYNC	utilities/sqlite3/sqlite3.h	439;"	d
SQLITE_IOERR_LOCK	utilities/sqlite3/sqlite3.c	999;"	d	file:
SQLITE_IOERR_LOCK	utilities/sqlite3/sqlite3.h	450;"	d
SQLITE_IOERR_NOMEM	utilities/sqlite3/sqlite3.c	996;"	d	file:
SQLITE_IOERR_NOMEM	utilities/sqlite3/sqlite3.h	447;"	d
SQLITE_IOERR_RDLOCK	utilities/sqlite3/sqlite3.c	993;"	d	file:
SQLITE_IOERR_RDLOCK	utilities/sqlite3/sqlite3.h	444;"	d
SQLITE_IOERR_READ	utilities/sqlite3/sqlite3.c	985;"	d	file:
SQLITE_IOERR_READ	utilities/sqlite3/sqlite3.h	436;"	d
SQLITE_IOERR_SEEK	utilities/sqlite3/sqlite3.c	1006;"	d	file:
SQLITE_IOERR_SEEK	utilities/sqlite3/sqlite3.h	457;"	d
SQLITE_IOERR_SHMLOCK	utilities/sqlite3/sqlite3.c	1004;"	d	file:
SQLITE_IOERR_SHMLOCK	utilities/sqlite3/sqlite3.h	455;"	d
SQLITE_IOERR_SHMMAP	utilities/sqlite3/sqlite3.c	1005;"	d	file:
SQLITE_IOERR_SHMMAP	utilities/sqlite3/sqlite3.h	456;"	d
SQLITE_IOERR_SHMOPEN	utilities/sqlite3/sqlite3.c	1002;"	d	file:
SQLITE_IOERR_SHMOPEN	utilities/sqlite3/sqlite3.h	453;"	d
SQLITE_IOERR_SHMSIZE	utilities/sqlite3/sqlite3.c	1003;"	d	file:
SQLITE_IOERR_SHMSIZE	utilities/sqlite3/sqlite3.h	454;"	d
SQLITE_IOERR_SHORT_READ	utilities/sqlite3/sqlite3.c	986;"	d	file:
SQLITE_IOERR_SHORT_READ	utilities/sqlite3/sqlite3.h	437;"	d
SQLITE_IOERR_TRUNCATE	utilities/sqlite3/sqlite3.c	990;"	d	file:
SQLITE_IOERR_TRUNCATE	utilities/sqlite3/sqlite3.h	441;"	d
SQLITE_IOERR_UNLOCK	utilities/sqlite3/sqlite3.c	992;"	d	file:
SQLITE_IOERR_UNLOCK	utilities/sqlite3/sqlite3.h	443;"	d
SQLITE_IOERR_WRITE	utilities/sqlite3/sqlite3.c	987;"	d	file:
SQLITE_IOERR_WRITE	utilities/sqlite3/sqlite3.h	438;"	d
SQLITE_IdxRealAsInt	utilities/sqlite3/sqlite3.c	9600;"	d	file:
SQLITE_IgnoreChecks	utilities/sqlite3/sqlite3.c	9574;"	d	file:
SQLITE_IndexCover	utilities/sqlite3/sqlite3.c	9597;"	d	file:
SQLITE_IndexSearch	utilities/sqlite3/sqlite3.c	9596;"	d	file:
SQLITE_IndexSort	utilities/sqlite3/sqlite3.c	9595;"	d	file:
SQLITE_InternChanges	utilities/sqlite3/sqlite3.c	9561;"	d	file:
SQLITE_JUMPIFNULL	utilities/sqlite3/sqlite3.c	9830;"	d	file:
SQLITE_LAST_ERRNO	utilities/sqlite3/sqlite3.c	1328;"	d	file:
SQLITE_LAST_ERRNO	utilities/sqlite3/sqlite3.h	779;"	d
SQLITE_LIMIT_ATTACHED	utilities/sqlite3/sqlite3.c	3322;"	d	file:
SQLITE_LIMIT_ATTACHED	utilities/sqlite3/sqlite3.h	2773;"	d
SQLITE_LIMIT_COLUMN	utilities/sqlite3/sqlite3.c	3317;"	d	file:
SQLITE_LIMIT_COLUMN	utilities/sqlite3/sqlite3.h	2768;"	d
SQLITE_LIMIT_COMPOUND_SELECT	utilities/sqlite3/sqlite3.c	3319;"	d	file:
SQLITE_LIMIT_COMPOUND_SELECT	utilities/sqlite3/sqlite3.h	2770;"	d
SQLITE_LIMIT_EXPR_DEPTH	utilities/sqlite3/sqlite3.c	3318;"	d	file:
SQLITE_LIMIT_EXPR_DEPTH	utilities/sqlite3/sqlite3.h	2769;"	d
SQLITE_LIMIT_FUNCTION_ARG	utilities/sqlite3/sqlite3.c	3321;"	d	file:
SQLITE_LIMIT_FUNCTION_ARG	utilities/sqlite3/sqlite3.h	2772;"	d
SQLITE_LIMIT_LENGTH	utilities/sqlite3/sqlite3.c	3315;"	d	file:
SQLITE_LIMIT_LENGTH	utilities/sqlite3/sqlite3.h	2766;"	d
SQLITE_LIMIT_LIKE_PATTERN_LENGTH	utilities/sqlite3/sqlite3.c	3323;"	d	file:
SQLITE_LIMIT_LIKE_PATTERN_LENGTH	utilities/sqlite3/sqlite3.h	2774;"	d
SQLITE_LIMIT_SQL_LENGTH	utilities/sqlite3/sqlite3.c	3316;"	d	file:
SQLITE_LIMIT_SQL_LENGTH	utilities/sqlite3/sqlite3.h	2767;"	d
SQLITE_LIMIT_TRIGGER_DEPTH	utilities/sqlite3/sqlite3.c	3325;"	d	file:
SQLITE_LIMIT_TRIGGER_DEPTH	utilities/sqlite3/sqlite3.h	2776;"	d
SQLITE_LIMIT_VARIABLE_NUMBER	utilities/sqlite3/sqlite3.c	3324;"	d	file:
SQLITE_LIMIT_VARIABLE_NUMBER	utilities/sqlite3/sqlite3.h	2775;"	d
SQLITE_LIMIT_VDBE_OP	utilities/sqlite3/sqlite3.c	3320;"	d	file:
SQLITE_LIMIT_VDBE_OP	utilities/sqlite3/sqlite3.h	2771;"	d
SQLITE_LITTLEENDIAN	utilities/sqlite3/sqlite3.c	7728;"	d	file:
SQLITE_LITTLEENDIAN	utilities/sqlite3/sqlite3.c	7732;"	d	file:
SQLITE_LOCKED	utilities/sqlite3/sqlite3.c	937;"	d	file:
SQLITE_LOCKED	utilities/sqlite3/sqlite3.h	388;"	d
SQLITE_LOCKED_SHAREDCACHE	utilities/sqlite3/sqlite3.c	1007;"	d	file:
SQLITE_LOCKED_SHAREDCACHE	utilities/sqlite3/sqlite3.h	458;"	d
SQLITE_LOCK_EXCLUSIVE	utilities/sqlite3/sqlite3.c	1087;"	d	file:
SQLITE_LOCK_EXCLUSIVE	utilities/sqlite3/sqlite3.h	538;"	d
SQLITE_LOCK_NONE	utilities/sqlite3/sqlite3.c	1083;"	d	file:
SQLITE_LOCK_NONE	utilities/sqlite3/sqlite3.h	534;"	d
SQLITE_LOCK_PENDING	utilities/sqlite3/sqlite3.c	1086;"	d	file:
SQLITE_LOCK_PENDING	utilities/sqlite3/sqlite3.h	537;"	d
SQLITE_LOCK_RESERVED	utilities/sqlite3/sqlite3.c	1085;"	d	file:
SQLITE_LOCK_RESERVED	utilities/sqlite3/sqlite3.h	536;"	d
SQLITE_LOCK_SHARED	utilities/sqlite3/sqlite3.c	1084;"	d	file:
SQLITE_LOCK_SHARED	utilities/sqlite3/sqlite3.h	535;"	d
SQLITE_LegacyFileFmt	utilities/sqlite3/sqlite3.c	9576;"	d	file:
SQLITE_LoadExtension	utilities/sqlite3/sqlite3.c	9585;"	d	file:
SQLITE_MAGIC_BUSY	utilities/sqlite3/sqlite3.c	9612;"	d	file:
SQLITE_MAGIC_CLOSED	utilities/sqlite3/sqlite3.c	9610;"	d	file:
SQLITE_MAGIC_ERROR	utilities/sqlite3/sqlite3.c	9613;"	d	file:
SQLITE_MAGIC_OPEN	utilities/sqlite3/sqlite3.c	9609;"	d	file:
SQLITE_MAGIC_SICK	utilities/sqlite3/sqlite3.c	9611;"	d	file:
SQLITE_MALLOC_SOFT_LIMIT	utilities/sqlite3/sqlite3.c	417;"	d	file:
SQLITE_MAX_ATTACHED	utilities/sqlite3/sqlite3.c	207;"	d	file:
SQLITE_MAX_COLUMN	utilities/sqlite3/sqlite3.c	127;"	d	file:
SQLITE_MAX_COMPOUND_SELECT	utilities/sqlite3/sqlite3.c	164;"	d	file:
SQLITE_MAX_DEFAULT_PAGE_SIZE	utilities/sqlite3/sqlite3.c	254;"	d	file:
SQLITE_MAX_DEFAULT_PAGE_SIZE	utilities/sqlite3/sqlite3.c	257;"	d	file:
SQLITE_MAX_DEFAULT_PAGE_SIZE	utilities/sqlite3/sqlite3.c	258;"	d	file:
SQLITE_MAX_EXPR_DEPTH	utilities/sqlite3/sqlite3.c	152;"	d	file:
SQLITE_MAX_FILE_FORMAT	utilities/sqlite3/sqlite3.c	7616;"	d	file:
SQLITE_MAX_FUNCTION_ARG	utilities/sqlite3/sqlite3.c	179;"	d	file:
SQLITE_MAX_LENGTH	utilities/sqlite3/sqlite3.c	106;"	d	file:
SQLITE_MAX_LIKE_PATTERN_LENGTH	utilities/sqlite3/sqlite3.c	130359;"	d	file:
SQLITE_MAX_LIKE_PATTERN_LENGTH	utilities/sqlite3/sqlite3.c	278;"	d	file:
SQLITE_MAX_PAGE_COUNT	utilities/sqlite3/sqlite3.c	270;"	d	file:
SQLITE_MAX_PAGE_SIZE	utilities/sqlite3/sqlite3.c	230;"	d	file:
SQLITE_MAX_PAGE_SIZE	utilities/sqlite3/sqlite3.c	232;"	d	file:
SQLITE_MAX_SCHEMA_RETRY	utilities/sqlite3/sqlite3.c	62007;"	d	file:
SQLITE_MAX_SQL_LENGTH	utilities/sqlite3/sqlite3.c	138;"	d	file:
SQLITE_MAX_TRIGGER_DEPTH	utilities/sqlite3/sqlite3.c	289;"	d	file:
SQLITE_MAX_U32	utilities/sqlite3/sqlite3.c	7714;"	d	file:
SQLITE_MAX_VARIABLE_NUMBER	utilities/sqlite3/sqlite3.c	215;"	d	file:
SQLITE_MAX_VDBE_OP	utilities/sqlite3/sqlite3.c	172;"	d	file:
SQLITE_MISMATCH	utilities/sqlite3/sqlite3.c	951;"	d	file:
SQLITE_MISMATCH	utilities/sqlite3/sqlite3.h	402;"	d
SQLITE_MISUSE	utilities/sqlite3/sqlite3.c	952;"	d	file:
SQLITE_MISUSE	utilities/sqlite3/sqlite3.h	403;"	d
SQLITE_MISUSE_BKPT	utilities/sqlite3/sqlite3.c	11159;"	d	file:
SQLITE_MIXED_ENDIAN_64BIT_FLOAT	utilities/sqlite3/sqlite3.c	7592;"	d	file:
SQLITE_MUTEX_FAST	utilities/sqlite3/sqlite3.c	6055;"	d	file:
SQLITE_MUTEX_FAST	utilities/sqlite3/sqlite3.h	5506;"	d
SQLITE_MUTEX_NOOP	utilities/sqlite3/sqlite3.c	9273;"	d	file:
SQLITE_MUTEX_NREF	utilities/sqlite3/sqlite3.c	17439;"	d	file:
SQLITE_MUTEX_NREF	utilities/sqlite3/sqlite3.c	17441;"	d	file:
SQLITE_MUTEX_OMIT	utilities/sqlite3/sqlite3.c	9263;"	d	file:
SQLITE_MUTEX_OS2	utilities/sqlite3/sqlite3.c	9271;"	d	file:
SQLITE_MUTEX_PTHREADS	utilities/sqlite3/sqlite3.c	9267;"	d	file:
SQLITE_MUTEX_RECURSIVE	utilities/sqlite3/sqlite3.c	6056;"	d	file:
SQLITE_MUTEX_RECURSIVE	utilities/sqlite3/sqlite3.h	5507;"	d
SQLITE_MUTEX_STATIC_LRU	utilities/sqlite3/sqlite3.c	6062;"	d	file:
SQLITE_MUTEX_STATIC_LRU	utilities/sqlite3/sqlite3.h	5513;"	d
SQLITE_MUTEX_STATIC_LRU2	utilities/sqlite3/sqlite3.c	6063;"	d	file:
SQLITE_MUTEX_STATIC_LRU2	utilities/sqlite3/sqlite3.h	5514;"	d
SQLITE_MUTEX_STATIC_MASTER	utilities/sqlite3/sqlite3.c	6057;"	d	file:
SQLITE_MUTEX_STATIC_MASTER	utilities/sqlite3/sqlite3.h	5508;"	d
SQLITE_MUTEX_STATIC_MEM	utilities/sqlite3/sqlite3.c	6058;"	d	file:
SQLITE_MUTEX_STATIC_MEM	utilities/sqlite3/sqlite3.h	5509;"	d
SQLITE_MUTEX_STATIC_MEM2	utilities/sqlite3/sqlite3.c	6059;"	d	file:
SQLITE_MUTEX_STATIC_MEM2	utilities/sqlite3/sqlite3.h	5510;"	d
SQLITE_MUTEX_STATIC_OPEN	utilities/sqlite3/sqlite3.c	6060;"	d	file:
SQLITE_MUTEX_STATIC_OPEN	utilities/sqlite3/sqlite3.h	5511;"	d
SQLITE_MUTEX_STATIC_PMEM	utilities/sqlite3/sqlite3.c	6064;"	d	file:
SQLITE_MUTEX_STATIC_PMEM	utilities/sqlite3/sqlite3.h	5515;"	d
SQLITE_MUTEX_STATIC_PRNG	utilities/sqlite3/sqlite3.c	6061;"	d	file:
SQLITE_MUTEX_STATIC_PRNG	utilities/sqlite3/sqlite3.h	5512;"	d
SQLITE_MUTEX_W32	utilities/sqlite3/sqlite3.c	9269;"	d	file:
SQLITE_NOLFS	utilities/sqlite3/sqlite3.c	953;"	d	file:
SQLITE_NOLFS	utilities/sqlite3/sqlite3.h	404;"	d
SQLITE_NOMEM	utilities/sqlite3/sqlite3.c	938;"	d	file:
SQLITE_NOMEM	utilities/sqlite3/sqlite3.h	389;"	d
SQLITE_NOTADB	utilities/sqlite3/sqlite3.c	957;"	d	file:
SQLITE_NOTADB	utilities/sqlite3/sqlite3.h	408;"	d
SQLITE_NOTFOUND	utilities/sqlite3/sqlite3.c	943;"	d	file:
SQLITE_NOTFOUND	utilities/sqlite3/sqlite3.h	394;"	d
SQLITE_NULL	utilities/sqlite3/sqlite3.c	3934;"	d	file:
SQLITE_NULL	utilities/sqlite3/sqlite3.h	3385;"	d
SQLITE_NULLEQ	utilities/sqlite3/sqlite3.c	9832;"	d	file:
SQLITE_N_BTREE_META	utilities/sqlite3/sqlite3.c	7937;"	d	file:
SQLITE_N_COLCACHE	utilities/sqlite3/sqlite3.c	10770;"	d	file:
SQLITE_N_KEYWORD	utilities/sqlite3/sqlite3.c	109301;"	d	file:
SQLITE_N_LIMIT	utilities/sqlite3/sqlite3.c	9370;"	d	file:
SQLITE_NoReadlock	utilities/sqlite3/sqlite3.c	9572;"	d	file:
SQLITE_NullCallback	utilities/sqlite3/sqlite3.c	9567;"	d	file:
SQLITE_OK	utilities/sqlite3/sqlite3.c	930;"	d	file:
SQLITE_OK	utilities/sqlite3/sqlite3.h	381;"	d
SQLITE_OMIT_DATETIME_FUNCS	utilities/sqlite3/sqlite3.c	7590;"	d	file:
SQLITE_OMIT_TRACE	utilities/sqlite3/sqlite3.c	7591;"	d	file:
SQLITE_OPEN_AUTOPROXY	utilities/sqlite3/sqlite3.c	1026;"	d	file:
SQLITE_OPEN_AUTOPROXY	utilities/sqlite3/sqlite3.h	477;"	d
SQLITE_OPEN_CREATE	utilities/sqlite3/sqlite3.c	1023;"	d	file:
SQLITE_OPEN_CREATE	utilities/sqlite3/sqlite3.h	474;"	d
SQLITE_OPEN_DELETEONCLOSE	utilities/sqlite3/sqlite3.c	1024;"	d	file:
SQLITE_OPEN_DELETEONCLOSE	utilities/sqlite3/sqlite3.h	475;"	d
SQLITE_OPEN_EXCLUSIVE	utilities/sqlite3/sqlite3.c	1025;"	d	file:
SQLITE_OPEN_EXCLUSIVE	utilities/sqlite3/sqlite3.h	476;"	d
SQLITE_OPEN_FULLMUTEX	utilities/sqlite3/sqlite3.c	1036;"	d	file:
SQLITE_OPEN_FULLMUTEX	utilities/sqlite3/sqlite3.h	487;"	d
SQLITE_OPEN_MAIN_DB	utilities/sqlite3/sqlite3.c	1028;"	d	file:
SQLITE_OPEN_MAIN_DB	utilities/sqlite3/sqlite3.h	479;"	d
SQLITE_OPEN_MAIN_JOURNAL	utilities/sqlite3/sqlite3.c	1031;"	d	file:
SQLITE_OPEN_MAIN_JOURNAL	utilities/sqlite3/sqlite3.h	482;"	d
SQLITE_OPEN_MASTER_JOURNAL	utilities/sqlite3/sqlite3.c	1034;"	d	file:
SQLITE_OPEN_MASTER_JOURNAL	utilities/sqlite3/sqlite3.h	485;"	d
SQLITE_OPEN_NOMUTEX	utilities/sqlite3/sqlite3.c	1035;"	d	file:
SQLITE_OPEN_NOMUTEX	utilities/sqlite3/sqlite3.h	486;"	d
SQLITE_OPEN_PRIVATECACHE	utilities/sqlite3/sqlite3.c	1038;"	d	file:
SQLITE_OPEN_PRIVATECACHE	utilities/sqlite3/sqlite3.h	489;"	d
SQLITE_OPEN_READONLY	utilities/sqlite3/sqlite3.c	1021;"	d	file:
SQLITE_OPEN_READONLY	utilities/sqlite3/sqlite3.h	472;"	d
SQLITE_OPEN_READWRITE	utilities/sqlite3/sqlite3.c	1022;"	d	file:
SQLITE_OPEN_READWRITE	utilities/sqlite3/sqlite3.h	473;"	d
SQLITE_OPEN_SHAREDCACHE	utilities/sqlite3/sqlite3.c	1037;"	d	file:
SQLITE_OPEN_SHAREDCACHE	utilities/sqlite3/sqlite3.h	488;"	d
SQLITE_OPEN_SUBJOURNAL	utilities/sqlite3/sqlite3.c	1033;"	d	file:
SQLITE_OPEN_SUBJOURNAL	utilities/sqlite3/sqlite3.h	484;"	d
SQLITE_OPEN_TEMP_DB	utilities/sqlite3/sqlite3.c	1029;"	d	file:
SQLITE_OPEN_TEMP_DB	utilities/sqlite3/sqlite3.h	480;"	d
SQLITE_OPEN_TEMP_JOURNAL	utilities/sqlite3/sqlite3.c	1032;"	d	file:
SQLITE_OPEN_TEMP_JOURNAL	utilities/sqlite3/sqlite3.h	483;"	d
SQLITE_OPEN_TRANSIENT_DB	utilities/sqlite3/sqlite3.c	1030;"	d	file:
SQLITE_OPEN_TRANSIENT_DB	utilities/sqlite3/sqlite3.h	481;"	d
SQLITE_OPEN_URI	utilities/sqlite3/sqlite3.c	1027;"	d	file:
SQLITE_OPEN_URI	utilities/sqlite3/sqlite3.h	478;"	d
SQLITE_OPEN_WAL	utilities/sqlite3/sqlite3.c	1039;"	d	file:
SQLITE_OPEN_WAL	utilities/sqlite3/sqlite3.h	490;"	d
SQLITE_OS2_NO_WAL_LOCK_FILE	utilities/sqlite3/sqlite3.c	23139;"	d	file:
SQLITE_OS2_THREADS	utilities/sqlite3/sqlite3.c	22284;"	d	file:
SQLITE_OS_OS2	utilities/sqlite3/sqlite3.c	8972;"	d	file:
SQLITE_OS_OS2	utilities/sqlite3/sqlite3.c	8973;"	d	file:
SQLITE_OS_OS2	utilities/sqlite3/sqlite3.c	8984;"	d	file:
SQLITE_OS_OS2	utilities/sqlite3/sqlite3.c	8988;"	d	file:
SQLITE_OS_OS2	utilities/sqlite3/sqlite3.c	8992;"	d	file:
SQLITE_OS_OS2	utilities/sqlite3/sqlite3.c	8996;"	d	file:
SQLITE_OS_OTHER	utilities/sqlite3/sqlite3.c	8975;"	d	file:
SQLITE_OS_OTHER	utilities/sqlite3/sqlite3.c	8979;"	d	file:
SQLITE_OS_UNIX	utilities/sqlite3/sqlite3.c	8968;"	d	file:
SQLITE_OS_UNIX	utilities/sqlite3/sqlite3.c	8969;"	d	file:
SQLITE_OS_UNIX	utilities/sqlite3/sqlite3.c	8983;"	d	file:
SQLITE_OS_UNIX	utilities/sqlite3/sqlite3.c	8987;"	d	file:
SQLITE_OS_UNIX	utilities/sqlite3/sqlite3.c	8991;"	d	file:
SQLITE_OS_UNIX	utilities/sqlite3/sqlite3.c	8995;"	d	file:
SQLITE_OS_WIN	utilities/sqlite3/sqlite3.c	8970;"	d	file:
SQLITE_OS_WIN	utilities/sqlite3/sqlite3.c	8971;"	d	file:
SQLITE_OS_WIN	utilities/sqlite3/sqlite3.c	8982;"	d	file:
SQLITE_OS_WIN	utilities/sqlite3/sqlite3.c	8986;"	d	file:
SQLITE_OS_WIN	utilities/sqlite3/sqlite3.c	8990;"	d	file:
SQLITE_OS_WIN	utilities/sqlite3/sqlite3.c	9000;"	d	file:
SQLITE_OS_WINCE	utilities/sqlite3/sqlite3.c	9009;"	d	file:
SQLITE_OS_WINCE	utilities/sqlite3/sqlite3.c	9011;"	d	file:
SQLITE_OptMask	utilities/sqlite3/sqlite3.c	9602;"	d	file:
SQLITE_PERM	utilities/sqlite3/sqlite3.c	934;"	d	file:
SQLITE_PERM	utilities/sqlite3/sqlite3.h	385;"	d
SQLITE_PRAGMA	utilities/sqlite3/sqlite3.c	2852;"	d	file:
SQLITE_PRAGMA	utilities/sqlite3/sqlite3.h	2303;"	d
SQLITE_PRINT_BUF_SIZE	utilities/sqlite3/sqlite3.c	19066;"	d	file:
SQLITE_PRINT_BUF_SIZE	utilities/sqlite3/sqlite3.c	19068;"	d	file:
SQLITE_PRIVATE	utilities/sqlite3/sqlite3.c	23;"	d	file:
SQLITE_PROTOCOL	utilities/sqlite3/sqlite3.c	946;"	d	file:
SQLITE_PROTOCOL	utilities/sqlite3/sqlite3.h	397;"	d
SQLITE_PTR_TO_INT	utilities/sqlite3/sqlite3.c	344;"	d	file:
SQLITE_PTR_TO_INT	utilities/sqlite3/sqlite3.c	347;"	d	file:
SQLITE_PTR_TO_INT	utilities/sqlite3/sqlite3.c	350;"	d	file:
SQLITE_PTR_TO_INT	utilities/sqlite3/sqlite3.c	353;"	d	file:
SQLITE_PreferBuiltin	utilities/sqlite3/sqlite3.c	9584;"	d	file:
SQLITE_QueryFlattener	utilities/sqlite3/sqlite3.c	9593;"	d	file:
SQLITE_RANGE	utilities/sqlite3/sqlite3.c	956;"	d	file:
SQLITE_RANGE	utilities/sqlite3/sqlite3.h	407;"	d
SQLITE_READ	utilities/sqlite3/sqlite3.c	2853;"	d	file:
SQLITE_READ	utilities/sqlite3/sqlite3.h	2304;"	d
SQLITE_READONLY	utilities/sqlite3/sqlite3.c	939;"	d	file:
SQLITE_READONLY	utilities/sqlite3/sqlite3.h	390;"	d
SQLITE_READONLY_CANTLOCK	utilities/sqlite3/sqlite3.c	1012;"	d	file:
SQLITE_READONLY_CANTLOCK	utilities/sqlite3/sqlite3.h	463;"	d
SQLITE_READONLY_RECOVERY	utilities/sqlite3/sqlite3.c	1011;"	d	file:
SQLITE_READONLY_RECOVERY	utilities/sqlite3/sqlite3.h	462;"	d
SQLITE_REINDEX	utilities/sqlite3/sqlite3.c	2860;"	d	file:
SQLITE_REINDEX	utilities/sqlite3/sqlite3.h	2311;"	d
SQLITE_REPLACE	utilities/sqlite3/sqlite3.c	7234;"	d	file:
SQLITE_REPLACE	utilities/sqlite3/sqlite3.h	6685;"	d
SQLITE_ROLLBACK	utilities/sqlite3/sqlite3.c	7230;"	d	file:
SQLITE_ROLLBACK	utilities/sqlite3/sqlite3.h	6681;"	d
SQLITE_ROW	utilities/sqlite3/sqlite3.c	958;"	d	file:
SQLITE_ROW	utilities/sqlite3/sqlite3.h	409;"	d
SQLITE_ReadUncommitted	utilities/sqlite3/sqlite3.c	9575;"	d	file:
SQLITE_RecTriggers	utilities/sqlite3/sqlite3.c	9581;"	d	file:
SQLITE_RecoveryMode	utilities/sqlite3/sqlite3.c	9579;"	d	file:
SQLITE_ReverseOrder	utilities/sqlite3/sqlite3.c	9580;"	d	file:
SQLITE_SAVEPOINT	utilities/sqlite3/sqlite3.c	2865;"	d	file:
SQLITE_SAVEPOINT	utilities/sqlite3/sqlite3.h	2316;"	d
SQLITE_SCHEMA	utilities/sqlite3/sqlite3.c	948;"	d	file:
SQLITE_SCHEMA	utilities/sqlite3/sqlite3.h	399;"	d
SQLITE_SELECT	utilities/sqlite3/sqlite3.c	2854;"	d	file:
SQLITE_SELECT	utilities/sqlite3/sqlite3.h	2305;"	d
SQLITE_SET_LOCKPROXYFILE	utilities/sqlite3/sqlite3.c	1327;"	d	file:
SQLITE_SET_LOCKPROXYFILE	utilities/sqlite3/sqlite3.h	778;"	d
SQLITE_SHM_EXCLUSIVE	utilities/sqlite3/sqlite3.c	1595;"	d	file:
SQLITE_SHM_EXCLUSIVE	utilities/sqlite3/sqlite3.h	1046;"	d
SQLITE_SHM_LOCK	utilities/sqlite3/sqlite3.c	1593;"	d	file:
SQLITE_SHM_LOCK	utilities/sqlite3/sqlite3.h	1044;"	d
SQLITE_SHM_NLOCK	utilities/sqlite3/sqlite3.c	1605;"	d	file:
SQLITE_SHM_NLOCK	utilities/sqlite3/sqlite3.h	1056;"	d
SQLITE_SHM_SHARED	utilities/sqlite3/sqlite3.c	1594;"	d	file:
SQLITE_SHM_SHARED	utilities/sqlite3/sqlite3.h	1045;"	d
SQLITE_SHM_UNLOCK	utilities/sqlite3/sqlite3.c	1592;"	d	file:
SQLITE_SHM_UNLOCK	utilities/sqlite3/sqlite3.h	1043;"	d
SQLITE_SKIP_UTF8	utilities/sqlite3/sqlite3.c	11142;"	d	file:
SQLITE_SOURCE_ID	utilities/sqlite3/sqlite3.c	661;"	d	file:
SQLITE_SOURCE_ID	utilities/sqlite3/sqlite3.h	112;"	d
SQLITE_SO_ASC	utilities/sqlite3/sqlite3.c	9795;"	d	file:
SQLITE_SO_DESC	utilities/sqlite3/sqlite3.c	9796;"	d	file:
SQLITE_STATIC	utilities/sqlite3/sqlite3.c	4505;"	d	file:
SQLITE_STATIC	utilities/sqlite3/sqlite3.h	3956;"	d
SQLITE_STATUS_MALLOC_COUNT	utilities/sqlite3/sqlite3.c	6282;"	d	file:
SQLITE_STATUS_MALLOC_COUNT	utilities/sqlite3/sqlite3.h	5733;"	d
SQLITE_STATUS_MALLOC_SIZE	utilities/sqlite3/sqlite3.c	6278;"	d	file:
SQLITE_STATUS_MALLOC_SIZE	utilities/sqlite3/sqlite3.h	5729;"	d
SQLITE_STATUS_MEMORY_USED	utilities/sqlite3/sqlite3.c	6273;"	d	file:
SQLITE_STATUS_MEMORY_USED	utilities/sqlite3/sqlite3.h	5724;"	d
SQLITE_STATUS_PAGECACHE_OVERFLOW	utilities/sqlite3/sqlite3.c	6275;"	d	file:
SQLITE_STATUS_PAGECACHE_OVERFLOW	utilities/sqlite3/sqlite3.h	5726;"	d
SQLITE_STATUS_PAGECACHE_SIZE	utilities/sqlite3/sqlite3.c	6280;"	d	file:
SQLITE_STATUS_PAGECACHE_SIZE	utilities/sqlite3/sqlite3.h	5731;"	d
SQLITE_STATUS_PAGECACHE_USED	utilities/sqlite3/sqlite3.c	6274;"	d	file:
SQLITE_STATUS_PAGECACHE_USED	utilities/sqlite3/sqlite3.h	5725;"	d
SQLITE_STATUS_PARSER_STACK	utilities/sqlite3/sqlite3.c	6279;"	d	file:
SQLITE_STATUS_PARSER_STACK	utilities/sqlite3/sqlite3.h	5730;"	d
SQLITE_STATUS_SCRATCH_OVERFLOW	utilities/sqlite3/sqlite3.c	6277;"	d	file:
SQLITE_STATUS_SCRATCH_OVERFLOW	utilities/sqlite3/sqlite3.h	5728;"	d
SQLITE_STATUS_SCRATCH_SIZE	utilities/sqlite3/sqlite3.c	6281;"	d	file:
SQLITE_STATUS_SCRATCH_SIZE	utilities/sqlite3/sqlite3.h	5732;"	d
SQLITE_STATUS_SCRATCH_USED	utilities/sqlite3/sqlite3.c	6276;"	d	file:
SQLITE_STATUS_SCRATCH_USED	utilities/sqlite3/sqlite3.h	5727;"	d
SQLITE_STMTSTATUS_AUTOINDEX	utilities/sqlite3/sqlite3.c	6435;"	d	file:
SQLITE_STMTSTATUS_AUTOINDEX	utilities/sqlite3/sqlite3.h	5886;"	d
SQLITE_STMTSTATUS_FULLSCAN_STEP	utilities/sqlite3/sqlite3.c	6433;"	d	file:
SQLITE_STMTSTATUS_FULLSCAN_STEP	utilities/sqlite3/sqlite3.h	5884;"	d
SQLITE_STMTSTATUS_SORT	utilities/sqlite3/sqlite3.c	6434;"	d	file:
SQLITE_STMTSTATUS_SORT	utilities/sqlite3/sqlite3.h	5885;"	d
SQLITE_STOREP2	utilities/sqlite3/sqlite3.c	9831;"	d	file:
SQLITE_SYNC_DATAONLY	utilities/sqlite3/sqlite3.c	1117;"	d	file:
SQLITE_SYNC_DATAONLY	utilities/sqlite3/sqlite3.h	568;"	d
SQLITE_SYNC_FULL	utilities/sqlite3/sqlite3.c	1116;"	d	file:
SQLITE_SYNC_FULL	utilities/sqlite3/sqlite3.h	567;"	d
SQLITE_SYNC_NORMAL	utilities/sqlite3/sqlite3.c	1115;"	d	file:
SQLITE_SYNC_NORMAL	utilities/sqlite3/sqlite3.h	566;"	d
SQLITE_SYSTEM_MALLOC	utilities/sqlite3/sqlite3.c	409;"	d	file:
SQLITE_ShortColNames	utilities/sqlite3/sqlite3.c	9563;"	d	file:
SQLITE_SqlTrace	utilities/sqlite3/sqlite3.c	9569;"	d	file:
SQLITE_TEMPNAME_SIZE	utilities/sqlite3/sqlite3.c	9020;"	d	file:
SQLITE_TEMPNAME_SIZE	utilities/sqlite3/sqlite3.c	9034;"	d	file:
SQLITE_TEMPNAME_SIZE	utilities/sqlite3/sqlite3.c	9036;"	d	file:
SQLITE_TEMP_FILE_PREFIX	utilities/sqlite3/sqlite3.c	9075;"	d	file:
SQLITE_TEMP_STORE	utilities/sqlite3/sqlite3.c	7634;"	d	file:
SQLITE_TESTCTRL_ALWAYS	utilities/sqlite3/sqlite3.c	6150;"	d	file:
SQLITE_TESTCTRL_ALWAYS	utilities/sqlite3/sqlite3.h	5601;"	d
SQLITE_TESTCTRL_ASSERT	utilities/sqlite3/sqlite3.c	6149;"	d	file:
SQLITE_TESTCTRL_ASSERT	utilities/sqlite3/sqlite3.h	5600;"	d
SQLITE_TESTCTRL_BENIGN_MALLOC_HOOKS	utilities/sqlite3/sqlite3.c	6147;"	d	file:
SQLITE_TESTCTRL_BENIGN_MALLOC_HOOKS	utilities/sqlite3/sqlite3.h	5598;"	d
SQLITE_TESTCTRL_BITVEC_TEST	utilities/sqlite3/sqlite3.c	6145;"	d	file:
SQLITE_TESTCTRL_BITVEC_TEST	utilities/sqlite3/sqlite3.h	5596;"	d
SQLITE_TESTCTRL_FAULT_INSTALL	utilities/sqlite3/sqlite3.c	6146;"	d	file:
SQLITE_TESTCTRL_FAULT_INSTALL	utilities/sqlite3/sqlite3.h	5597;"	d
SQLITE_TESTCTRL_FIRST	utilities/sqlite3/sqlite3.c	6141;"	d	file:
SQLITE_TESTCTRL_FIRST	utilities/sqlite3/sqlite3.h	5592;"	d
SQLITE_TESTCTRL_ISKEYWORD	utilities/sqlite3/sqlite3.c	6153;"	d	file:
SQLITE_TESTCTRL_ISKEYWORD	utilities/sqlite3/sqlite3.h	5604;"	d
SQLITE_TESTCTRL_LAST	utilities/sqlite3/sqlite3.c	6157;"	d	file:
SQLITE_TESTCTRL_LAST	utilities/sqlite3/sqlite3.h	5608;"	d
SQLITE_TESTCTRL_LOCALTIME_FAULT	utilities/sqlite3/sqlite3.c	6156;"	d	file:
SQLITE_TESTCTRL_LOCALTIME_FAULT	utilities/sqlite3/sqlite3.h	5607;"	d
SQLITE_TESTCTRL_OPTIMIZATIONS	utilities/sqlite3/sqlite3.c	6152;"	d	file:
SQLITE_TESTCTRL_OPTIMIZATIONS	utilities/sqlite3/sqlite3.h	5603;"	d
SQLITE_TESTCTRL_PENDING_BYTE	utilities/sqlite3/sqlite3.c	6148;"	d	file:
SQLITE_TESTCTRL_PENDING_BYTE	utilities/sqlite3/sqlite3.h	5599;"	d
SQLITE_TESTCTRL_PGHDRSZ	utilities/sqlite3/sqlite3.c	6154;"	d	file:
SQLITE_TESTCTRL_PGHDRSZ	utilities/sqlite3/sqlite3.h	5605;"	d
SQLITE_TESTCTRL_PRNG_RESET	utilities/sqlite3/sqlite3.c	6144;"	d	file:
SQLITE_TESTCTRL_PRNG_RESET	utilities/sqlite3/sqlite3.h	5595;"	d
SQLITE_TESTCTRL_PRNG_RESTORE	utilities/sqlite3/sqlite3.c	6143;"	d	file:
SQLITE_TESTCTRL_PRNG_RESTORE	utilities/sqlite3/sqlite3.h	5594;"	d
SQLITE_TESTCTRL_PRNG_SAVE	utilities/sqlite3/sqlite3.c	6142;"	d	file:
SQLITE_TESTCTRL_PRNG_SAVE	utilities/sqlite3/sqlite3.h	5593;"	d
SQLITE_TESTCTRL_RESERVE	utilities/sqlite3/sqlite3.c	6151;"	d	file:
SQLITE_TESTCTRL_RESERVE	utilities/sqlite3/sqlite3.h	5602;"	d
SQLITE_TESTCTRL_SCRATCHMALLOC	utilities/sqlite3/sqlite3.c	6155;"	d	file:
SQLITE_TESTCTRL_SCRATCHMALLOC	utilities/sqlite3/sqlite3.h	5606;"	d
SQLITE_TEXT	utilities/sqlite3/sqlite3.c	3936;"	d	file:
SQLITE_TEXT	utilities/sqlite3/sqlite3.c	3938;"	d	file:
SQLITE_TEXT	utilities/sqlite3/sqlite3.h	3387;"	d
SQLITE_TEXT	utilities/sqlite3/sqlite3.h	3389;"	d
SQLITE_THREADSAFE	utilities/sqlite3/sqlite3.c	369;"	d	file:
SQLITE_THREADSAFE	utilities/sqlite3/sqlite3.c	371;"	d	file:
SQLITE_TOOBIG	utilities/sqlite3/sqlite3.c	949;"	d	file:
SQLITE_TOOBIG	utilities/sqlite3/sqlite3.h	400;"	d
SQLITE_TRANSACTION	utilities/sqlite3/sqlite3.c	2855;"	d	file:
SQLITE_TRANSACTION	utilities/sqlite3/sqlite3.h	2306;"	d
SQLITE_TRANSIENT	utilities/sqlite3/sqlite3.c	4506;"	d	file:
SQLITE_TRANSIENT	utilities/sqlite3/sqlite3.h	3957;"	d
SQLITE_UNIX_THREADS	utilities/sqlite3/sqlite3.c	24524;"	d	file:
SQLITE_UPDATE	utilities/sqlite3/sqlite3.c	2856;"	d	file:
SQLITE_UPDATE	utilities/sqlite3/sqlite3.h	2307;"	d
SQLITE_USE_URI	utilities/sqlite3/sqlite3.c	12029;"	d	file:
SQLITE_UTF16	utilities/sqlite3/sqlite3.c	4297;"	d	file:
SQLITE_UTF16	utilities/sqlite3/sqlite3.h	3748;"	d
SQLITE_UTF16BE	utilities/sqlite3/sqlite3.c	4296;"	d	file:
SQLITE_UTF16BE	utilities/sqlite3/sqlite3.h	3747;"	d
SQLITE_UTF16LE	utilities/sqlite3/sqlite3.c	4295;"	d	file:
SQLITE_UTF16LE	utilities/sqlite3/sqlite3.h	3746;"	d
SQLITE_UTF16NATIVE	utilities/sqlite3/sqlite3.c	7729;"	d	file:
SQLITE_UTF16NATIVE	utilities/sqlite3/sqlite3.c	7733;"	d	file:
SQLITE_UTF16_ALIGNED	utilities/sqlite3/sqlite3.c	4299;"	d	file:
SQLITE_UTF16_ALIGNED	utilities/sqlite3/sqlite3.h	3750;"	d
SQLITE_UTF8	utilities/sqlite3/sqlite3.c	4294;"	d	file:
SQLITE_UTF8	utilities/sqlite3/sqlite3.h	3745;"	d
SQLITE_VERSION	utilities/sqlite3/sqlite3.c	626;"	d	file:
SQLITE_VERSION	utilities/sqlite3/sqlite3.c	659;"	d	file:
SQLITE_VERSION	utilities/sqlite3/sqlite3.h	110;"	d
SQLITE_VERSION	utilities/sqlite3/sqlite3.h	77;"	d
SQLITE_VERSION_NUMBER	utilities/sqlite3/sqlite3.c	629;"	d	file:
SQLITE_VERSION_NUMBER	utilities/sqlite3/sqlite3.c	660;"	d	file:
SQLITE_VERSION_NUMBER	utilities/sqlite3/sqlite3.h	111;"	d
SQLITE_VERSION_NUMBER	utilities/sqlite3/sqlite3.h	80;"	d
SQLITE_VTAB_CONSTRAINT_SUPPORT	utilities/sqlite3/sqlite3.c	7205;"	d	file:
SQLITE_VTAB_CONSTRAINT_SUPPORT	utilities/sqlite3/sqlite3.h	6656;"	d
SQLITE_VdbeListing	utilities/sqlite3/sqlite3.c	9570;"	d	file:
SQLITE_VdbeTrace	utilities/sqlite3/sqlite3.c	9560;"	d	file:
SQLITE_W32_MUTEX_INITIALIZER	utilities/sqlite3/sqlite3.c	17793;"	d	file:
SQLITE_W32_THREADS	utilities/sqlite3/sqlite3.c	31403;"	d	file:
SQLITE_WIN32_HEAP_FLAGS	utilities/sqlite3/sqlite3.c	31703;"	d	file:
SQLITE_WIN32_HEAP_INIT_SIZE	utilities/sqlite3/sqlite3.c	31687;"	d	file:
SQLITE_WIN32_HEAP_MAX_SIZE	utilities/sqlite3/sqlite3.c	31695;"	d	file:
SQLITE_WIN32_IOERR_RETRY	utilities/sqlite3/sqlite3.c	32221;"	d	file:
SQLITE_WIN32_IOERR_RETRY_DELAY	utilities/sqlite3/sqlite3.c	32224;"	d	file:
SQLITE_WSD	utilities/sqlite3/sqlite3.c	7832;"	d	file:
SQLITE_WSD	utilities/sqlite3/sqlite3.c	7838;"	d	file:
SQLITE_WriteSchema	utilities/sqlite3/sqlite3.c	9571;"	d	file:
SQL_CONTENT_INSERT	utilities/sqlite3/sqlite3.c	122477;"	d	file:
SQL_DELETE_ALL_CONTENT	utilities/sqlite3/sqlite3.c	122461;"	d	file:
SQL_DELETE_ALL_DOCSIZE	utilities/sqlite3/sqlite3.c	122464;"	d	file:
SQL_DELETE_ALL_SEGDIR	utilities/sqlite3/sqlite3.c	122463;"	d	file:
SQL_DELETE_ALL_SEGMENTS	utilities/sqlite3/sqlite3.c	122462;"	d	file:
SQL_DELETE_ALL_STAT	utilities/sqlite3/sqlite3.c	122465;"	d	file:
SQL_DELETE_ALL_TERMS_SEGDIR	utilities/sqlite3/sqlite3.c	122485;"	d	file:
SQL_DELETE_CONTENT	utilities/sqlite3/sqlite3.c	122459;"	d	file:
SQL_DELETE_DOCSIZE	utilities/sqlite3/sqlite3.c	122478;"	d	file:
SQL_DELETE_SEGDIR_LEVEL	utilities/sqlite3/sqlite3.c	122475;"	d	file:
SQL_DELETE_SEGDIR_RANGE	utilities/sqlite3/sqlite3.c	122487;"	d	file:
SQL_DELETE_SEGMENTS_RANGE	utilities/sqlite3/sqlite3.c	122476;"	d	file:
SQL_INSERT_SEGDIR	utilities/sqlite3/sqlite3.c	122470;"	d	file:
SQL_INSERT_SEGMENTS	utilities/sqlite3/sqlite3.c	122468;"	d	file:
SQL_IS_EMPTY	utilities/sqlite3/sqlite3.c	122460;"	d	file:
SQL_NEXT_SEGMENTS_ID	utilities/sqlite3/sqlite3.c	122469;"	d	file:
SQL_NEXT_SEGMENT_INDEX	utilities/sqlite3/sqlite3.c	122467;"	d	file:
SQL_REPLACE_DOCSIZE	utilities/sqlite3/sqlite3.c	122479;"	d	file:
SQL_REPLACE_DOCTOTAL	utilities/sqlite3/sqlite3.c	122482;"	d	file:
SQL_SELECT_ALL_PREFIX_LEVEL	utilities/sqlite3/sqlite3.c	122484;"	d	file:
SQL_SELECT_CONTENT_BY_ROWID	utilities/sqlite3/sqlite3.c	122466;"	d	file:
SQL_SELECT_DOCSIZE	utilities/sqlite3/sqlite3.c	122480;"	d	file:
SQL_SELECT_DOCTOTAL	utilities/sqlite3/sqlite3.c	122481;"	d	file:
SQL_SELECT_LEVEL	utilities/sqlite3/sqlite3.c	122471;"	d	file:
SQL_SELECT_LEVEL_COUNT	utilities/sqlite3/sqlite3.c	122473;"	d	file:
SQL_SELECT_LEVEL_RANGE	utilities/sqlite3/sqlite3.c	122472;"	d	file:
SQL_SELECT_SEGDIR_MAX_LEVEL	utilities/sqlite3/sqlite3.c	122474;"	d	file:
SRT_Coroutine	utilities/sqlite3/sqlite3.c	10735;"	d	file:
SRT_Discard	utilities/sqlite3/sqlite3.c	10725;"	d	file:
SRT_EphemTab	utilities/sqlite3/sqlite3.c	10734;"	d	file:
SRT_Except	utilities/sqlite3/sqlite3.c	10723;"	d	file:
SRT_Exists	utilities/sqlite3/sqlite3.c	10724;"	d	file:
SRT_Mem	utilities/sqlite3/sqlite3.c	10731;"	d	file:
SRT_Output	utilities/sqlite3/sqlite3.c	10730;"	d	file:
SRT_Set	utilities/sqlite3/sqlite3.c	10732;"	d	file:
SRT_Table	utilities/sqlite3/sqlite3.c	10733;"	d	file:
SRT_Union	utilities/sqlite3/sqlite3.c	10722;"	d	file:
STDC_HEADERS	utilities/modbus/config.h	149;"	d
STRICMP	utilities/sqlite3/sqlite3.c	80063;"	d	file:
STR_FUNCTION	utilities/sqlite3/sqlite3.c	9694;"	d	file:
SUFFIXES	build/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/components/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/components/io/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/src/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/src/application/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/src/kernel/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/utilities/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/utilities/common/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/utilities/modbus/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/utilities/sqlite3/Makefile	/^SUFFIXES =$/;"	m
SWAP	utilities/sqlite3/sqlite3.c	100852;"	d	file:
SWORD	include/types.h	/^typedef signed short    SWORD;$/;"	t
Savepoint	utilities/sqlite3/sqlite3.c	/^struct Savepoint {$/;"	s	file:
Savepoint	utilities/sqlite3/sqlite3.c	/^typedef struct Savepoint Savepoint;$/;"	t	typeref:struct:Savepoint	file:
Schema	utilities/sqlite3/sqlite3.c	/^struct Schema {$/;"	s	file:
Schema	utilities/sqlite3/sqlite3.c	/^typedef struct Schema Schema;$/;"	t	typeref:struct:Schema	file:
ScratchFreeslot	utilities/sqlite3/sqlite3.c	/^typedef struct ScratchFreeslot {$/;"	s	file:
ScratchFreeslot	utilities/sqlite3/sqlite3.c	/^} ScratchFreeslot;$/;"	t	typeref:struct:ScratchFreeslot	file:
SegmentNode	utilities/sqlite3/sqlite3.c	/^struct SegmentNode {$/;"	s	file:
SegmentNode	utilities/sqlite3/sqlite3.c	/^typedef struct SegmentNode SegmentNode;$/;"	t	typeref:struct:SegmentNode	file:
SegmentWriter	utilities/sqlite3/sqlite3.c	/^struct SegmentWriter {$/;"	s	file:
SegmentWriter	utilities/sqlite3/sqlite3.c	/^typedef struct SegmentWriter SegmentWriter;$/;"	t	typeref:struct:SegmentWriter	file:
Select	utilities/sqlite3/sqlite3.c	/^struct Select {$/;"	s	file:
Select	utilities/sqlite3/sqlite3.c	/^typedef struct Select Select;$/;"	t	typeref:struct:Select	file:
SelectDest	utilities/sqlite3/sqlite3.c	/^struct SelectDest {$/;"	s	file:
SelectDest	utilities/sqlite3/sqlite3.c	/^typedef struct SelectDest SelectDest;$/;"	t	typeref:struct:SelectDest	file:
ShmRegion	utilities/sqlite3/sqlite3.c	/^  struct ShmRegion {$/;"	s	struct:winShmNode	file:
SimulateDiskfullError	utilities/sqlite3/sqlite3.c	22468;"	d	file:
SimulateDiskfullError	utilities/sqlite3/sqlite3.c	22482;"	d	file:
SimulateDiskfullError	utilities/sqlite3/sqlite3.c	24810;"	d	file:
SimulateDiskfullError	utilities/sqlite3/sqlite3.c	24824;"	d	file:
SimulateDiskfullError	utilities/sqlite3/sqlite3.c	31587;"	d	file:
SimulateDiskfullError	utilities/sqlite3/sqlite3.c	31601;"	d	file:
SimulateIOError	utilities/sqlite3/sqlite3.c	22459;"	d	file:
SimulateIOError	utilities/sqlite3/sqlite3.c	22481;"	d	file:
SimulateIOError	utilities/sqlite3/sqlite3.c	24801;"	d	file:
SimulateIOError	utilities/sqlite3/sqlite3.c	24823;"	d	file:
SimulateIOError	utilities/sqlite3/sqlite3.c	31578;"	d	file:
SimulateIOError	utilities/sqlite3/sqlite3.c	31600;"	d	file:
SimulateIOErrorBenign	utilities/sqlite3/sqlite3.c	22458;"	d	file:
SimulateIOErrorBenign	utilities/sqlite3/sqlite3.c	22480;"	d	file:
SimulateIOErrorBenign	utilities/sqlite3/sqlite3.c	24800;"	d	file:
SimulateIOErrorBenign	utilities/sqlite3/sqlite3.c	24822;"	d	file:
SimulateIOErrorBenign	utilities/sqlite3/sqlite3.c	31577;"	d	file:
SimulateIOErrorBenign	utilities/sqlite3/sqlite3.c	31599;"	d	file:
SizeofArray	utilities/sqlite3/sqlite3.c	114058;"	d	file:
SnippetFragment	utilities/sqlite3/sqlite3.c	/^struct SnippetFragment {$/;"	s	file:
SnippetFragment	utilities/sqlite3/sqlite3.c	/^typedef struct SnippetFragment SnippetFragment;$/;"	t	typeref:struct:SnippetFragment	file:
SnippetIter	utilities/sqlite3/sqlite3.c	/^struct SnippetIter {$/;"	s	file:
SnippetIter	utilities/sqlite3/sqlite3.c	/^typedef struct SnippetIter SnippetIter;$/;"	t	typeref:struct:SnippetIter	file:
SnippetPhrase	utilities/sqlite3/sqlite3.c	/^struct SnippetPhrase {$/;"	s	file:
SnippetPhrase	utilities/sqlite3/sqlite3.c	/^typedef struct SnippetPhrase SnippetPhrase;$/;"	t	typeref:struct:SnippetPhrase	file:
SortByDimension	utilities/sqlite3/sqlite3.c	/^static void SortByDimension($/;"	f	file:
SortByDistance	utilities/sqlite3/sqlite3.c	/^static void SortByDistance($/;"	f	file:
SorterRecord	utilities/sqlite3/sqlite3.c	/^struct SorterRecord {$/;"	s	file:
SorterRecord	utilities/sqlite3/sqlite3.c	/^typedef struct SorterRecord SorterRecord;$/;"	t	typeref:struct:SorterRecord	file:
SplitNode	utilities/sqlite3/sqlite3.c	/^static int SplitNode($/;"	f	file:
Sqlite3Config	utilities/sqlite3/sqlite3.c	/^struct Sqlite3Config {$/;"	s	file:
SrcList	utilities/sqlite3/sqlite3.c	/^struct SrcList {$/;"	s	file:
SrcList	utilities/sqlite3/sqlite3.c	/^typedef struct SrcList SrcList;$/;"	t	typeref:struct:SrcList	file:
SrcList_item	utilities/sqlite3/sqlite3.c	/^  struct SrcList_item {$/;"	s	struct:SrcList	file:
StrAccum	utilities/sqlite3/sqlite3.c	/^struct StrAccum {$/;"	s	file:
StrAccum	utilities/sqlite3/sqlite3.c	/^typedef struct StrAccum StrAccum;$/;"	t	typeref:struct:StrAccum	file:
StrBuffer	utilities/sqlite3/sqlite3.c	/^struct StrBuffer {$/;"	s	file:
StrBuffer	utilities/sqlite3/sqlite3.c	/^typedef struct StrBuffer StrBuffer;$/;"	t	typeref:struct:StrBuffer	file:
Stringify	utilities/sqlite3/sqlite3.c	63137;"	d	file:
SubProgram	utilities/sqlite3/sqlite3.c	/^struct SubProgram {$/;"	s	file:
SubProgram	utilities/sqlite3/sqlite3.c	/^typedef struct SubProgram SubProgram;$/;"	t	typeref:struct:SubProgram	file:
SumCtx	utilities/sqlite3/sqlite3.c	/^struct SumCtx {$/;"	s	file:
SumCtx	utilities/sqlite3/sqlite3.c	/^typedef struct SumCtx SumCtx;$/;"	t	typeref:struct:SumCtx	file:
TEMP_MASTER_NAME	utilities/sqlite3/sqlite3.c	7793;"	d	file:
TERM_ANDINFO	utilities/sqlite3/sqlite3.c	100460;"	d	file:
TERM_CODED	utilities/sqlite3/sqlite3.c	100457;"	d	file:
TERM_COPIED	utilities/sqlite3/sqlite3.c	100458;"	d	file:
TERM_DYNAMIC	utilities/sqlite3/sqlite3.c	100455;"	d	file:
TERM_ORINFO	utilities/sqlite3/sqlite3.c	100459;"	d	file:
TERM_OR_OK	utilities/sqlite3/sqlite3.c	100461;"	d	file:
TERM_VIRTUAL	utilities/sqlite3/sqlite3.c	100456;"	d	file:
TERM_VNULL	utilities/sqlite3/sqlite3.c	100463;"	d	file:
TERM_VNULL	utilities/sqlite3/sqlite3.c	100465;"	d	file:
TESTBIT	utilities/sqlite3/sqlite3.c	35062;"	d	file:
TESTONLY	utilities/sqlite3/sqlite3.c	114147;"	d	file:
TESTONLY	utilities/sqlite3/sqlite3.c	114149;"	d	file:
TESTONLY	utilities/sqlite3/sqlite3.c	482;"	d	file:
TESTONLY	utilities/sqlite3/sqlite3.c	484;"	d	file:
TF_Autoincrement	utilities/sqlite3/sqlite3.c	9952;"	d	file:
TF_Ephemeral	utilities/sqlite3/sqlite3.c	9950;"	d	file:
TF_HasPrimaryKey	utilities/sqlite3/sqlite3.c	9951;"	d	file:
TF_NeedMetadata	utilities/sqlite3/sqlite3.c	9954;"	d	file:
TF_Readonly	utilities/sqlite3/sqlite3.c	9949;"	d	file:
TF_Virtual	utilities/sqlite3/sqlite3.c	9953;"	d	file:
TICK_PER_SECOND	include/timer.h	30;"	d
TIMER_ELAPSED	utilities/sqlite3/sqlite3.c	22438;"	d	file:
TIMER_ELAPSED	utilities/sqlite3/sqlite3.c	22442;"	d	file:
TIMER_ELAPSED	utilities/sqlite3/sqlite3.c	24780;"	d	file:
TIMER_ELAPSED	utilities/sqlite3/sqlite3.c	24784;"	d	file:
TIMER_ELAPSED	utilities/sqlite3/sqlite3.c	31557;"	d	file:
TIMER_ELAPSED	utilities/sqlite3/sqlite3.c	31561;"	d	file:
TIMER_END	utilities/sqlite3/sqlite3.c	22437;"	d	file:
TIMER_END	utilities/sqlite3/sqlite3.c	22441;"	d	file:
TIMER_END	utilities/sqlite3/sqlite3.c	24779;"	d	file:
TIMER_END	utilities/sqlite3/sqlite3.c	24783;"	d	file:
TIMER_END	utilities/sqlite3/sqlite3.c	31556;"	d	file:
TIMER_END	utilities/sqlite3/sqlite3.c	31560;"	d	file:
TIMER_START	include/timer.h	28;"	d
TIMER_START	utilities/sqlite3/sqlite3.c	22436;"	d	file:
TIMER_START	utilities/sqlite3/sqlite3.c	22440;"	d	file:
TIMER_START	utilities/sqlite3/sqlite3.c	24778;"	d	file:
TIMER_START	utilities/sqlite3/sqlite3.c	24782;"	d	file:
TIMER_START	utilities/sqlite3/sqlite3.c	31555;"	d	file:
TIMER_START	utilities/sqlite3/sqlite3.c	31559;"	d	file:
TIMER_STOP	include/timer.h	27;"	d
TIME_WITH_SYS_TIME	utilities/modbus/config.h	152;"	d
TK_ABORT	utilities/sqlite3/sqlite3.c	7440;"	d	file:
TK_ACTION	utilities/sqlite3/sqlite3.c	7441;"	d	file:
TK_ADD	utilities/sqlite3/sqlite3.c	7552;"	d	file:
TK_AFTER	utilities/sqlite3/sqlite3.c	7442;"	d	file:
TK_AGG_COLUMN	utilities/sqlite3/sqlite3.c	7566;"	d	file:
TK_AGG_FUNCTION	utilities/sqlite3/sqlite3.c	7565;"	d	file:
TK_ALL	utilities/sqlite3/sqlite3.c	7525;"	d	file:
TK_ALTER	utilities/sqlite3/sqlite3.c	7551;"	d	file:
TK_ANALYZE	utilities/sqlite3/sqlite3.c	7443;"	d	file:
TK_AND	utilities/sqlite3/sqlite3.c	7481;"	d	file:
TK_ANY	utilities/sqlite3/sqlite3.c	7479;"	d	file:
TK_AS	utilities/sqlite3/sqlite3.c	7436;"	d	file:
TK_ASC	utilities/sqlite3/sqlite3.c	7444;"	d	file:
TK_ATTACH	utilities/sqlite3/sqlite3.c	7445;"	d	file:
TK_AUTOINCR	utilities/sqlite3/sqlite3.c	7515;"	d	file:
TK_BEFORE	utilities/sqlite3/sqlite3.c	7446;"	d	file:
TK_BEGIN	utilities/sqlite3/sqlite3.c	7417;"	d	file:
TK_BETWEEN	utilities/sqlite3/sqlite3.c	7483;"	d	file:
TK_BITAND	utilities/sqlite3/sqlite3.c	7494;"	d	file:
TK_BITNOT	utilities/sqlite3/sqlite3.c	7505;"	d	file:
TK_BITOR	utilities/sqlite3/sqlite3.c	7495;"	d	file:
TK_BLOB	utilities/sqlite3/sqlite3.c	7543;"	d	file:
TK_BY	utilities/sqlite3/sqlite3.c	7447;"	d	file:
TK_CASCADE	utilities/sqlite3/sqlite3.c	7448;"	d	file:
TK_CASE	utilities/sqlite3/sqlite3.c	7546;"	d	file:
TK_CAST	utilities/sqlite3/sqlite3.c	7449;"	d	file:
TK_CHECK	utilities/sqlite3/sqlite3.c	7513;"	d	file:
TK_COLLATE	utilities/sqlite3/sqlite3.c	7504;"	d	file:
TK_COLUMN	utilities/sqlite3/sqlite3.c	7564;"	d	file:
TK_COLUMNKW	utilities/sqlite3/sqlite3.c	7450;"	d	file:
TK_COMMA	utilities/sqlite3/sqlite3.c	7437;"	d	file:
TK_COMMIT	utilities/sqlite3/sqlite3.c	7422;"	d	file:
TK_CONCAT	utilities/sqlite3/sqlite3.c	7503;"	d	file:
TK_CONFLICT	utilities/sqlite3/sqlite3.c	7451;"	d	file:
TK_CONSTRAINT	utilities/sqlite3/sqlite3.c	7508;"	d	file:
TK_CONST_FUNC	utilities/sqlite3/sqlite3.c	7567;"	d	file:
TK_CREATE	utilities/sqlite3/sqlite3.c	7429;"	d	file:
TK_CTIME_KW	utilities/sqlite3/sqlite3.c	7478;"	d	file:
TK_DATABASE	utilities/sqlite3/sqlite3.c	7452;"	d	file:
TK_DEFAULT	utilities/sqlite3/sqlite3.c	7509;"	d	file:
TK_DEFERRABLE	utilities/sqlite3/sqlite3.c	7521;"	d	file:
TK_DEFERRED	utilities/sqlite3/sqlite3.c	7419;"	d	file:
TK_DELETE	utilities/sqlite3/sqlite3.c	7518;"	d	file:
TK_DESC	utilities/sqlite3/sqlite3.c	7453;"	d	file:
TK_DETACH	utilities/sqlite3/sqlite3.c	7454;"	d	file:
TK_DISTINCT	utilities/sqlite3/sqlite3.c	7529;"	d	file:
TK_DOT	utilities/sqlite3/sqlite3.c	7530;"	d	file:
TK_DROP	utilities/sqlite3/sqlite3.c	7523;"	d	file:
TK_EACH	utilities/sqlite3/sqlite3.c	7455;"	d	file:
TK_ELSE	utilities/sqlite3/sqlite3.c	7549;"	d	file:
TK_END	utilities/sqlite3/sqlite3.c	7423;"	d	file:
TK_END_OF_FILE	utilities/sqlite3/sqlite3.c	7559;"	d	file:
TK_EQ	utilities/sqlite3/sqlite3.c	7488;"	d	file:
TK_ESCAPE	utilities/sqlite3/sqlite3.c	7493;"	d	file:
TK_EXCEPT	utilities/sqlite3/sqlite3.c	7526;"	d	file:
TK_EXCLUSIVE	utilities/sqlite3/sqlite3.c	7421;"	d	file:
TK_EXISTS	utilities/sqlite3/sqlite3.c	7432;"	d	file:
TK_EXPLAIN	utilities/sqlite3/sqlite3.c	7414;"	d	file:
TK_FAIL	utilities/sqlite3/sqlite3.c	7456;"	d	file:
TK_FLOAT	utilities/sqlite3/sqlite3.c	7542;"	d	file:
TK_FOR	utilities/sqlite3/sqlite3.c	7457;"	d	file:
TK_FOREIGN	utilities/sqlite3/sqlite3.c	7522;"	d	file:
TK_FROM	utilities/sqlite3/sqlite3.c	7531;"	d	file:
TK_FUNCTION	utilities/sqlite3/sqlite3.c	7563;"	d	file:
TK_GE	utilities/sqlite3/sqlite3.c	7492;"	d	file:
TK_GROUP	utilities/sqlite3/sqlite3.c	7535;"	d	file:
TK_GT	utilities/sqlite3/sqlite3.c	7489;"	d	file:
TK_HAVING	utilities/sqlite3/sqlite3.c	7536;"	d	file:
TK_ID	utilities/sqlite3/sqlite3.c	7438;"	d	file:
TK_IF	utilities/sqlite3/sqlite3.c	7430;"	d	file:
TK_IGNORE	utilities/sqlite3/sqlite3.c	7458;"	d	file:
TK_ILLEGAL	utilities/sqlite3/sqlite3.c	7560;"	d	file:
TK_IMMEDIATE	utilities/sqlite3/sqlite3.c	7420;"	d	file:
TK_IN	utilities/sqlite3/sqlite3.c	7484;"	d	file:
TK_INDEX	utilities/sqlite3/sqlite3.c	7550;"	d	file:
TK_INDEXED	utilities/sqlite3/sqlite3.c	7439;"	d	file:
TK_INITIALLY	utilities/sqlite3/sqlite3.c	7459;"	d	file:
TK_INSERT	utilities/sqlite3/sqlite3.c	7517;"	d	file:
TK_INSTEAD	utilities/sqlite3/sqlite3.c	7460;"	d	file:
TK_INTEGER	utilities/sqlite3/sqlite3.c	7541;"	d	file:
TK_INTERSECT	utilities/sqlite3/sqlite3.c	7527;"	d	file:
TK_INTO	utilities/sqlite3/sqlite3.c	7539;"	d	file:
TK_IS	utilities/sqlite3/sqlite3.c	7482;"	d	file:
TK_ISNOT	utilities/sqlite3/sqlite3.c	7558;"	d	file:
TK_ISNULL	utilities/sqlite3/sqlite3.c	7485;"	d	file:
TK_JOIN	utilities/sqlite3/sqlite3.c	7532;"	d	file:
TK_JOIN_KW	utilities/sqlite3/sqlite3.c	7507;"	d	file:
TK_KEY	utilities/sqlite3/sqlite3.c	7464;"	d	file:
TK_LE	utilities/sqlite3/sqlite3.c	7490;"	d	file:
TK_LIKE_KW	utilities/sqlite3/sqlite3.c	7461;"	d	file:
TK_LIMIT	utilities/sqlite3/sqlite3.c	7537;"	d	file:
TK_LP	utilities/sqlite3/sqlite3.c	7434;"	d	file:
TK_LSHIFT	utilities/sqlite3/sqlite3.c	7496;"	d	file:
TK_LT	utilities/sqlite3/sqlite3.c	7491;"	d	file:
TK_MATCH	utilities/sqlite3/sqlite3.c	7462;"	d	file:
TK_MINUS	utilities/sqlite3/sqlite3.c	7499;"	d	file:
TK_NE	utilities/sqlite3/sqlite3.c	7487;"	d	file:
TK_NO	utilities/sqlite3/sqlite3.c	7463;"	d	file:
TK_NOT	utilities/sqlite3/sqlite3.c	7431;"	d	file:
TK_NOTNULL	utilities/sqlite3/sqlite3.c	7486;"	d	file:
TK_NULL	utilities/sqlite3/sqlite3.c	7510;"	d	file:
TK_OF	utilities/sqlite3/sqlite3.c	7465;"	d	file:
TK_OFFSET	utilities/sqlite3/sqlite3.c	7466;"	d	file:
TK_ON	utilities/sqlite3/sqlite3.c	7516;"	d	file:
TK_OR	utilities/sqlite3/sqlite3.c	7480;"	d	file:
TK_ORDER	utilities/sqlite3/sqlite3.c	7534;"	d	file:
TK_PLAN	utilities/sqlite3/sqlite3.c	7416;"	d	file:
TK_PLUS	utilities/sqlite3/sqlite3.c	7498;"	d	file:
TK_PRAGMA	utilities/sqlite3/sqlite3.c	7467;"	d	file:
TK_PRIMARY	utilities/sqlite3/sqlite3.c	7511;"	d	file:
TK_QUERY	utilities/sqlite3/sqlite3.c	7415;"	d	file:
TK_RAISE	utilities/sqlite3/sqlite3.c	7468;"	d	file:
TK_REFERENCES	utilities/sqlite3/sqlite3.c	7514;"	d	file:
TK_REGISTER	utilities/sqlite3/sqlite3.c	7544;"	d	file:
TK_REINDEX	utilities/sqlite3/sqlite3.c	7476;"	d	file:
TK_RELEASE	utilities/sqlite3/sqlite3.c	7426;"	d	file:
TK_REM	utilities/sqlite3/sqlite3.c	7502;"	d	file:
TK_RENAME	utilities/sqlite3/sqlite3.c	7477;"	d	file:
TK_REPLACE	utilities/sqlite3/sqlite3.c	7469;"	d	file:
TK_RESTRICT	utilities/sqlite3/sqlite3.c	7470;"	d	file:
TK_ROLLBACK	utilities/sqlite3/sqlite3.c	7424;"	d	file:
TK_ROW	utilities/sqlite3/sqlite3.c	7471;"	d	file:
TK_RP	utilities/sqlite3/sqlite3.c	7435;"	d	file:
TK_RSHIFT	utilities/sqlite3/sqlite3.c	7497;"	d	file:
TK_SAVEPOINT	utilities/sqlite3/sqlite3.c	7425;"	d	file:
TK_SELECT	utilities/sqlite3/sqlite3.c	7528;"	d	file:
TK_SEMI	utilities/sqlite3/sqlite3.c	7413;"	d	file:
TK_SET	utilities/sqlite3/sqlite3.c	7520;"	d	file:
TK_SLASH	utilities/sqlite3/sqlite3.c	7501;"	d	file:
TK_SPACE	utilities/sqlite3/sqlite3.c	7561;"	d	file:
TK_STAR	utilities/sqlite3/sqlite3.c	7500;"	d	file:
TK_STRING	utilities/sqlite3/sqlite3.c	7506;"	d	file:
TK_TABLE	utilities/sqlite3/sqlite3.c	7428;"	d	file:
TK_TEMP	utilities/sqlite3/sqlite3.c	7433;"	d	file:
TK_THEN	utilities/sqlite3/sqlite3.c	7548;"	d	file:
TK_TO	utilities/sqlite3/sqlite3.c	7427;"	d	file:
TK_TO_BLOB	utilities/sqlite3/sqlite3.c	7554;"	d	file:
TK_TO_INT	utilities/sqlite3/sqlite3.c	7556;"	d	file:
TK_TO_NUMERIC	utilities/sqlite3/sqlite3.c	7555;"	d	file:
TK_TO_REAL	utilities/sqlite3/sqlite3.c	7557;"	d	file:
TK_TO_TEXT	utilities/sqlite3/sqlite3.c	7553;"	d	file:
TK_TRANSACTION	utilities/sqlite3/sqlite3.c	7418;"	d	file:
TK_TRIGGER	utilities/sqlite3/sqlite3.c	7472;"	d	file:
TK_UMINUS	utilities/sqlite3/sqlite3.c	7568;"	d	file:
TK_UNCLOSED_STRING	utilities/sqlite3/sqlite3.c	7562;"	d	file:
TK_UNION	utilities/sqlite3/sqlite3.c	7524;"	d	file:
TK_UNIQUE	utilities/sqlite3/sqlite3.c	7512;"	d	file:
TK_UPDATE	utilities/sqlite3/sqlite3.c	7519;"	d	file:
TK_UPLUS	utilities/sqlite3/sqlite3.c	7569;"	d	file:
TK_USING	utilities/sqlite3/sqlite3.c	7533;"	d	file:
TK_VACUUM	utilities/sqlite3/sqlite3.c	7473;"	d	file:
TK_VALUES	utilities/sqlite3/sqlite3.c	7540;"	d	file:
TK_VARIABLE	utilities/sqlite3/sqlite3.c	7545;"	d	file:
TK_VIEW	utilities/sqlite3/sqlite3.c	7474;"	d	file:
TK_VIRTUAL	utilities/sqlite3/sqlite3.c	7475;"	d	file:
TK_WHEN	utilities/sqlite3/sqlite3.c	7547;"	d	file:
TK_WHERE	utilities/sqlite3/sqlite3.c	7538;"	d	file:
TOKEN	utilities/sqlite3/sqlite3.c	108768;"	d	file:
TRACE	utilities/sqlite3/sqlite3.c	48287;"	d	file:
TRACE_IDX_INPUTS	utilities/sqlite3/sqlite3.c	/^static void TRACE_IDX_INPUTS(sqlite3_index_info *p){$/;"	f	file:
TRACE_IDX_INPUTS	utilities/sqlite3/sqlite3.c	102112;"	d	file:
TRACE_IDX_OUTPUTS	utilities/sqlite3/sqlite3.c	/^static void TRACE_IDX_OUTPUTS(sqlite3_index_info *p){$/;"	f	file:
TRACE_IDX_OUTPUTS	utilities/sqlite3/sqlite3.c	102113;"	d	file:
TRANS_NONE	utilities/sqlite3/sqlite3.c	47702;"	d	file:
TRANS_READ	utilities/sqlite3/sqlite3.c	47703;"	d	file:
TRANS_WRITE	utilities/sqlite3/sqlite3.c	47704;"	d	file:
TRIGGER_AFTER	utilities/sqlite3/sqlite3.c	10976;"	d	file:
TRIGGER_BEFORE	utilities/sqlite3/sqlite3.c	10975;"	d	file:
TRUE	include/def.h	24;"	d
TRUE	utilities/modbus/modbus.h	52;"	d
TWOPOWER31	utilities/sqlite3/sqlite3.c	21728;"	d	file:
TWOPOWER32	utilities/sqlite3/sqlite3.c	21727;"	d	file:
TabResult	utilities/sqlite3/sqlite3.c	/^typedef struct TabResult {$/;"	s	file:
TabResult	utilities/sqlite3/sqlite3.c	/^} TabResult;$/;"	t	typeref:struct:TabResult	file:
Table	utilities/sqlite3/sqlite3.c	/^struct Table {$/;"	s	file:
Table	utilities/sqlite3/sqlite3.c	/^typedef struct Table Table;$/;"	t	typeref:struct:Table	file:
TableLock	utilities/sqlite3/sqlite3.c	/^struct TableLock {$/;"	s	file:
TableLock	utilities/sqlite3/sqlite3.c	/^typedef struct TableLock TableLock;$/;"	t	typeref:struct:TableLock	file:
TermOffset	utilities/sqlite3/sqlite3.c	/^struct TermOffset {$/;"	s	file:
TermOffset	utilities/sqlite3/sqlite3.c	/^typedef struct TermOffset TermOffset;$/;"	t	typeref:struct:TermOffset	file:
TermOffsetCtx	utilities/sqlite3/sqlite3.c	/^struct TermOffsetCtx {$/;"	s	file:
TermOffsetCtx	utilities/sqlite3/sqlite3.c	/^typedef struct TermOffsetCtx TermOffsetCtx;$/;"	t	typeref:struct:TermOffsetCtx	file:
TermSelect	utilities/sqlite3/sqlite3.c	/^struct TermSelect {$/;"	s	file:
TermSelect	utilities/sqlite3/sqlite3.c	/^typedef struct TermSelect TermSelect;$/;"	t	typeref:struct:TermSelect	file:
Token	utilities/sqlite3/sqlite3.c	/^struct Token {$/;"	s	file:
Token	utilities/sqlite3/sqlite3.c	/^typedef struct Token Token;$/;"	t	typeref:struct:Token	file:
TrigEvent	utilities/sqlite3/sqlite3.c	/^struct TrigEvent { int a; IdList * b; };$/;"	s	file:
Trigger	utilities/sqlite3/sqlite3.c	/^struct Trigger {$/;"	s	file:
Trigger	utilities/sqlite3/sqlite3.c	/^typedef struct Trigger Trigger;$/;"	t	typeref:struct:Trigger	file:
TriggerPrg	utilities/sqlite3/sqlite3.c	/^struct TriggerPrg {$/;"	s	file:
TriggerPrg	utilities/sqlite3/sqlite3.c	/^typedef struct TriggerPrg TriggerPrg;$/;"	t	typeref:struct:TriggerPrg	file:
TriggerStep	utilities/sqlite3/sqlite3.c	/^struct TriggerStep {$/;"	s	file:
TriggerStep	utilities/sqlite3/sqlite3.c	/^typedef struct TriggerStep TriggerStep;$/;"	t	typeref:struct:TriggerStep	file:
UINT	include/types.h	/^typedef unsigned int    UINT;$/;"	t
UINT16_TYPE	utilities/sqlite3/sqlite3.c	7671;"	d	file:
UINT16_TYPE	utilities/sqlite3/sqlite3.c	7673;"	d	file:
UINT32_TYPE	utilities/sqlite3/sqlite3.c	7664;"	d	file:
UINT32_TYPE	utilities/sqlite3/sqlite3.c	7666;"	d	file:
UINT8_TYPE	utilities/sqlite3/sqlite3.c	7685;"	d	file:
UINT8_TYPE	utilities/sqlite3/sqlite3.c	7687;"	d	file:
UNIXFILE_DIRSYNC	utilities/sqlite3/sqlite3.c	24624;"	d	file:
UNIXFILE_DIRSYNC	utilities/sqlite3/sqlite3.c	24626;"	d	file:
UNIXFILE_EXCL	utilities/sqlite3/sqlite3.c	24620;"	d	file:
UNIXFILE_PERSIST_WAL	utilities/sqlite3/sqlite3.c	24622;"	d	file:
UNIXFILE_RDONLY	utilities/sqlite3/sqlite3.c	24621;"	d	file:
UNIXVFS	utilities/sqlite3/sqlite3.c	31266;"	d	file:
UNIX_SHM_BASE	utilities/sqlite3/sqlite3.c	28227;"	d	file:
UNIX_SHM_DMS	utilities/sqlite3/sqlite3.c	28228;"	d	file:
UNKNOWN_LOCK	utilities/sqlite3/sqlite3.c	37939;"	d	file:
UNPACKED_IGNORE_ROWID	utilities/sqlite3/sqlite3.c	10087;"	d	file:
UNPACKED_INCRKEY	utilities/sqlite3/sqlite3.c	10088;"	d	file:
UNPACKED_NEED_DESTROY	utilities/sqlite3/sqlite3.c	10086;"	d	file:
UNPACKED_NEED_FREE	utilities/sqlite3/sqlite3.c	10085;"	d	file:
UNPACKED_PREFIX_MATCH	utilities/sqlite3/sqlite3.c	10089;"	d	file:
UNPACKED_PREFIX_SEARCH	utilities/sqlite3/sqlite3.c	10090;"	d	file:
UNUSED_PARAMETER	utilities/sqlite3/sqlite3.c	114132;"	d	file:
UNUSED_PARAMETER	utilities/sqlite3/sqlite3.c	127144;"	d	file:
UNUSED_PARAMETER	utilities/sqlite3/sqlite3.c	7859;"	d	file:
UNUSED_PARAMETER2	utilities/sqlite3/sqlite3.c	7860;"	d	file:
UPDATE_MAX_BLOBSIZE	utilities/sqlite3/sqlite3.c	63128;"	d	file:
UPDATE_MAX_BLOBSIZE	utilities/sqlite3/sqlite3.c	63130;"	d	file:
UnixUnusedFd	utilities/sqlite3/sqlite3.c	/^struct UnixUnusedFd {$/;"	s	file:
UnixUnusedFd	utilities/sqlite3/sqlite3.c	/^typedef struct UnixUnusedFd UnixUnusedFd;     \/* An unused file descriptor *\/$/;"	t	typeref:struct:UnixUnusedFd	file:
UnlockFile	utilities/sqlite3/sqlite3.c	32297;"	d	file:
UnpackedRecord	utilities/sqlite3/sqlite3.c	/^struct UnpackedRecord {$/;"	s	file:
UnpackedRecord	utilities/sqlite3/sqlite3.c	/^typedef struct UnpackedRecord UnpackedRecord;$/;"	t	typeref:struct:UnpackedRecord	file:
UpperToLower	utilities/sqlite3/sqlite3.c	20824;"	d	file:
VARIANT_GUTTMAN_LINEAR_SPLIT	utilities/sqlite3/sqlite3.c	127102;"	d	file:
VARIANT_GUTTMAN_QUADRATIC_SPLIT	utilities/sqlite3/sqlite3.c	127101;"	d	file:
VARIANT_GUTTMAN_SPLIT	utilities/sqlite3/sqlite3.c	127105;"	d	file:
VARIANT_RSTARTREE_CHOOSESUBTREE	utilities/sqlite3/sqlite3.c	127095;"	d	file:
VARIANT_RSTARTREE_REINSERT	utilities/sqlite3/sqlite3.c	127096;"	d	file:
VARIANT_RSTARTREE_SPLIT	utilities/sqlite3/sqlite3.c	127103;"	d	file:
VDBE_MAGIC_DEAD	utilities/sqlite3/sqlite3.c	12877;"	d	file:
VDBE_MAGIC_HALT	utilities/sqlite3/sqlite3.c	12876;"	d	file:
VDBE_MAGIC_INIT	utilities/sqlite3/sqlite3.c	12874;"	d	file:
VDBE_MAGIC_RUN	utilities/sqlite3/sqlite3.c	12875;"	d	file:
VERSION	include/version.h	21;"	d
VERSION	utilities/modbus/config.h	155;"	d
VTable	utilities/sqlite3/sqlite3.c	/^struct VTable {$/;"	s	file:
VTable	utilities/sqlite3/sqlite3.c	/^typedef struct VTable VTable;$/;"	t	typeref:struct:VTable	file:
VVA_ONLY	utilities/sqlite3/sqlite3.c	496;"	d	file:
VVA_ONLY	utilities/sqlite3/sqlite3.c	498;"	d	file:
Vdbe	utilities/sqlite3/sqlite3.c	/^struct Vdbe {$/;"	s	file:
Vdbe	utilities/sqlite3/sqlite3.c	/^typedef struct Vdbe Vdbe;$/;"	t	typeref:struct:Vdbe	file:
VdbeComment	utilities/sqlite3/sqlite3.c	8576;"	d	file:
VdbeComment	utilities/sqlite3/sqlite3.c	8580;"	d	file:
VdbeCursor	utilities/sqlite3/sqlite3.c	/^struct VdbeCursor {$/;"	s	file:
VdbeCursor	utilities/sqlite3/sqlite3.c	/^typedef struct VdbeCursor VdbeCursor;$/;"	t	typeref:struct:VdbeCursor	file:
VdbeFrame	utilities/sqlite3/sqlite3.c	/^struct VdbeFrame {$/;"	s	file:
VdbeFrame	utilities/sqlite3/sqlite3.c	/^typedef struct VdbeFrame VdbeFrame;$/;"	t	typeref:struct:VdbeFrame	file:
VdbeFrameMem	utilities/sqlite3/sqlite3.c	12670;"	d	file:
VdbeFunc	utilities/sqlite3/sqlite3.c	/^struct VdbeFunc {$/;"	s	file:
VdbeFunc	utilities/sqlite3/sqlite3.c	/^typedef struct VdbeFunc VdbeFunc;$/;"	t	typeref:struct:VdbeFunc	file:
VdbeNoopComment	utilities/sqlite3/sqlite3.c	8578;"	d	file:
VdbeNoopComment	utilities/sqlite3/sqlite3.c	8581;"	d	file:
VdbeOp	utilities/sqlite3/sqlite3.c	/^struct VdbeOp {$/;"	s	file:
VdbeOp	utilities/sqlite3/sqlite3.c	/^typedef struct VdbeOp VdbeOp;$/;"	t	typeref:struct:VdbeOp	file:
VdbeOpIter	utilities/sqlite3/sqlite3.c	/^struct VdbeOpIter {$/;"	s	file:
VdbeOpIter	utilities/sqlite3/sqlite3.c	/^typedef struct VdbeOpIter VdbeOpIter;$/;"	t	typeref:struct:VdbeOpIter	file:
VdbeOpList	utilities/sqlite3/sqlite3.c	/^struct VdbeOpList {$/;"	s	file:
VdbeOpList	utilities/sqlite3/sqlite3.c	/^typedef struct VdbeOpList VdbeOpList;$/;"	t	typeref:struct:VdbeOpList	file:
VdbeSorter	utilities/sqlite3/sqlite3.c	/^struct VdbeSorter {$/;"	s	file:
VdbeSorter	utilities/sqlite3/sqlite3.c	/^typedef struct VdbeSorter VdbeSorter;$/;"	t	typeref:struct:VdbeSorter	file:
VdbeSorterIter	utilities/sqlite3/sqlite3.c	/^struct VdbeSorterIter {$/;"	s	file:
VdbeSorterIter	utilities/sqlite3/sqlite3.c	/^typedef struct VdbeSorterIter VdbeSorterIter;$/;"	t	typeref:struct:VdbeSorterIter	file:
VtabCtx	utilities/sqlite3/sqlite3.c	/^struct VtabCtx {$/;"	s	file:
VtabCtx	utilities/sqlite3/sqlite3.c	/^typedef struct VtabCtx VtabCtx;$/;"	t	typeref:struct:VtabCtx	file:
WALINDEX_HDR_SIZE	utilities/sqlite3/sqlite3.c	44742;"	d	file:
WALINDEX_LOCK_OFFSET	utilities/sqlite3/sqlite3.c	44740;"	d	file:
WALINDEX_LOCK_RESERVED	utilities/sqlite3/sqlite3.c	44741;"	d	file:
WALINDEX_MAX_VERSION	utilities/sqlite3/sqlite3.c	44635;"	d	file:
WALINDEX_PGSZ	utilities/sqlite3/sqlite3.c	44864;"	d	file:
WALTRACE	utilities/sqlite3/sqlite3.c	44616;"	d	file:
WALTRACE	utilities/sqlite3/sqlite3.c	44618;"	d	file:
WAL_ALL_BUT_WRITE	utilities/sqlite3/sqlite3.c	44642;"	d	file:
WAL_CKPT_LOCK	utilities/sqlite3/sqlite3.c	44643;"	d	file:
WAL_EXCLUSIVE_MODE	utilities/sqlite3/sqlite3.c	44801;"	d	file:
WAL_FRAME_HDRSIZE	utilities/sqlite3/sqlite3.c	44745;"	d	file:
WAL_HDRSIZE	utilities/sqlite3/sqlite3.c	44749;"	d	file:
WAL_HEAPMEMORY_MODE	utilities/sqlite3/sqlite3.c	44802;"	d	file:
WAL_MAGIC	utilities/sqlite3/sqlite3.c	44760;"	d	file:
WAL_MAX_VERSION	utilities/sqlite3/sqlite3.c	44634;"	d	file:
WAL_NORMAL_MODE	utilities/sqlite3/sqlite3.c	44800;"	d	file:
WAL_NREADER	utilities/sqlite3/sqlite3.c	44646;"	d	file:
WAL_RDONLY	utilities/sqlite3/sqlite3.c	44808;"	d	file:
WAL_RDWR	utilities/sqlite3/sqlite3.c	44807;"	d	file:
WAL_READ_LOCK	utilities/sqlite3/sqlite3.c	44645;"	d	file:
WAL_RECOVER_LOCK	utilities/sqlite3/sqlite3.c	44644;"	d	file:
WAL_RETRY	utilities/sqlite3/sqlite3.c	46337;"	d	file:
WAL_SAVEPOINT_NDATA	utilities/sqlite3/sqlite3.c	37472;"	d	file:
WAL_SHM_RDONLY	utilities/sqlite3/sqlite3.c	44809;"	d	file:
WAL_WRITE_LOCK	utilities/sqlite3/sqlite3.c	44641;"	d	file:
WHERETRACE	utilities/sqlite3/sqlite3.c	100370;"	d	file:
WHERETRACE	utilities/sqlite3/sqlite3.c	100372;"	d	file:
WHERE_BOTH_LIMIT	utilities/sqlite3/sqlite3.c	100589;"	d	file:
WHERE_BTM_LIMIT	utilities/sqlite3/sqlite3.c	100588;"	d	file:
WHERE_COLUMN_EQ	utilities/sqlite3/sqlite3.c	100580;"	d	file:
WHERE_COLUMN_IN	utilities/sqlite3/sqlite3.c	100582;"	d	file:
WHERE_COLUMN_NULL	utilities/sqlite3/sqlite3.c	100583;"	d	file:
WHERE_COLUMN_RANGE	utilities/sqlite3/sqlite3.c	100581;"	d	file:
WHERE_DISTINCT	utilities/sqlite3/sqlite3.c	100597;"	d	file:
WHERE_DISTINCT_ORDERED	utilities/sqlite3/sqlite3.c	10628;"	d	file:
WHERE_DISTINCT_UNIQUE	utilities/sqlite3/sqlite3.c	10627;"	d	file:
WHERE_DUPLICATES_OK	utilities/sqlite3/sqlite3.c	10597;"	d	file:
WHERE_FORCE_TABLE	utilities/sqlite3/sqlite3.c	10600;"	d	file:
WHERE_IDX_ONLY	utilities/sqlite3/sqlite3.c	100590;"	d	file:
WHERE_INDEXED	utilities/sqlite3/sqlite3.c	100584;"	d	file:
WHERE_IN_ABLE	utilities/sqlite3/sqlite3.c	100586;"	d	file:
WHERE_MULTI_OR	utilities/sqlite3/sqlite3.c	100595;"	d	file:
WHERE_NOT_FULLSCAN	utilities/sqlite3/sqlite3.c	100585;"	d	file:
WHERE_OMIT_CLOSE	utilities/sqlite3/sqlite3.c	10599;"	d	file:
WHERE_OMIT_OPEN	utilities/sqlite3/sqlite3.c	10598;"	d	file:
WHERE_ONEPASS_DESIRED	utilities/sqlite3/sqlite3.c	10596;"	d	file:
WHERE_ONETABLE_ONLY	utilities/sqlite3/sqlite3.c	10601;"	d	file:
WHERE_ORDERBY	utilities/sqlite3/sqlite3.c	100591;"	d	file:
WHERE_ORDERBY_MAX	utilities/sqlite3/sqlite3.c	10595;"	d	file:
WHERE_ORDERBY_MIN	utilities/sqlite3/sqlite3.c	10594;"	d	file:
WHERE_ORDERBY_NORMAL	utilities/sqlite3/sqlite3.c	10593;"	d	file:
WHERE_REVERSE	utilities/sqlite3/sqlite3.c	100592;"	d	file:
WHERE_ROWID_EQ	utilities/sqlite3/sqlite3.c	100578;"	d	file:
WHERE_ROWID_RANGE	utilities/sqlite3/sqlite3.c	100579;"	d	file:
WHERE_TEMP_INDEX	utilities/sqlite3/sqlite3.c	100596;"	d	file:
WHERE_TOP_LIMIT	utilities/sqlite3/sqlite3.c	100587;"	d	file:
WHERE_UNIQUE	utilities/sqlite3/sqlite3.c	100593;"	d	file:
WHERE_VIRTUALTABLE	utilities/sqlite3/sqlite3.c	100594;"	d	file:
WHO	include/who.h	1;"	d
WINCE_DELETION_ATTEMPTS	utilities/sqlite3/sqlite3.c	32647;"	d	file:
WINMEM_MAGIC	utilities/sqlite3/sqlite3.c	31720;"	d	file:
WINVER	utilities/modbus/modbus-tcp.c	34;"	d	file:
WIN_SHM_BASE	utilities/sqlite3/sqlite3.c	33353;"	d	file:
WIN_SHM_DMS	utilities/sqlite3/sqlite3.c	33354;"	d	file:
WORD	include/types.h	/^typedef unsigned short  WORD;$/;"	t
WO_ALL	utilities/sqlite3/sqlite3.c	100562;"	d	file:
WO_AND	utilities/sqlite3/sqlite3.c	100559;"	d	file:
WO_EQ	utilities/sqlite3/sqlite3.c	100551;"	d	file:
WO_GE	utilities/sqlite3/sqlite3.c	100555;"	d	file:
WO_GT	utilities/sqlite3/sqlite3.c	100554;"	d	file:
WO_IN	utilities/sqlite3/sqlite3.c	100550;"	d	file:
WO_ISNULL	utilities/sqlite3/sqlite3.c	100557;"	d	file:
WO_LE	utilities/sqlite3/sqlite3.c	100553;"	d	file:
WO_LT	utilities/sqlite3/sqlite3.c	100552;"	d	file:
WO_MATCH	utilities/sqlite3/sqlite3.c	100556;"	d	file:
WO_NOOP	utilities/sqlite3/sqlite3.c	100560;"	d	file:
WO_OR	utilities/sqlite3/sqlite3.c	100558;"	d	file:
WO_SINGLE	utilities/sqlite3/sqlite3.c	100563;"	d	file:
WPARAM	include/types.h	/^typedef UINT            WPARAM;$/;"	t
WRC_Abort	utilities/sqlite3/sqlite3.c	11136;"	d	file:
WRC_Continue	utilities/sqlite3/sqlite3.c	11134;"	d	file:
WRC_Prune	utilities/sqlite3/sqlite3.c	11135;"	d	file:
WRITE_LOCK	utilities/sqlite3/sqlite3.c	47657;"	d	file:
WRITE_UTF16BE	utilities/sqlite3/sqlite3.c	20145;"	d	file:
WRITE_UTF16LE	utilities/sqlite3/sqlite3.c	20133;"	d	file:
WRITE_UTF8	utilities/sqlite3/sqlite3.c	20113;"	d	file:
Wal	utilities/sqlite3/sqlite3.c	/^struct Wal {$/;"	s	file:
Wal	utilities/sqlite3/sqlite3.c	/^typedef struct Wal Wal;$/;"	t	typeref:struct:Wal	file:
WalCkptInfo	utilities/sqlite3/sqlite3.c	/^struct WalCkptInfo {$/;"	s	file:
WalCkptInfo	utilities/sqlite3/sqlite3.c	/^typedef struct WalCkptInfo WalCkptInfo;$/;"	t	typeref:struct:WalCkptInfo	file:
WalIndexHdr	utilities/sqlite3/sqlite3.c	/^struct WalIndexHdr {$/;"	s	file:
WalIndexHdr	utilities/sqlite3/sqlite3.c	/^typedef struct WalIndexHdr WalIndexHdr;$/;"	t	typeref:struct:WalIndexHdr	file:
WalIterator	utilities/sqlite3/sqlite3.c	/^struct WalIterator {$/;"	s	file:
WalIterator	utilities/sqlite3/sqlite3.c	/^typedef struct WalIterator WalIterator;$/;"	t	typeref:struct:WalIterator	file:
WalSegment	utilities/sqlite3/sqlite3.c	/^  struct WalSegment {$/;"	s	struct:WalIterator	file:
Walker	utilities/sqlite3/sqlite3.c	/^struct Walker {$/;"	s	file:
Walker	utilities/sqlite3/sqlite3.c	/^typedef struct Walker Walker;$/;"	t	typeref:struct:Walker	file:
WhereAndInfo	utilities/sqlite3/sqlite3.c	/^struct WhereAndInfo {$/;"	s	file:
WhereAndInfo	utilities/sqlite3/sqlite3.c	/^typedef struct WhereAndInfo WhereAndInfo;$/;"	t	typeref:struct:WhereAndInfo	file:
WhereClause	utilities/sqlite3/sqlite3.c	/^struct WhereClause {$/;"	s	file:
WhereClause	utilities/sqlite3/sqlite3.c	/^typedef struct WhereClause WhereClause;$/;"	t	typeref:struct:WhereClause	file:
WhereCost	utilities/sqlite3/sqlite3.c	/^struct WhereCost {$/;"	s	file:
WhereCost	utilities/sqlite3/sqlite3.c	/^typedef struct WhereCost WhereCost;$/;"	t	typeref:struct:WhereCost	file:
WhereInfo	utilities/sqlite3/sqlite3.c	/^struct WhereInfo {$/;"	s	file:
WhereInfo	utilities/sqlite3/sqlite3.c	/^typedef struct WhereInfo WhereInfo;$/;"	t	typeref:struct:WhereInfo	file:
WhereLevel	utilities/sqlite3/sqlite3.c	/^struct WhereLevel {$/;"	s	file:
WhereLevel	utilities/sqlite3/sqlite3.c	/^typedef struct WhereLevel WhereLevel;$/;"	t	typeref:struct:WhereLevel	file:
WhereMaskSet	utilities/sqlite3/sqlite3.c	/^struct WhereMaskSet {$/;"	s	file:
WhereMaskSet	utilities/sqlite3/sqlite3.c	/^typedef struct WhereMaskSet WhereMaskSet;$/;"	t	typeref:struct:WhereMaskSet	file:
WhereOrInfo	utilities/sqlite3/sqlite3.c	/^struct WhereOrInfo {$/;"	s	file:
WhereOrInfo	utilities/sqlite3/sqlite3.c	/^typedef struct WhereOrInfo WhereOrInfo;$/;"	t	typeref:struct:WhereOrInfo	file:
WherePlan	utilities/sqlite3/sqlite3.c	/^struct WherePlan {$/;"	s	file:
WherePlan	utilities/sqlite3/sqlite3.c	/^typedef struct WherePlan WherePlan;$/;"	t	typeref:struct:WherePlan	file:
WhereTerm	utilities/sqlite3/sqlite3.c	/^struct WhereTerm {$/;"	s	file:
WhereTerm	utilities/sqlite3/sqlite3.c	/^typedef struct WhereTerm WhereTerm;$/;"	t	typeref:struct:WhereTerm	file:
Write	utilities/common/tools.c	/^ssize_t Write(int fd, const void *ptr, size_t nbytes)$/;"	f
Y	utilities/sqlite3/sqlite3.c	/^  int Y, M, D;       \/* Year, month, and day *\/$/;"	m	struct:DateTime	file:
YYACTIONTYPE	utilities/sqlite3/sqlite3.c	105719;"	d	file:
YYCODETYPE	utilities/sqlite3/sqlite3.c	105717;"	d	file:
YYFALLBACK	utilities/sqlite3/sqlite3.c	105748;"	d	file:
YYMINORTYPE	utilities/sqlite3/sqlite3.c	/^} YYMINORTYPE;$/;"	t	typeref:union:__anon24	file:
YYNOCODE	utilities/sqlite3/sqlite3.c	105718;"	d	file:
YYNOERRORRECOVERY	utilities/sqlite3/sqlite3.c	105554;"	d	file:
YYNRULE	utilities/sqlite3/sqlite3.c	105747;"	d	file:
YYNSTATE	utilities/sqlite3/sqlite3.c	105746;"	d	file:
YYSTACKDEPTH	utilities/sqlite3/sqlite3.c	105740;"	d	file:
YYWILDCARD	utilities/sqlite3/sqlite3.c	105720;"	d	file:
YY_ACCEPT_ACTION	utilities/sqlite3/sqlite3.c	105750;"	d	file:
YY_ACTTAB_COUNT	utilities/sqlite3/sqlite3.c	105817;"	d	file:
YY_ERROR_ACTION	utilities/sqlite3/sqlite3.c	105751;"	d	file:
YY_NO_ACTION	utilities/sqlite3/sqlite3.c	105749;"	d	file:
YY_REDUCE_COUNT	utilities/sqlite3/sqlite3.c	106183;"	d	file:
YY_REDUCE_MAX	utilities/sqlite3/sqlite3.c	106185;"	d	file:
YY_REDUCE_MIN	utilities/sqlite3/sqlite3.c	106184;"	d	file:
YY_REDUCE_USE_DFLT	utilities/sqlite3/sqlite3.c	106182;"	d	file:
YY_SHIFT_COUNT	utilities/sqlite3/sqlite3.c	106135;"	d	file:
YY_SHIFT_MAX	utilities/sqlite3/sqlite3.c	106137;"	d	file:
YY_SHIFT_MIN	utilities/sqlite3/sqlite3.c	106136;"	d	file:
YY_SHIFT_USE_DFLT	utilities/sqlite3/sqlite3.c	106134;"	d	file:
_704_tty_file	utilities/common/serial_port.c	/^static const char *_704_tty_file[] = $/;"	v	file:
_801_tty_file	utilities/common/serial_port.c	/^static const char *_801_tty_file[] = $/;"	v	file:
_802_tty_file	utilities/common/serial_port.c	/^static const char *_802_tty_file[] = $/;"	v	file:
_BTREE_H_	utilities/sqlite3/sqlite3.c	7932;"	d	file:
_BYTE_TIMEOUT	utilities/modbus/modbus-private.h	53;"	d
_FC_READ_COILS	utilities/modbus/modbus-private.h	56;"	d
_FC_READ_DISCRETE_INPUTS	utilities/modbus/modbus-private.h	57;"	d
_FC_READ_EXCEPTION_STATUS	utilities/modbus/modbus-private.h	62;"	d
_FC_READ_HOLDING_REGISTERS	utilities/modbus/modbus-private.h	58;"	d
_FC_READ_INPUT_REGISTERS	utilities/modbus/modbus-private.h	59;"	d
_FC_REPORT_SLAVE_ID	utilities/modbus/modbus-private.h	65;"	d
_FC_WRITE_AND_READ_REGISTERS	utilities/modbus/modbus-private.h	66;"	d
_FC_WRITE_MULTIPLE_COILS	utilities/modbus/modbus-private.h	63;"	d
_FC_WRITE_MULTIPLE_REGISTERS	utilities/modbus/modbus-private.h	64;"	d
_FC_WRITE_SINGLE_COIL	utilities/modbus/modbus-private.h	60;"	d
_FC_WRITE_SINGLE_REGISTER	utilities/modbus/modbus-private.h	61;"	d
_FILE_OFFSET_BITS	utilities/sqlite3/sqlite3.c	24475;"	d	file:
_FILE_OFFSET_BITS	utilities/sqlite3/sqlite3.c	68;"	d	file:
_FTS3_HASH_H_	utilities/sqlite3/sqlite3.c	113937;"	d	file:
_FTS3_TOKENIZER_H_	utilities/sqlite3/sqlite3.c	113784;"	d	file:
_FTSINT_H	utilities/sqlite3/sqlite3.c	113740;"	d	file:
_GNU_SOURCE	utilities/sqlite3/sqlite3.c	306;"	d	file:
_HWTIME_H_	utilities/sqlite3/sqlite3.c	22361;"	d	file:
_HWTIME_H_	utilities/sqlite3/sqlite3.c	24703;"	d	file:
_HWTIME_H_	utilities/sqlite3/sqlite3.c	31480;"	d	file:
_HWTIME_H_	utilities/sqlite3/sqlite3.c	63490;"	d	file:
_LARGEFILE_SOURCE	utilities/sqlite3/sqlite3.c	24477;"	d	file:
_LARGEFILE_SOURCE	utilities/sqlite3/sqlite3.c	70;"	d	file:
_LARGE_FILE	utilities/sqlite3/sqlite3.c	24473;"	d	file:
_LARGE_FILE	utilities/sqlite3/sqlite3.c	66;"	d	file:
_MIN_REQ_LENGTH	utilities/modbus/modbus-private.h	45;"	d
_MODBUS_BACKEND_TYPE_RTU	utilities/modbus/modbus-private.h	/^    _MODBUS_BACKEND_TYPE_RTU=0,$/;"	e	enum:__anon1
_MODBUS_BACKEND_TYPE_TCP	utilities/modbus/modbus-private.h	/^    _MODBUS_BACKEND_TYPE_TCP$/;"	e	enum:__anon1
_MODBUS_EXCEPTION_RSP_LENGTH	utilities/modbus/modbus-private.h	49;"	d
_MODBUS_H_	utilities/modbus/modbus.h	20;"	d
_MODBUS_PRIVATE_H_	utilities/modbus/modbus-private.h	20;"	d
_MODBUS_RTU_CHECKSUM_LENGTH	utilities/modbus/modbus-rtu-private.h	38;"	d
_MODBUS_RTU_HEADER_LENGTH	utilities/modbus/modbus-rtu-private.h	34;"	d
_MODBUS_RTU_H_	utilities/modbus/modbus-rtu.h	20;"	d
_MODBUS_RTU_PRESET_REQ_LENGTH	utilities/modbus/modbus-rtu-private.h	35;"	d
_MODBUS_RTU_PRESET_RSP_LENGTH	utilities/modbus/modbus-rtu-private.h	36;"	d
_MODBUS_RTU_PRIVATE_H_	utilities/modbus/modbus-rtu-private.h	20;"	d
_MODBUS_TCP_CHECKSUM_LENGTH	utilities/modbus/modbus-tcp-private.h	26;"	d
_MODBUS_TCP_HEADER_LENGTH	utilities/modbus/modbus-tcp-private.h	22;"	d
_MODBUS_TCP_H_	utilities/modbus/modbus-tcp.h	20;"	d
_MODBUS_TCP_PI_NODE_LENGTH	utilities/modbus/modbus-tcp-private.h	35;"	d
_MODBUS_TCP_PI_SERVICE_LENGTH	utilities/modbus/modbus-tcp-private.h	36;"	d
_MODBUS_TCP_PRESET_REQ_LENGTH	utilities/modbus/modbus-tcp-private.h	23;"	d
_MODBUS_TCP_PRESET_RSP_LENGTH	utilities/modbus/modbus-tcp-private.h	24;"	d
_MODBUS_TCP_PRIVATE_H_	utilities/modbus/modbus-tcp-private.h	20;"	d
_MODBUS_VERSION_H_	utilities/modbus/modbus-version.h	19;"	d
_OS_COMMON_H_	utilities/sqlite3/sqlite3.c	22312;"	d	file:
_OS_COMMON_H_	utilities/sqlite3/sqlite3.c	24654;"	d	file:
_OS_COMMON_H_	utilities/sqlite3/sqlite3.c	31431;"	d	file:
_OvflCell	utilities/sqlite3/sqlite3.c	/^  struct _OvflCell {   \/* Cells that will not fit on aData[] *\/$/;"	s	struct:MemPage	file:
_PAGER_H_	utilities/sqlite3/sqlite3.c	8607;"	d	file:
_REPORT_SLAVE_ID	utilities/modbus/modbus-private.h	47;"	d
_RESPONSE_TIMEOUT	utilities/modbus/modbus-private.h	52;"	d
_SHM_RDLCK	utilities/sqlite3/sqlite3.c	23269;"	d	file:
_SHM_RDLCK	utilities/sqlite3/sqlite3.c	33360;"	d	file:
_SHM_UNLCK	utilities/sqlite3/sqlite3.c	23268;"	d	file:
_SHM_UNLCK	utilities/sqlite3/sqlite3.c	33359;"	d	file:
_SHM_WRLCK	utilities/sqlite3/sqlite3.c	23270;"	d	file:
_SHM_WRLCK	utilities/sqlite3/sqlite3.c	33361;"	d	file:
_SHM_WRLCK_WAIT	utilities/sqlite3/sqlite3.c	23271;"	d	file:
_SQLITE3EXT_H_	utilities/sqlite3/sqlite3.c	88908;"	d	file:
_SQLITE3RTREE_H_	utilities/sqlite3/sqlite3.c	7265;"	d	file:
_SQLITE3RTREE_H_	utilities/sqlite3/sqlite3.h	6716;"	d
_SQLITE3_H_	utilities/sqlite3/sqlite3.c	583;"	d	file:
_SQLITE3_H_	utilities/sqlite3/sqlite3.h	34;"	d
_SQLITEINT_H_	utilities/sqlite3/sqlite3.c	44;"	d	file:
_SQLITE_HASH_H_	utilities/sqlite3/sqlite3.c	7327;"	d	file:
_SQLITE_OS_C_	utilities/sqlite3/sqlite3.c	14347;"	d	file:
_SQLITE_OS_C_	utilities/sqlite3/sqlite3.c	14348;"	d	file:
_SQLITE_OS_H_	utilities/sqlite3/sqlite3.c	8957;"	d	file:
_SQLITE_VDBE_H_	utilities/sqlite3/sqlite3.c	8180;"	d	file:
_STEP_DATA	utilities/modbus/modbus.c	/^    _STEP_DATA$/;"	e	enum:__anon5	file:
_STEP_FUNCTION	utilities/modbus/modbus.c	/^    _STEP_FUNCTION,$/;"	e	enum:__anon5	file:
_STEP_META	utilities/modbus/modbus.c	/^    _STEP_META,$/;"	e	enum:__anon5	file:
_VDBEINT_H_	utilities/sqlite3/sqlite3.c	12559;"	d	file:
_WAL_H_	utilities/sqlite3/sqlite3.c	37449;"	d	file:
_XOPEN_SOURCE	utilities/sqlite3/sqlite3.c	434;"	d	file:
__COMMON_H__	include/common.h	19;"	d
__CONFIG_H__	include/config.h	19;"	d
__DEF_H__	include/def.h	19;"	d
__IO_H__	components/include/io.h	19;"	d
__IPC_H__	utilities/include/ipc.h	19;"	d
__LIST_H__	include/list.h	19;"	d
__MESSAGE_H__	include/message.h	19;"	d
__OBJECT_H__	include/object.h	19;"	d
__PRINT_H__	include/print.h	19;"	d
__SEM_H_	utilities/include/sem.h	20;"	d
__SERIAL_H__	utilities/include/serial_port.h	19;"	d
__TIMER_H__	include/timer.h	19;"	d
__TOOLS_H__	utilities/include/tools.h	19;"	d
__TYPES_H__	include/types.h	19;"	d
__VERSION_H__	include/version.h	19;"	d
__buf	utilities/common/sem.c	/^	struct seminfo  *__buf;  \/* Buffer for IPC_INFO$/;"	m	union:semun	typeref:struct:semun::seminfo	file:
__declspec	utilities/sqlite3/sqlite3.c	/^  __declspec(naked) __inline sqlite_uint64 __cdecl sqlite3Hwtime(void){$/;"	f
__timer_counter	src/kernel/timer.c	/^static unsigned long long __timer_counter = 0;$/;"	v	file:
_close	include/def.h	/^	void (*_close)	(object_t parent);				\/\/\/<关闭$/;"	m	struct:object_io
_connect	include/def.h	/^	int  (*_connect)(object_t parent);				\/\/\/<连接$/;"	m	struct:object_io
_error_print	utilities/modbus/modbus.c	/^void _error_print(modbus_t *ctx, const char *context)$/;"	f
_fts3ht	utilities/sqlite3/sqlite3.c	/^  struct _fts3ht {        \/* the hash table *\/$/;"	s	struct:Fts3Hash	file:
_ht	utilities/sqlite3/sqlite3.c	/^  struct _ht {              \/* the hash table *\/$/;"	s	struct:Hash	file:
_info	include/def.h	/^	void (*_info)	(void);							\/\/\/<接口信息$/;"	m	struct:object_io
_init	include/def.h	/^	int  (*_init)	(object_t parent, void *info, object_buf_t, object_buf_t);	\/\/\/<初始化$/;"	m	struct:object_io
_modbus	utilities/modbus/modbus-private.h	/^struct _modbus {$/;"	s
_modbus_backend	utilities/modbus/modbus-private.h	/^typedef struct _modbus_backend {$/;"	s
_modbus_init_common	utilities/modbus/modbus.c	/^void _modbus_init_common(modbus_t *ctx)$/;"	f
_modbus_rtu	utilities/modbus/modbus-rtu-private.h	/^typedef struct _modbus_rtu {$/;"	s
_modbus_rtu_backend	utilities/modbus/modbus-rtu.c	/^const modbus_backend_t _modbus_rtu_backend = {$/;"	v
_modbus_rtu_build_request_basis	utilities/modbus/modbus-rtu.c	/^static int _modbus_rtu_build_request_basis(modbus_t *ctx, int function,$/;"	f	file:
_modbus_rtu_build_response_basis	utilities/modbus/modbus-rtu.c	/^static int _modbus_rtu_build_response_basis(sft_t *sft, uint8_t *rsp)$/;"	f	file:
_modbus_rtu_check_integrity	utilities/modbus/modbus-rtu.c	/^int _modbus_rtu_check_integrity(modbus_t *ctx, uint8_t *msg,$/;"	f
_modbus_rtu_close	utilities/modbus/modbus-rtu.c	/^void _modbus_rtu_close(modbus_t *ctx)$/;"	f
_modbus_rtu_connect	utilities/modbus/modbus-rtu.c	/^static int _modbus_rtu_connect(modbus_t *ctx)$/;"	f	file:
_modbus_rtu_filter_request	utilities/modbus/modbus-rtu.c	/^int _modbus_rtu_filter_request(modbus_t *ctx, int slave)$/;"	f
_modbus_rtu_flush	utilities/modbus/modbus-rtu.c	/^int _modbus_rtu_flush(modbus_t *ctx)$/;"	f
_modbus_rtu_prepare_response_tid	utilities/modbus/modbus-rtu.c	/^int _modbus_rtu_prepare_response_tid(const uint8_t *req, int *req_length)$/;"	f
_modbus_rtu_recv	utilities/modbus/modbus-rtu.c	/^ssize_t _modbus_rtu_recv(modbus_t *ctx, uint8_t *rsp, int rsp_length)$/;"	f
_modbus_rtu_select	utilities/modbus/modbus-rtu.c	/^int _modbus_rtu_select(modbus_t *ctx, fd_set *rfds,$/;"	f
_modbus_rtu_send	utilities/modbus/modbus-rtu.c	/^ssize_t _modbus_rtu_send(modbus_t *ctx, const uint8_t *req, int req_length)$/;"	f
_modbus_rtu_send_msg_pre	utilities/modbus/modbus-rtu.c	/^int _modbus_rtu_send_msg_pre(uint8_t *req, int req_length)$/;"	f
_modbus_set_slave	utilities/modbus/modbus-rtu.c	/^static int _modbus_set_slave(modbus_t *ctx, int slave)$/;"	f	file:
_modbus_set_slave	utilities/modbus/modbus-tcp.c	/^static int _modbus_set_slave(modbus_t *ctx, int slave)$/;"	f	file:
_modbus_tcp	utilities/modbus/modbus-tcp-private.h	/^typedef struct _modbus_tcp {$/;"	s
_modbus_tcp_backend	utilities/modbus/modbus-tcp.c	/^const modbus_backend_t _modbus_tcp_backend = {$/;"	v
_modbus_tcp_build_request_basis	utilities/modbus/modbus-tcp.c	/^int _modbus_tcp_build_request_basis(modbus_t *ctx, int function,$/;"	f
_modbus_tcp_build_response_basis	utilities/modbus/modbus-tcp.c	/^int _modbus_tcp_build_response_basis(sft_t *sft, uint8_t *rsp)$/;"	f
_modbus_tcp_check_integrity	utilities/modbus/modbus-tcp.c	/^int _modbus_tcp_check_integrity(modbus_t *ctx, uint8_t *msg, const int msg_length)$/;"	f
_modbus_tcp_close	utilities/modbus/modbus-tcp.c	/^void _modbus_tcp_close(modbus_t *ctx)$/;"	f
_modbus_tcp_connect	utilities/modbus/modbus-tcp.c	/^static int _modbus_tcp_connect(modbus_t *ctx)$/;"	f	file:
_modbus_tcp_filter_request	utilities/modbus/modbus-tcp.c	/^int _modbus_tcp_filter_request(modbus_t *ctx, int slave)$/;"	f
_modbus_tcp_flush	utilities/modbus/modbus-tcp.c	/^int _modbus_tcp_flush(modbus_t *ctx)$/;"	f
_modbus_tcp_init_win32	utilities/modbus/modbus-tcp.c	/^static int _modbus_tcp_init_win32(void)$/;"	f	file:
_modbus_tcp_pi	utilities/modbus/modbus-tcp-private.h	/^typedef struct _modbus_tcp_pi {$/;"	s
_modbus_tcp_pi_backend	utilities/modbus/modbus-tcp.c	/^const modbus_backend_t _modbus_tcp_pi_backend = {$/;"	v
_modbus_tcp_pi_connect	utilities/modbus/modbus-tcp.c	/^static int _modbus_tcp_pi_connect(modbus_t *ctx)$/;"	f	file:
_modbus_tcp_pre_check_confirmation	utilities/modbus/modbus-tcp.c	/^int _modbus_tcp_pre_check_confirmation(modbus_t *ctx, const uint8_t *req,$/;"	f
_modbus_tcp_prepare_response_tid	utilities/modbus/modbus-tcp.c	/^int _modbus_tcp_prepare_response_tid(const uint8_t *req, int *req_length)$/;"	f
_modbus_tcp_recv	utilities/modbus/modbus-tcp.c	/^ssize_t _modbus_tcp_recv(modbus_t *ctx, uint8_t *rsp, int rsp_length) {$/;"	f
_modbus_tcp_select	utilities/modbus/modbus-tcp.c	/^int _modbus_tcp_select(modbus_t *ctx, fd_set *rfds, struct timeval *tv, int length_to_read)$/;"	f
_modbus_tcp_send	utilities/modbus/modbus-tcp.c	/^ssize_t _modbus_tcp_send(modbus_t *ctx, const uint8_t *req, int req_length)$/;"	f
_modbus_tcp_send_msg_pre	utilities/modbus/modbus-tcp.c	/^int _modbus_tcp_send_msg_pre(uint8_t *req, int req_length)$/;"	f
_modbus_tcp_set_ipv4_options	utilities/modbus/modbus-tcp.c	/^static int _modbus_tcp_set_ipv4_options(int s)$/;"	f	file:
_poll	include/def.h	/^	int  (*_poll)	(object_t parent, int timeout);	\/\/\/<POLL$/;"	m	struct:object_io
_readbuf	include/def.h	/^	int (*_readbuf)	(object_t parent, char *buffer, int size);	\/\/\/<读缓冲$/;"	m	struct:object_io
_recv	include/def.h	/^	int  (*_recv)	(object_t parent, char *buffer, int size);	\/\/\/<读$/;"	m	struct:object_io
_send	include/def.h	/^	int  (*_send)	(object_t parent, const char *buffer, const int size);	\/\/\/<写$/;"	m	struct:object_io
_sendbuf	include/def.h	/^	int (*_sendbuf)	(object_t parent, const char *buffer, const int size);	\/\/\/<写缓冲$/;"	m	struct:object_io
_sft	utilities/modbus/modbus-private.h	/^typedef struct _sft {$/;"	s
_sleep_and_flush	utilities/modbus/modbus.c	/^int _sleep_and_flush(modbus_t *ctx)$/;"	f
_state	include/def.h	/^	int  (*_state)	(object_t parent);				\/\/\/<检查连接$/;"	m	struct:object_io
_step_t	utilities/modbus/modbus.c	/^} _step_t;$/;"	t	typeref:enum:__anon5	file:
a	utilities/sqlite3/sqlite3.c	/^  FuncDef *a[23];       \/* Hash table for functions *\/$/;"	m	struct:FuncDefHash	file:
a	utilities/sqlite3/sqlite3.c	/^  WhereLevel a[1];               \/* Information about each nest loop in WHERE *\/$/;"	m	struct:WhereInfo	file:
a	utilities/sqlite3/sqlite3.c	/^  WhereTerm *a;            \/* Each a[] describes a term of the WHERE cluase *\/$/;"	m	struct:WhereClause	file:
a	utilities/sqlite3/sqlite3.c	/^  } *a;                  \/* One entry for each expression *\/$/;"	m	struct:ExprList	typeref:struct:ExprList::ExprList_item	file:
a	utilities/sqlite3/sqlite3.c	/^  } *a;$/;"	m	struct:IdList	typeref:struct:IdList::IdList_item	file:
a	utilities/sqlite3/sqlite3.c	/^  } a[1];             \/* One entry for each identifier on the list *\/$/;"	m	struct:SrcList	typeref:struct:SrcList::SrcList_item	file:
a	utilities/sqlite3/sqlite3.c	/^struct TrigEvent { int a; IdList * b; };$/;"	m	struct:TrigEvent	file:
aAction	utilities/sqlite3/sqlite3.c	/^  u8 aAction[2];          \/* ON DELETE and ON UPDATE actions, respectively *\/$/;"	m	struct:FKey	file:
aAlias	utilities/sqlite3/sqlite3.c	/^  int *aAlias;         \/* Register used to hold aliased result *\/$/;"	m	struct:Parse	file:
aAll	utilities/sqlite3/sqlite3.c	/^  char *aAll;                    \/* Array containing doclist (or NULL) *\/$/;"	m	struct:Fts3Doclist	file:
aAlloc	utilities/sqlite3/sqlite3.c	/^  u8 *aAlloc;                     \/* Allocated space *\/$/;"	m	struct:VdbeSorterIter	file:
aBitmap	utilities/sqlite3/sqlite3.c	/^    BITVEC_TELEM aBitmap[BITVEC_NELEM];    \/* Bitmap representation *\/$/;"	m	union:Bitvec::__anon22	file:
aBuffer	utilities/sqlite3/sqlite3.c	/^  char *aBuffer;                  \/* Buffer to merge doclists in *\/$/;"	m	struct:Fts3MultiSegReader	file:
aChar	utilities/sqlite3/sqlite3.c	/^  UChar *aChar;               \/* Copy of input using utf-16 encoding *\/$/;"	m	struct:IcuCursor	file:
aCksum	utilities/sqlite3/sqlite3.c	/^  u32 aCksum[2];                  \/* Checksum over all prior fields *\/$/;"	m	struct:WalIndexHdr	file:
aCol	utilities/sqlite3/sqlite3.c	/^  Column *aCol;        \/* Information about each column *\/$/;"	m	struct:Table	file:
aCol	utilities/sqlite3/sqlite3.c	/^  } *aCol;$/;"	m	struct:AggInfo	typeref:struct:AggInfo::AggInfo_col	file:
aCol	utilities/sqlite3/sqlite3.c	/^  } aCol[1];        \/* One entry for each of nCol column s *\/$/;"	m	struct:FKey	typeref:struct:FKey::sColMap	file:
aColCache	utilities/sqlite3/sqlite3.c	/^  } aColCache[SQLITE_N_COLCACHE];  \/* One for each column cache entry *\/$/;"	m	struct:Parse	typeref:struct:Parse::yColCache	file:
aColName	utilities/sqlite3/sqlite3.c	/^  Mem *aColName;          \/* Column names to return *\/$/;"	m	struct:Vdbe	file:
aColl	utilities/sqlite3/sqlite3.c	/^  CollSeq *aColl[1];  \/* Collating sequence for each term of the key *\/$/;"	m	struct:KeyInfo	file:
aCollSeq	utilities/sqlite3/sqlite3.c	/^  Hash aCollSeq;                \/* All collating sequences *\/$/;"	m	struct:sqlite3	file:
aColmask	utilities/sqlite3/sqlite3.c	/^  u32 aColmask[2];        \/* Masks of old.*, new.* columns accessed *\/$/;"	m	struct:TriggerPrg	file:
aConstraint	utilities/sqlite3/sqlite3.c	/^  RtreeConstraint *aConstraint;     \/* Search constraints. *\/$/;"	m	struct:RtreeCursor	file:
aConstraint	utilities/sqlite3/sqlite3.c	/^  } *aConstraint;            \/* Table of WHERE clause constraints *\/$/;"	m	struct:sqlite3_index_info	typeref:struct:sqlite3_index_info::sqlite3_index_constraint	file:
aConstraint	utilities/sqlite3/sqlite3.h	/^  } *aConstraint;            \/* Table of WHERE clause constraints *\/$/;"	m	struct:sqlite3_index_info	typeref:struct:sqlite3_index_info::sqlite3_index_constraint
aConstraintUsage	utilities/sqlite3/sqlite3.c	/^  } *aConstraintUsage;$/;"	m	struct:sqlite3_index_info	typeref:struct:sqlite3_index_info::sqlite3_index_constraint_usage	file:
aConstraintUsage	utilities/sqlite3/sqlite3.h	/^  } *aConstraintUsage;$/;"	m	struct:sqlite3_index_info	typeref:struct:sqlite3_index_info::sqlite3_index_constraint_usage
aCoord	utilities/sqlite3/sqlite3.c	/^  RtreeCoord aCoord[RTREE_MAX_DIMENSIONS*2];$/;"	m	struct:RtreeCell	file:
aCounter	utilities/sqlite3/sqlite3.c	/^  int aCounter[3];        \/* Counters used by sqlite3_stmt_status() *\/$/;"	m	struct:Vdbe	file:
aCtrl	utilities/sqlite3/sqlite3.c	/^  u8 *aCtrl;$/;"	m	struct:Mem5Global	file:
aData	utilities/sqlite3/sqlite3.c	/^  char *aData;                    \/* Node data *\/$/;"	m	struct:SegmentNode	file:
aData	utilities/sqlite3/sqlite3.c	/^  char *aData;                    \/* Pointer to block from malloc() *\/$/;"	m	struct:SegmentWriter	file:
aData	utilities/sqlite3/sqlite3.c	/^  char *aData;$/;"	m	struct:PendingList	file:
aData	utilities/sqlite3/sqlite3.c	/^  u8 *aData;                     \/* Pointer to data block *\/$/;"	m	struct:PGroupBlock	file:
aData	utilities/sqlite3/sqlite3.c	/^  u8 *aData;           \/* Pointer to disk image of the page data *\/$/;"	m	struct:MemPage	file:
aDb	utilities/sqlite3/sqlite3.c	/^  Db *aDb;                      \/* All backends *\/$/;"	m	struct:sqlite3	file:
aDbStatic	utilities/sqlite3/sqlite3.c	/^  Db aDbStatic[2];              \/* Static space for the 2 default backends *\/$/;"	m	struct:sqlite3	file:
aDigits	utilities/sqlite3/sqlite3.c	/^static const char aDigits[] = "0123456789ABCDEF0123456789abcdef";$/;"	v	file:
aDoclist	utilities/sqlite3/sqlite3.c	/^  char *aDoclist;                 \/* List of docids for full-text queries *\/$/;"	m	struct:Fts3Cursor	file:
aDoclist	utilities/sqlite3/sqlite3.c	/^  char *aDoclist;                 \/* Pointer to doclist buffer *\/$/;"	m	struct:Fts3MultiSegReader	file:
aDoclist	utilities/sqlite3/sqlite3.c	/^  char *aDoclist;                 \/* Pointer to doclist of current entry *\/$/;"	m	struct:Fts3SegReader	file:
aEntry	utilities/sqlite3/sqlite3.c	/^  struct RowSetEntry aEntry[ROWSET_ENTRY_PER_CHUNK]; \/* Allocated entries *\/$/;"	m	struct:RowSetChunk	typeref:struct:RowSetChunk::RowSetEntry	file:
aExt	utilities/sqlite3/sqlite3.c	/^  void (**aExt)(void);   \/* Pointers to the extension init functions *\/$/;"	m	struct:sqlite3AutoExtList	file:
aExtension	utilities/sqlite3/sqlite3.c	/^  void **aExtension;            \/* Array of shared library handles *\/$/;"	m	struct:sqlite3	file:
aFrameCksum	utilities/sqlite3/sqlite3.c	/^  u32 aFrameCksum[2];             \/* Checksum of last frame in log *\/$/;"	m	struct:WalIndexHdr	file:
aFunc	utilities/sqlite3/sqlite3.c	/^  FuncDefHash aFunc;            \/* Hash table of connection functions *\/$/;"	m	struct:sqlite3	file:
aFunc	utilities/sqlite3/sqlite3.c	/^  } *aFunc;$/;"	m	struct:AggInfo	typeref:struct:AggInfo::AggInfo_func	file:
aHardLimit	utilities/sqlite3/sqlite3.c	/^static const int aHardLimit[] = {$/;"	v	file:
aHash	utilities/sqlite3/sqlite3.c	/^    u32 aHash[BITVEC_NINT];      \/* Hash table representation *\/$/;"	m	union:Bitvec::__anon22	file:
aHash	utilities/sqlite3/sqlite3.c	/^  RtreeNode *aHash[HASHSIZE]; \/* Hash table of in-memory nodes. *\/ $/;"	m	struct:Rtree	file:
aInLoop	utilities/sqlite3/sqlite3.c	/^      } *aInLoop;           \/* Information about each nested IN operator *\/$/;"	m	struct:WhereLevel::__anon13::__anon14	typeref:struct:WhereLevel::__anon13::__anon14::InLoop	file:
aIndex	utilities/sqlite3/sqlite3.c	/^    ht_slot *aIndex;              \/* i0, i1, i2... such that aPgno[iN] ascend *\/$/;"	m	struct:WalIterator::WalSegment	file:
aIndex	utilities/sqlite3/sqlite3.c	/^  } *aIndex;$/;"	m	struct:Fts3Table	typeref:struct:Fts3Table::Fts3Index	file:
aIter	utilities/sqlite3/sqlite3.c	/^  VdbeSorterIter *aIter;          \/* Array of iterators to merge *\/$/;"	m	struct:VdbeSorter	file:
aJournalMagic	utilities/sqlite3/sqlite3.c	/^static const unsigned char aJournalMagic[] = {$/;"	v	file:
aKey	utilities/sqlite3/sqlite3.c	/^  u8 *aKey;                       \/* Pointer to current key *\/$/;"	m	struct:VdbeSorterIter	file:
aLabel	utilities/sqlite3/sqlite3.c	/^  int *aLabel;            \/* Space to hold the labels *\/$/;"	m	struct:Vdbe	file:
aLimit	utilities/sqlite3/sqlite3.c	/^  int aLimit[SQLITE_N_LIMIT];   \/* Limits *\/$/;"	m	struct:sqlite3	file:
aMI	utilities/sqlite3/sqlite3.c	/^  u32 *aMI;$/;"	m	struct:Fts3Expr	file:
aMatchinfo	utilities/sqlite3/sqlite3.c	/^  u32 *aMatchinfo;                \/* Information about most recent match *\/$/;"	m	struct:Fts3Cursor	file:
aMatchinfo	utilities/sqlite3/sqlite3.c	/^  u32 *aMatchinfo;                \/* Pre-allocated buffer *\/$/;"	m	struct:MatchInfo	file:
aMem	utilities/sqlite3/sqlite3.c	/^  Mem *aMem;              \/* Array of memory cells for parent frame *\/$/;"	m	struct:VdbeFrame	file:
aMem	utilities/sqlite3/sqlite3.c	/^  Mem *aMem;              \/* The memory locations *\/$/;"	m	struct:Vdbe	file:
aMem	utilities/sqlite3/sqlite3.c	/^  Mem *aMem;          \/* Values *\/$/;"	m	struct:UnpackedRecord	file:
aModule	utilities/sqlite3/sqlite3.c	/^  Hash aModule;                 \/* populated by sqlite3_create_module() *\/$/;"	m	struct:sqlite3	file:
aNode	utilities/sqlite3/sqlite3.c	/^  char *aNode;                    \/* Pointer to node data (or NULL) *\/$/;"	m	struct:Fts3SegReader	file:
aOffset	utilities/sqlite3/sqlite3.c	/^  int *aOffset;               \/* Offsets of each character in utf-8 input *\/$/;"	m	struct:IcuCursor	file:
aOffset	utilities/sqlite3/sqlite3.c	/^  u32 *aOffset;         \/* Cached offsets to the start of each columns data *\/$/;"	m	struct:VdbeCursor	file:
aOp	utilities/sqlite3/sqlite3.c	/^  Op *aOp;                \/* Program instructions for parent frame *\/$/;"	m	struct:VdbeFrame	file:
aOp	utilities/sqlite3/sqlite3.c	/^  Op *aOp;                \/* Space to hold the virtual machine's program *\/$/;"	m	struct:Vdbe	file:
aOp	utilities/sqlite3/sqlite3.c	/^  VdbeOp *aOp;                  \/* Array of opcodes for sub-program *\/$/;"	m	struct:SubProgram	file:
aOrderBy	utilities/sqlite3/sqlite3.c	/^  } *aOrderBy;               \/* The ORDER BY clause *\/$/;"	m	struct:sqlite3_index_info	typeref:struct:sqlite3_index_info::sqlite3_index_orderby	file:
aOrderBy	utilities/sqlite3/sqlite3.h	/^  } *aOrderBy;               \/* The ORDER BY clause *\/$/;"	m	struct:sqlite3_index_info	typeref:struct:sqlite3_index_info::sqlite3_index_orderby
aOverflow	utilities/sqlite3/sqlite3.c	/^  Pgno *aOverflow;          \/* Cache of overflow page locations *\/$/;"	m	struct:BtCursor	file:
aOvfl	utilities/sqlite3/sqlite3.c	/^  } aOvfl[5];$/;"	m	struct:MemPage	typeref:struct:MemPage::_OvflCell	file:
aPadding	utilities/sqlite3/sqlite3.c	/^  char aPadding[32];$/;"	m	struct:unixFile	file:
aParam	utilities/sqlite3/sqlite3.c	/^  double *aParam;                 \/* Parameters passed to SQL geom function *\/$/;"	m	struct:sqlite3_rtree_geometry	file:
aParam	utilities/sqlite3/sqlite3.c	/^  double aParam[1];$/;"	m	struct:RtreeMatchArg	file:
aParam	utilities/sqlite3/sqlite3.h	/^  double *aParam;                 \/* Parameters passed to SQL geom function *\/$/;"	m	struct:sqlite3_rtree_geometry
aPgno	utilities/sqlite3/sqlite3.c	/^    u32 *aPgno;                   \/* Array of page numbers. *\/$/;"	m	struct:WalIterator::WalSegment	file:
aPhrase	utilities/sqlite3/sqlite3.c	/^  SnippetPhrase *aPhrase;         \/* Array of size nPhrase *\/$/;"	m	struct:SnippetIter	file:
aPool	utilities/sqlite3/sqlite3.c	/^  Mem3Block *aPool;$/;"	m	struct:Mem3Global	file:
aPrefix	utilities/sqlite3/sqlite3.c	/^static const char aPrefix[] = "-x0\\000X0";$/;"	v	file:
aReadMark	utilities/sqlite3/sqlite3.c	/^  u32 aReadMark[WAL_NREADER];     \/* Reader marks *\/$/;"	m	struct:WalCkptInfo	file:
aRegion	utilities/sqlite3/sqlite3.c	/^  } *aRegion;$/;"	m	struct:winShmNode	typeref:struct:winShmNode::ShmRegion	file:
aRow	utilities/sqlite3/sqlite3.c	/^  u8 *aRow;             \/* Data for the current row, if all on one page *\/$/;"	m	struct:VdbeCursor	file:
aSalt	utilities/sqlite3/sqlite3.c	/^  u32 aSalt[2];                   \/* Two salt values copied from WAL header *\/$/;"	m	struct:WalIndexHdr	file:
aSample	utilities/sqlite3/sqlite3.c	/^  IndexSample *aSample;    \/* Array of SQLITE_INDEX_SAMPLES samples *\/$/;"	m	struct:Index	file:
aSavepoint	utilities/sqlite3/sqlite3.c	/^  PagerSavepoint *aSavepoint; \/* Array of active savepoints *\/$/;"	m	struct:Pager	file:
aSegment	utilities/sqlite3/sqlite3.c	/^  } aSegment[1];                  \/* One for every 32KB page in the wal-index *\/$/;"	m	struct:WalIterator	typeref:struct:WalIterator::WalSegment	file:
aSemName	utilities/sqlite3/sqlite3.c	/^  char aSemName[MAX_PATHNAME+2];  \/* Name of that semaphore *\/$/;"	m	struct:unixInodeInfo	file:
aSortOrder	utilities/sqlite3/sqlite3.c	/^  u8 *aSortOrder;     \/* Sort order for each column.  May be NULL *\/$/;"	m	struct:KeyInfo	file:
aSortOrder	utilities/sqlite3/sqlite3.c	/^  u8 *aSortOrder;  \/* Array of size Index.nColumn. True==DESC, False==ASC *\/$/;"	m	struct:Index	file:
aStat	utilities/sqlite3/sqlite3.c	/^  } *aStat;$/;"	m	struct:Fts3auxCursor	typeref:struct:Fts3auxCursor::Fts3auxColstats	file:
aStatic	utilities/sqlite3/sqlite3.c	/^  WhereTerm aStatic[1];    \/* Initial static space for a[] *\/$/;"	m	struct:WhereClause	file:
aStatic	utilities/sqlite3/sqlite3.c	/^  WhereTerm aStatic[8];    \/* Initial static space for a[] *\/$/;"	m	struct:WhereClause	file:
aStmt	utilities/sqlite3/sqlite3.c	/^  sqlite3_stmt *aStmt[27];$/;"	m	struct:Fts3Table	file:
aSyscall	utilities/sqlite3/sqlite3.c	/^} aSyscall[] = {$/;"	v	typeref:struct:unix_syscall	file:
aTableLock	utilities/sqlite3/sqlite3.c	/^  TableLock *aTableLock; \/* Required table locks for shared-cache mode *\/$/;"	m	struct:Parse	file:
aTempReg	utilities/sqlite3/sqlite3.c	/^  int aTempReg[8];     \/* Holding area for temporary registers *\/$/;"	m	struct:Parse	file:
aTerm	utilities/sqlite3/sqlite3.c	/^  TermOffset *aTerm;$/;"	m	struct:TermOffsetCtx	file:
aToken	utilities/sqlite3/sqlite3.c	/^  Fts3PhraseToken aToken[1]; \/* One entry for each token in the phrase *\/$/;"	m	struct:Fts3Phrase	file:
aTree	utilities/sqlite3/sqlite3.c	/^  int *aTree;                     \/* Current state of incremental merge *\/$/;"	m	struct:VdbeSorter	file:
aType	utilities/sqlite3/sqlite3.c	/^  u32 *aType;           \/* Type values for all entries in the record *\/$/;"	m	struct:VdbeCursor	file:
aVTrans	utilities/sqlite3/sqlite3.c	/^  VTable **aVTrans;             \/* Virtual tables with open transactions *\/$/;"	m	struct:sqlite3	file:
aVar	utilities/sqlite3/sqlite3.c	/^  Mem *aVar;              \/* Values for the OP_Variable opcode. *\/$/;"	m	struct:Vdbe	file:
aWalData	utilities/sqlite3/sqlite3.c	/^  u32 aWalData[WAL_SAVEPOINT_NDATA];        \/* WAL savepoint context *\/$/;"	m	struct:PagerSavepoint	file:
aaOutput	utilities/sqlite3/sqlite3.c	/^  char *aaOutput[16];             \/* Malloc'd output buffers *\/$/;"	m	struct:TermSelect	file:
absFunc	utilities/sqlite3/sqlite3.c	/^static void absFunc(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
accessPayload	utilities/sqlite3/sqlite3.c	/^static int accessPayload($/;"	f	file:
actionName	utilities/sqlite3/sqlite3.c	/^static const char *actionName(u8 action){$/;"	f	file:
activeVdbeCnt	utilities/sqlite3/sqlite3.c	/^  int activeVdbeCnt;            \/* Number of VDBEs currently executing *\/$/;"	m	struct:sqlite3	file:
addAggInfoColumn	utilities/sqlite3/sqlite3.c	/^static int addAggInfoColumn(sqlite3 *db, AggInfo *pInfo){$/;"	f	file:
addAggInfoFunc	utilities/sqlite3/sqlite3.c	/^static int addAggInfoFunc(sqlite3 *db, AggInfo *pInfo){$/;"	f	file:
addArgumentToVtab	utilities/sqlite3/sqlite3.c	/^static void addArgumentToVtab(Parse *pParse){$/;"	f	file:
addBlockToList	utilities/sqlite3/sqlite3.c	/^static void addBlockToList(PGroupBlockList *pList, PGroupBlock *pBlock){$/;"	f	file:
addColOffset	utilities/sqlite3/sqlite3.c	/^  int addColOffset;    \/* Offset in CREATE TABLE stmt to add a new column *\/$/;"	m	struct:Table	file:
addModuleArgument	utilities/sqlite3/sqlite3.c	/^static void addModuleArgument(sqlite3 *db, Table *pTable, char *zArg){$/;"	f	file:
addToBlockedList	utilities/sqlite3/sqlite3.c	/^static void addToBlockedList(sqlite3 *db){$/;"	f	file:
addToSavepointBitvecs	utilities/sqlite3/sqlite3.c	/^static int addToSavepointBitvecs(Pager *pPager, Pgno pgno){$/;"	f	file:
addToVTrans	utilities/sqlite3/sqlite3.c	/^static void addToVTrans(sqlite3 *db, VTable *pVTab){$/;"	f	file:
addWhereTerm	utilities/sqlite3/sqlite3.c	/^static void addWhereTerm($/;"	f	file:
add_data	include/def.h	/^	DWORD add_data;	\/\/\/<附加参数$/;"	m	struct:object_thread
addrBrk	utilities/sqlite3/sqlite3.c	/^  int addrBrk;          \/* Jump here to break out of the loop *\/$/;"	m	struct:WhereLevel	file:
addrCont	utilities/sqlite3/sqlite3.c	/^  int addrCont;         \/* Jump here to continue with the next loop cycle *\/$/;"	m	struct:WhereLevel	file:
addrFillSub	utilities/sqlite3/sqlite3.c	/^    int addrFillSub;  \/* Address of subroutine to manifest a subquery *\/$/;"	m	struct:SrcList::SrcList_item	file:
addrFirst	utilities/sqlite3/sqlite3.c	/^  int addrFirst;        \/* First instruction of interior of the loop *\/$/;"	m	struct:WhereLevel	file:
addrInTop	utilities/sqlite3/sqlite3.c	/^        int addrInTop;         \/* Top of the IN loop *\/$/;"	m	struct:WhereLevel::__anon13::__anon14::InLoop	file:
addrNxt	utilities/sqlite3/sqlite3.c	/^  int addrNxt;          \/* Jump here to start the next IN combination *\/$/;"	m	struct:WhereLevel	file:
addrOpenEphm	utilities/sqlite3/sqlite3.c	/^  int addrOpenEphm[3];   \/* OP_OpenEphem opcodes related to this select *\/$/;"	m	struct:Select	file:
adjustStats	utilities/sqlite3/sqlite3.c	/^static void adjustStats(int iSize, int increment){$/;"	f	file:
affinity	utilities/sqlite3/sqlite3.c	/^  char affinity;         \/* MakeRecord with this affinity for SRT_Set *\/$/;"	m	struct:Select	file:
affinity	utilities/sqlite3/sqlite3.c	/^  char affinity;         \/* The affinity of the column or 0 if not a column *\/$/;"	m	struct:Expr	file:
affinity	utilities/sqlite3/sqlite3.c	/^  char affinity;   \/* One of the SQLITE_AFF_... values *\/$/;"	m	struct:Column	file:
affinity	utilities/sqlite3/sqlite3.c	/^  u8 affinity;      \/* Affinity used when eDest==SRT_Set *\/$/;"	m	struct:SelectDest	file:
afpCheckReservedLock	utilities/sqlite3/sqlite3.c	/^static int afpCheckReservedLock(sqlite3_file *id, int *pResOut){$/;"	f	file:
afpClose	utilities/sqlite3/sqlite3.c	/^static int afpClose(sqlite3_file *id) {$/;"	f	file:
afpLock	utilities/sqlite3/sqlite3.c	/^static int afpLock(sqlite3_file *id, int eFileLock){$/;"	f	file:
afpLockingContext	utilities/sqlite3/sqlite3.c	/^struct afpLockingContext {$/;"	s	file:
afpLockingContext	utilities/sqlite3/sqlite3.c	/^typedef struct afpLockingContext afpLockingContext;$/;"	t	typeref:struct:afpLockingContext	file:
afpSetLock	utilities/sqlite3/sqlite3.c	/^static int afpSetLock($/;"	f	file:
afpUnlock	utilities/sqlite3/sqlite3.c	/^static int afpUnlock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
afpfsByteRangeLock2FSCTL	utilities/sqlite3/sqlite3.c	27046;"	d	file:
aggregate_context	utilities/sqlite3/sqlite3.c	/^  void * (*aggregate_context)(sqlite3_context*,int nBytes);$/;"	m	struct:sqlite3_api_routines	file:
aggregate_count	utilities/sqlite3/sqlite3.c	/^  int  (*aggregate_count)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines	file:
ai	utilities/sqlite3/sqlite3.c	/^    int *ai;               \/* Used when p4type is P4_INTARRAY *\/$/;"	m	union:VdbeOp::__anon7	file:
aiColumn	utilities/sqlite3/sqlite3.c	/^  int *aiColumn;   \/* Which columns are used by this index.  1st is 0 *\/$/;"	m	struct:Index	file:
aiFreelist	utilities/sqlite3/sqlite3.c	/^  int aiFreelist[LOGMAX+1];$/;"	m	struct:Mem5Global	file:
aiHash	utilities/sqlite3/sqlite3.c	/^  u32 aiHash[N_HASH];        \/* For sizes MX_SMALL+1 and larger *\/$/;"	m	struct:Mem3Global	file:
aiIdx	utilities/sqlite3/sqlite3.c	/^  u16 aiIdx[BTCURSOR_MAX_DEPTH];        \/* Current index in apPage[i] *\/$/;"	m	struct:BtCursor	file:
aiRowEst	utilities/sqlite3/sqlite3.c	/^  unsigned *aiRowEst; \/* Result of ANALYZE: Est. rows selected by each column *\/$/;"	m	struct:Index	file:
aiSmall	utilities/sqlite3/sqlite3.c	/^  u32 aiSmall[MX_SMALL-1];   \/* For sizes 2 through MX_SMALL, inclusive *\/$/;"	m	struct:Mem3Global	file:
alarmArg	utilities/sqlite3/sqlite3.c	/^  void *alarmArg;$/;"	m	struct:Mem0Global	file:
alarmBusy	utilities/sqlite3/sqlite3.c	/^  int alarmBusy;$/;"	m	struct:Mem3Global	file:
alarmCallback	utilities/sqlite3/sqlite3.c	/^  void (*alarmCallback)(void*, sqlite3_int64,int);$/;"	m	struct:Mem0Global	file:
alarmThreshold	utilities/sqlite3/sqlite3.c	/^  sqlite3_int64 alarmThreshold;$/;"	m	struct:Mem0Global	file:
allSpaces	utilities/sqlite3/sqlite3.c	/^static int allSpaces(const char *z, int n){$/;"	f	file:
allocSpace	utilities/sqlite3/sqlite3.c	/^static void *allocSpace($/;"	f	file:
allocateBtreePage	utilities/sqlite3/sqlite3.c	/^static int allocateBtreePage($/;"	f	file:
allocateCursor	utilities/sqlite3/sqlite3.c	/^static VdbeCursor *allocateCursor($/;"	f	file:
allocateIndexInfo	utilities/sqlite3/sqlite3.c	/^static sqlite3_index_info *allocateIndexInfo($/;"	f	file:
allocateSpace	utilities/sqlite3/sqlite3.c	/^static int allocateSpace(MemPage *pPage, int nByte, int *pIdx){$/;"	f	file:
allocateTempSpace	utilities/sqlite3/sqlite3.c	/^static void allocateTempSpace(BtShared *pBt){$/;"	f	file:
allowAgg	utilities/sqlite3/sqlite3.c	/^  u8 allowAgg;         \/* Aggregate functions allowed here *\/$/;"	m	struct:NameContext	file:
allowedOp	utilities/sqlite3/sqlite3.c	/^static int allowedOp(int op){$/;"	f	file:
anOutput	utilities/sqlite3/sqlite3.c	/^  int anOutput[16];               \/* Size each output buffer in bytes *\/$/;"	m	struct:TermSelect	file:
anRef	utilities/sqlite3/sqlite3.c	/^  int *anRef;       \/* Number of times each page is referenced *\/$/;"	m	struct:IntegrityCk	file:
anStat	utilities/sqlite3/sqlite3.c	/^  int anStat[3];          \/* 0: hits.  1: size misses.  2: full misses *\/$/;"	m	struct:Lookaside	file:
analysisInfo	utilities/sqlite3/sqlite3.c	/^struct analysisInfo {$/;"	s	file:
analysisInfo	utilities/sqlite3/sqlite3.c	/^typedef struct analysisInfo analysisInfo;$/;"	t	typeref:struct:analysisInfo	file:
analysisLoader	utilities/sqlite3/sqlite3.c	/^static int analysisLoader(void *pData, int argc, char **argv, char **NotUsed){$/;"	f	file:
analyzeAggregate	utilities/sqlite3/sqlite3.c	/^static int analyzeAggregate(Walker *pWalker, Expr *pExpr){$/;"	f	file:
analyzeAggregatesInSelect	utilities/sqlite3/sqlite3.c	/^static int analyzeAggregatesInSelect(Walker *pWalker, Select *pSelect){$/;"	f	file:
analyzeDatabase	utilities/sqlite3/sqlite3.c	/^static void analyzeDatabase(Parse *pParse, int iDb){$/;"	f	file:
analyzeOneTable	utilities/sqlite3/sqlite3.c	/^static void analyzeOneTable($/;"	f	file:
analyzeTable	utilities/sqlite3/sqlite3.c	/^static void analyzeTable(Parse *pParse, Table *pTab, Index *pOnlyIdx){$/;"	f	file:
apArg	utilities/sqlite3/sqlite3.c	/^  Mem **apArg;            \/* Arguments to currently executing user function *\/$/;"	m	struct:Vdbe	file:
apAux	utilities/sqlite3/sqlite3.c	/^  } apAux[1];                   \/* One slot for each function argument *\/$/;"	m	struct:VdbeFunc	typeref:struct:VdbeFunc::AuxData	file:
apCsr	utilities/sqlite3/sqlite3.c	/^  VdbeCursor **apCsr;     \/* Array of Vdbe cursors for parent frame *\/$/;"	m	struct:VdbeFrame	file:
apCsr	utilities/sqlite3/sqlite3.c	/^  VdbeCursor **apCsr;     \/* One element of this array for each open cursor *\/$/;"	m	struct:Vdbe	file:
apHash	utilities/sqlite3/sqlite3.c	/^  PgHdr1 **apHash;                    \/* Hash table for fast lookup by key *\/$/;"	m	struct:PCache1	file:
apPage	utilities/sqlite3/sqlite3.c	/^  MemPage *apPage[BTCURSOR_MAX_DEPTH];  \/* Pages from root to current page *\/$/;"	m	struct:BtCursor	file:
apRegion	utilities/sqlite3/sqlite3.c	/^  char **apRegion;           \/* Array of mapped shared-memory regions *\/$/;"	m	struct:unixShmNode	file:
apRegion	utilities/sqlite3/sqlite3.c	/^  void **apRegion;           \/* Array of pointers to shared-memory regions *\/$/;"	m	struct:os2ShmNode	file:
apSegment	utilities/sqlite3/sqlite3.c	/^  Fts3SegReader **apSegment;      \/* Array of Fts3SegReader objects *\/$/;"	m	struct:Fts3MultiSegReader	file:
apSub	utilities/sqlite3/sqlite3.c	/^    Bitvec *apSub[BITVEC_NPTR];  \/* Recursive representation *\/$/;"	m	union:Bitvec::__anon22	file:
apSub	utilities/sqlite3/sqlite3.c	/^  SubProgram **apSub;        \/* Array of subprograms *\/$/;"	m	struct:VdbeOpIter	file:
apTrigger	utilities/sqlite3/sqlite3.c	/^  Trigger *apTrigger[2];  \/* Triggers for aAction[] actions *\/$/;"	m	struct:FKey	file:
apVtabLock	utilities/sqlite3/sqlite3.c	/^  Table **apVtabLock;        \/* Pointer to virtual tables needing locking *\/$/;"	m	struct:Parse	file:
apWiData	utilities/sqlite3/sqlite3.c	/^  volatile u32 **apWiData;   \/* Pointer to wal-index content in memory *\/$/;"	m	struct:Wal	file:
appendSpace	utilities/sqlite3/sqlite3.c	/^static void appendSpace(StrAccum *pAccum, int N){$/;"	f	file:
applyAffinity	utilities/sqlite3/sqlite3.c	/^static void applyAffinity($/;"	f	file:
applyNumericAffinity	utilities/sqlite3/sqlite3.c	/^static void applyNumericAffinity(Mem *pRec){$/;"	f	file:
approx	utilities/sqlite3/sqlite3.c	/^  u8 approx;        \/* True if non-integer value was input to the sum *\/$/;"	m	struct:SumCtx	file:
argvIndex	utilities/sqlite3/sqlite3.c	/^    int argvIndex;           \/* if >0, constraint is part of argv to xFilter *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint_usage	file:
argvIndex	utilities/sqlite3/sqlite3.h	/^    int argvIndex;           \/* if >0, constraint is part of argv to xFilter *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint_usage
array	utilities/common/sem.c	/^	unsigned short  *array;  \/* Array for GETALL, SETALL *\/$/;"	m	union:semun	file:
assemblePage	utilities/sqlite3/sqlite3.c	/^static void assemblePage($/;"	f	file:
assertCellInfo	utilities/sqlite3/sqlite3.c	/^  static void assertCellInfo(BtCursor *pCur){$/;"	f	file:
assertCellInfo	utilities/sqlite3/sqlite3.c	51873;"	d	file:
assertMutexHeld	utilities/sqlite3/sqlite3.c	113125;"	d	file:
assertParentIndex	utilities/sqlite3/sqlite3.c	/^static void assertParentIndex(MemPage *pParent, int iIdx, Pgno iChild){$/;"	f	file:
assertParentIndex	utilities/sqlite3/sqlite3.c	52413;"	d	file:
assertTruncateConstraint	utilities/sqlite3/sqlite3.c	/^static void assertTruncateConstraint(Pager *pPager){$/;"	f	file:
assertTruncateConstraint	utilities/sqlite3/sqlite3.c	41215;"	d	file:
assertTruncateConstraintCb	utilities/sqlite3/sqlite3.c	/^static void assertTruncateConstraintCb(PgHdr *pPg){$/;"	f	file:
assert_pager_state	utilities/sqlite3/sqlite3.c	/^static int assert_pager_state(Pager *p){$/;"	f	file:
atFirst	utilities/sqlite3/sqlite3.c	/^  Bool atFirst;         \/* True if pointing to first entry *\/$/;"	m	struct:VdbeCursor	file:
atLast	utilities/sqlite3/sqlite3.c	/^  u8 atLast;                \/* Cursor pointing to the last entry *\/$/;"	m	struct:BtCursor	file:
attachBackupObject	utilities/sqlite3/sqlite3.c	/^static void attachBackupObject(sqlite3_backup *p){$/;"	f	file:
attachFunc	utilities/sqlite3/sqlite3.c	/^static void attachFunc($/;"	f	file:
auchCRCHi	utilities/common/tools.c	/^const unsigned char auchCRCHi[] = {$/;"	v
auchCRCLo	utilities/common/tools.c	/^const unsigned char auchCRCLo[] = {$/;"	v
autoCommit	utilities/sqlite3/sqlite3.c	/^  u8 autoCommit;                \/* The auto-commit flag. *\/$/;"	m	struct:sqlite3	file:
autoIncBegin	utilities/sqlite3/sqlite3.c	/^static int autoIncBegin($/;"	f	file:
autoIncBegin	utilities/sqlite3/sqlite3.c	87193;"	d	file:
autoIncStep	utilities/sqlite3/sqlite3.c	/^static void autoIncStep(Parse *pParse, int memId, int regRowid){$/;"	f	file:
autoIncStep	utilities/sqlite3/sqlite3.c	87194;"	d	file:
autoIndex	utilities/sqlite3/sqlite3.c	/^  u8 autoIndex;    \/* True if is automatically created (ex: by UNIQUE) *\/$/;"	m	struct:Index	file:
autoVacuum	utilities/sqlite3/sqlite3.c	/^  u8 autoVacuum;        \/* True if auto-vacuum is enabled *\/$/;"	m	struct:BtShared	file:
autoVacuumCommit	utilities/sqlite3/sqlite3.c	/^static int autoVacuumCommit(BtShared *pBt){$/;"	f	file:
autolockIoFinder	utilities/sqlite3/sqlite3.c	/^  *(*const autolockIoFinder)(const char*,unixFile*) = autolockIoFinderImpl;$/;"	v	file:
autolockIoFinderImpl	utilities/sqlite3/sqlite3.c	/^static const sqlite3_io_methods *autolockIoFinderImpl($/;"	f	file:
avgFinalize	utilities/sqlite3/sqlite3.c	/^static void avgFinalize(sqlite3_context *context){$/;"	f	file:
azCol	utilities/sqlite3/sqlite3.c	/^  const char **azCol;                 \/* Array of column names for fts3 table *\/$/;"	m	struct:ParseContext	file:
azColl	utilities/sqlite3/sqlite3.c	/^  char **azColl;   \/* Array of collation sequence names for index *\/$/;"	m	struct:Index	file:
azColumn	utilities/sqlite3/sqlite3.c	/^  char **azColumn;                \/* column names.  malloced *\/$/;"	m	struct:Fts3Table	file:
azCompileOpt	utilities/sqlite3/sqlite3.c	/^static const char * const azCompileOpt[] = {$/;"	v	file:
azFileLock	utilities/sqlite3/sqlite3.c	/^static const char *azFileLock(int eFileLock){$/;"	f	file:
azModuleArg	utilities/sqlite3/sqlite3.c	/^  char **azModuleArg;  \/* Text of all module args. [0] is module name *\/$/;"	m	struct:Table	file:
azResult	utilities/sqlite3/sqlite3.c	/^  char **azResult;   \/* Accumulated output *\/$/;"	m	struct:TabResult	file:
azVar	utilities/sqlite3/sqlite3.c	/^  char **azVar;           \/* Name of variables *\/$/;"	m	struct:Vdbe	file:
azVar	utilities/sqlite3/sqlite3.c	/^  char **azVar;        \/* Pointers to names of parameters *\/$/;"	m	struct:Parse	file:
b	utilities/sqlite3/sqlite3.c	/^struct TrigEvent { int a; IdList * b; };$/;"	m	struct:TrigEvent	file:
bConstraint	utilities/sqlite3/sqlite3.c	/^  u8 bConstraint;           \/* True if constraints are supported *\/$/;"	m	struct:VTable	file:
bCoreMutex	utilities/sqlite3/sqlite3.c	/^  int bCoreMutex;                   \/* True to enable core mutexing *\/$/;"	m	struct:Sqlite3Config	file:
bDeferred	utilities/sqlite3/sqlite3.c	/^  u8 bDeferred;              \/* True if this expression is entirely deferred *\/$/;"	m	struct:Fts3Expr	file:
bDesc	utilities/sqlite3/sqlite3.c	/^  u8 bDesc;                       \/* True to sort in descending order *\/$/;"	m	struct:Fts3Cursor	file:
bDescIdx	utilities/sqlite3/sqlite3.c	/^  u8 bDescIdx;                    \/* True if doclists are in reverse order *\/$/;"	m	struct:Fts3Table	file:
bDestLocked	utilities/sqlite3/sqlite3.c	/^  int bDestLocked;         \/* True once a write-transaction is open on pDest *\/$/;"	m	struct:sqlite3_backup	file:
bEnabled	utilities/sqlite3/sqlite3.c	/^  u8 bEnabled;            \/* False to disable new lookaside allocations *\/$/;"	m	struct:Lookaside	file:
bEof	utilities/sqlite3/sqlite3.c	/^  u8 bEof;                   \/* True this expression is at EOF already *\/$/;"	m	struct:Fts3Expr	file:
bExclusive	utilities/sqlite3/sqlite3.c	/^  BOOL bExclusive;    \/* Indicates an exclusive lock has been obtained *\/$/;"	m	struct:winceLock	file:
bFreeList	utilities/sqlite3/sqlite3.c	/^  int bFreeList;                 \/* True if pList should be sqlite3_free()d *\/$/;"	m	struct:Fts3Doclist	file:
bFullMutex	utilities/sqlite3/sqlite3.c	/^  int bFullMutex;                   \/* True to enable full mutexing *\/$/;"	m	struct:Sqlite3Config	file:
bHasDocsize	utilities/sqlite3/sqlite3.c	/^  u8 bHasDocsize;                 \/* True if %_docsize table exists *\/$/;"	m	struct:Fts3Table	file:
bHasStat	utilities/sqlite3/sqlite3.c	/^  u8 bHasStat;                    \/* True if %_stat table exists *\/$/;"	m	struct:Fts3Table	file:
bIncr	utilities/sqlite3/sqlite3.c	/^  int bIncr;                 \/* True if doclist is loaded incrementally *\/$/;"	m	struct:Fts3Phrase	file:
bLocaltimeFault	utilities/sqlite3/sqlite3.c	/^  int bLocaltimeFault;              \/* True to fail localtime() calls *\/$/;"	m	struct:Sqlite3Config	file:
bLookup	utilities/sqlite3/sqlite3.c	/^  int bLookup;                    \/* True if a lookup of a single entry. *\/$/;"	m	struct:Fts3MultiSegReader	file:
bMalloced	utilities/sqlite3/sqlite3.c	/^  u8 bMalloced;           \/* True if pStart obtained from sqlite3_malloc() *\/$/;"	m	struct:Lookaside	file:
bMemstat	utilities/sqlite3/sqlite3.c	/^  int bMemstat;                     \/* True to enable memory status *\/$/;"	m	struct:Sqlite3Config	file:
bOpenUri	utilities/sqlite3/sqlite3.c	/^  int bOpenUri;                     \/* True to interpret filenames as URIs *\/$/;"	m	struct:Sqlite3Config	file:
bOwned	utilities/sqlite3/sqlite3.c	/^  BOOL bOwned;  \/* Do we own the heap (i.e. destroy it on shutdown)? *\/$/;"	m	struct:winMemData	file:
bPending	utilities/sqlite3/sqlite3.c	/^  BOOL bPending;      \/* Indicates a pending lock has been obtained *\/$/;"	m	struct:winceLock	file:
bPersistWal	utilities/sqlite3/sqlite3.c	/^  u8 bPersistWal;         \/* True to persist WAL files *\/$/;"	m	struct:winFile	file:
bProcessLock	utilities/sqlite3/sqlite3.c	/^  unsigned char bProcessLock;     \/* An exclusive process lock is held *\/$/;"	m	struct:unixInodeInfo	file:
bPurgeable	utilities/sqlite3/sqlite3.c	/^  int bPurgeable;                     \/* True if cache is purgeable *\/$/;"	m	struct:PCache1	file:
bPurgeable	utilities/sqlite3/sqlite3.c	/^  int bPurgeable;                     \/* True if pages are on backing store *\/$/;"	m	struct:PCache	file:
bReserved	utilities/sqlite3/sqlite3.c	/^  BOOL bReserved;     \/* Indicates a reserved lock has been obtained *\/$/;"	m	struct:winceLock	file:
bRestart	utilities/sqlite3/sqlite3.c	/^  int bRestart;$/;"	m	struct:Fts3MultiSegReader	file:
bStart	utilities/sqlite3/sqlite3.c	/^  u8 bStart;                 \/* True if iDocid is valid *\/$/;"	m	struct:Fts3Expr	file:
bUnderPressure	utilities/sqlite3/sqlite3.c	/^  int bUnderPressure;            \/* True if low on PAGECACHE memory *\/$/;"	m	struct:PCacheGlobal	file:
bUnordered	utilities/sqlite3/sqlite3.c	/^  u8 bUnordered;   \/* Use this index for == or IN queries only *\/$/;"	m	struct:Index	file:
backend	utilities/modbus/modbus-private.h	/^    const modbus_backend_t *backend;$/;"	m	struct:_modbus
backend_data	utilities/modbus/modbus-private.h	/^    void *backend_data;$/;"	m	struct:_modbus
backend_type	utilities/modbus/modbus-private.h	/^    unsigned int backend_type;$/;"	m	struct:_modbus_backend
backtrace	utilities/sqlite3/sqlite3.c	15002;"	d	file:
backtrace_symbols_fd	utilities/sqlite3/sqlite3.c	15003;"	d	file:
backupOnePage	utilities/sqlite3/sqlite3.c	/^static int backupOnePage(sqlite3_backup *p, Pgno iSrcPg, const u8 *zSrcData){$/;"	f	file:
backupTruncateFile	utilities/sqlite3/sqlite3.c	/^static int backupTruncateFile(sqlite3_file *pFile, i64 iSize){$/;"	f	file:
backup_finish	utilities/sqlite3/sqlite3.c	/^  int (*backup_finish)(sqlite3_backup*);$/;"	m	struct:sqlite3_api_routines	file:
backup_init	utilities/sqlite3/sqlite3.c	/^  sqlite3_backup *(*backup_init)(sqlite3*,const char*,sqlite3*,const char*);$/;"	m	struct:sqlite3_api_routines	file:
backup_pagecount	utilities/sqlite3/sqlite3.c	/^  int (*backup_pagecount)(sqlite3_backup*);$/;"	m	struct:sqlite3_api_routines	file:
backup_remaining	utilities/sqlite3/sqlite3.c	/^  int (*backup_remaining)(sqlite3_backup*);$/;"	m	struct:sqlite3_api_routines	file:
backup_step	utilities/sqlite3/sqlite3.c	/^  int (*backup_step)(sqlite3_backup*,int);$/;"	m	struct:sqlite3_api_routines	file:
balance	utilities/sqlite3/sqlite3.c	/^static int balance(BtCursor *pCur){$/;"	f	file:
balance_deeper	utilities/sqlite3/sqlite3.c	/^static int balance_deeper(MemPage *pRoot, MemPage **ppChild){$/;"	f	file:
balance_nonroot	utilities/sqlite3/sqlite3.c	/^static int balance_nonroot($/;"	f	file:
balance_quick	utilities/sqlite3/sqlite3.c	/^static int balance_quick(MemPage *pParent, MemPage *pPage, u8 *pSpace){$/;"	f	file:
base	utilities/sqlite3/sqlite3.c	/^  etByte base;             \/* The base for radix conversion *\/$/;"	m	struct:et_info	file:
base	utilities/sqlite3/sqlite3.c	/^  sqlite3_tokenizer base;      \/* Base class *\/$/;"	m	struct:porter_tokenizer	file:
base	utilities/sqlite3/sqlite3.c	/^  sqlite3_tokenizer base;$/;"	m	struct:IcuTokenizer	file:
base	utilities/sqlite3/sqlite3.c	/^  sqlite3_tokenizer base;$/;"	m	struct:simple_tokenizer	file:
base	utilities/sqlite3/sqlite3.c	/^  sqlite3_tokenizer_cursor base;$/;"	m	struct:IcuCursor	file:
base	utilities/sqlite3/sqlite3.c	/^  sqlite3_tokenizer_cursor base;$/;"	m	struct:porter_tokenizer_cursor	file:
base	utilities/sqlite3/sqlite3.c	/^  sqlite3_tokenizer_cursor base;$/;"	m	struct:simple_tokenizer_cursor	file:
base	utilities/sqlite3/sqlite3.c	/^  sqlite3_vtab base;              \/* Base class used by SQLite core *\/$/;"	m	struct:Fts3Table	file:
base	utilities/sqlite3/sqlite3.c	/^  sqlite3_vtab base;              \/* Base class used by SQLite core *\/$/;"	m	struct:Fts3auxTable	file:
base	utilities/sqlite3/sqlite3.c	/^  sqlite3_vtab base;$/;"	m	struct:Rtree	file:
base	utilities/sqlite3/sqlite3.c	/^  sqlite3_vtab_cursor base;       \/* Base class used by SQLite core *\/$/;"	m	struct:Fts3Cursor	file:
base	utilities/sqlite3/sqlite3.c	/^  sqlite3_vtab_cursor base;       \/* Base class used by SQLite core *\/$/;"	m	struct:Fts3auxCursor	file:
base	utilities/sqlite3/sqlite3.c	/^  sqlite3_vtab_cursor base;$/;"	m	struct:RtreeCursor	file:
baud	include/common.h	/^	int baud;$/;"	m	struct:uart_setting
baud	utilities/modbus/modbus-rtu-private.h	/^    int baud;$/;"	m	struct:_modbus_rtu
bestAutomaticIndex	utilities/sqlite3/sqlite3.c	/^static void bestAutomaticIndex($/;"	f	file:
bestAutomaticIndex	utilities/sqlite3/sqlite3.c	102305;"	d	file:
bestBtreeIndex	utilities/sqlite3/sqlite3.c	/^static void bestBtreeIndex($/;"	f	file:
bestIndex	utilities/sqlite3/sqlite3.c	/^static void bestIndex($/;"	f	file:
bestOrClauseIndex	utilities/sqlite3/sqlite3.c	/^static void bestOrClauseIndex($/;"	f	file:
bestVirtualIndex	utilities/sqlite3/sqlite3.c	/^static void bestVirtualIndex($/;"	f	file:
bigEndCksum	utilities/sqlite3/sqlite3.c	/^  u8 bigEndCksum;                 \/* True if checksums in WAL are big-endian *\/$/;"	m	struct:WalIndexHdr	file:
binCollFunc	utilities/sqlite3/sqlite3.c	/^static int binCollFunc($/;"	f	file:
binaryCompareP5	utilities/sqlite3/sqlite3.c	/^static u8 binaryCompareP5(Expr *pExpr1, Expr *pExpr2, int jumpIfNull){$/;"	f	file:
binaryToUnaryIfNull	utilities/sqlite3/sqlite3.c	/^  static void binaryToUnaryIfNull(Parse *pParse, Expr *pY, Expr *pA, int op){$/;"	f	file:
bindText	utilities/sqlite3/sqlite3.c	/^static int bindText($/;"	f	file:
bind_blob	utilities/sqlite3/sqlite3.c	/^  int  (*bind_blob)(sqlite3_stmt*,int,const void*,int n,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	file:
bind_double	utilities/sqlite3/sqlite3.c	/^  int  (*bind_double)(sqlite3_stmt*,int,double);$/;"	m	struct:sqlite3_api_routines	file:
bind_int	utilities/sqlite3/sqlite3.c	/^  int  (*bind_int)(sqlite3_stmt*,int,int);$/;"	m	struct:sqlite3_api_routines	file:
bind_int64	utilities/sqlite3/sqlite3.c	/^  int  (*bind_int64)(sqlite3_stmt*,int,sqlite_int64);$/;"	m	struct:sqlite3_api_routines	file:
bind_null	utilities/sqlite3/sqlite3.c	/^  int  (*bind_null)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	file:
bind_parameter_count	utilities/sqlite3/sqlite3.c	/^  int  (*bind_parameter_count)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	file:
bind_parameter_index	utilities/sqlite3/sqlite3.c	/^  int  (*bind_parameter_index)(sqlite3_stmt*,const char*zName);$/;"	m	struct:sqlite3_api_routines	file:
bind_parameter_name	utilities/sqlite3/sqlite3.c	/^  const char * (*bind_parameter_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	file:
bind_text	utilities/sqlite3/sqlite3.c	/^  int  (*bind_text)(sqlite3_stmt*,int,const char*,int n,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	file:
bind_text16	utilities/sqlite3/sqlite3.c	/^  int  (*bind_text16)(sqlite3_stmt*,int,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	file:
bind_value	utilities/sqlite3/sqlite3.c	/^  int  (*bind_value)(sqlite3_stmt*,int,const sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
bind_zeroblob	utilities/sqlite3/sqlite3.c	/^  int (*bind_zeroblob)(sqlite3_stmt*,int,int);$/;"	m	struct:sqlite3_api_routines	file:
blobReadWrite	utilities/sqlite3/sqlite3.c	/^static int blobReadWrite($/;"	f	file:
blobSeekToRow	utilities/sqlite3/sqlite3.c	/^static int blobSeekToRow(Incrblob *p, sqlite3_int64 iRow, char **pzErr){$/;"	f	file:
blob_bytes	utilities/sqlite3/sqlite3.c	/^  int (*blob_bytes)(sqlite3_blob*);$/;"	m	struct:sqlite3_api_routines	file:
blob_close	utilities/sqlite3/sqlite3.c	/^  int (*blob_close)(sqlite3_blob*);$/;"	m	struct:sqlite3_api_routines	file:
blob_open	utilities/sqlite3/sqlite3.c	/^  int (*blob_open)(sqlite3*,const char*,const char*,const char*,sqlite3_int64,int,sqlite3_blob**);$/;"	m	struct:sqlite3_api_routines	file:
blob_read	utilities/sqlite3/sqlite3.c	/^  int (*blob_read)(sqlite3_blob*,void*,int,int);$/;"	m	struct:sqlite3_api_routines	file:
blob_reopen	utilities/sqlite3/sqlite3.c	/^  int (*blob_reopen)(sqlite3_blob*,sqlite3_int64);$/;"	m	struct:sqlite3_api_routines	file:
blob_write	utilities/sqlite3/sqlite3.c	/^  int (*blob_write)(sqlite3_blob*,const void*,int,int);$/;"	m	struct:sqlite3_api_routines	file:
block	src/kernel/timer.c	/^static sem_t block;$/;"	v	file:
btreeClearHasContent	utilities/sqlite3/sqlite3.c	/^static void btreeClearHasContent(BtShared *pBt){$/;"	f	file:
btreeCreateTable	utilities/sqlite3/sqlite3.c	/^static int btreeCreateTable(Btree *p, int *piTable, int createTabFlags){$/;"	f	file:
btreeCursor	utilities/sqlite3/sqlite3.c	/^static int btreeCursor($/;"	f	file:
btreeDropTable	utilities/sqlite3/sqlite3.c	/^static int btreeDropTable(Btree *p, Pgno iTable, int *piMoved){$/;"	f	file:
btreeEndTransaction	utilities/sqlite3/sqlite3.c	/^static void btreeEndTransaction(Btree *p){$/;"	f	file:
btreeGetHasContent	utilities/sqlite3/sqlite3.c	/^static int btreeGetHasContent(BtShared *pBt, Pgno pgno){$/;"	f	file:
btreeGetPage	utilities/sqlite3/sqlite3.c	/^static int btreeGetPage($/;"	f	file:
btreeInitPage	utilities/sqlite3/sqlite3.c	/^static int btreeInitPage(MemPage *pPage){$/;"	f	file:
btreeIntegrity	utilities/sqlite3/sqlite3.c	47940;"	d	file:
btreeInvokeBusyHandler	utilities/sqlite3/sqlite3.c	/^static int btreeInvokeBusyHandler(void *pArg){$/;"	f	file:
btreeMask	utilities/sqlite3/sqlite3.c	/^  yDbMask btreeMask;      \/* Bitmask of db->aDb[] entries referenced *\/$/;"	m	struct:Vdbe	file:
btreeMoveto	utilities/sqlite3/sqlite3.c	/^static int btreeMoveto($/;"	f	file:
btreePageFromDbPage	utilities/sqlite3/sqlite3.c	/^static MemPage *btreePageFromDbPage(DbPage *pDbPage, Pgno pgno, BtShared *pBt){$/;"	f	file:
btreePageLookup	utilities/sqlite3/sqlite3.c	/^static MemPage *btreePageLookup(BtShared *pBt, Pgno pgno){$/;"	f	file:
btreePagecount	utilities/sqlite3/sqlite3.c	/^static Pgno btreePagecount(BtShared *pBt){$/;"	f	file:
btreeParseCell	utilities/sqlite3/sqlite3.c	/^static void btreeParseCell($/;"	f	file:
btreeParseCellPtr	utilities/sqlite3/sqlite3.c	/^static void btreeParseCellPtr($/;"	f	file:
btreeRestoreCursorPosition	utilities/sqlite3/sqlite3.c	/^static int btreeRestoreCursorPosition(BtCursor *pCur){$/;"	f	file:
btreeSetHasContent	utilities/sqlite3/sqlite3.c	/^static int btreeSetHasContent(BtShared *pBt, Pgno pgno){$/;"	f	file:
buf	utilities/common/sem.c	/^	struct semid_ds *buf;    \/* Buffer for IPC_STAT, IPC_SET *\/$/;"	m	union:semun	typeref:struct:semun::semid_ds	file:
buf	utilities/modbus/modbus-rtu-private.h	/^	uint8_t buf[PY_BUF_SIZE];$/;"	m	struct:win32_ser
buf_size	include/def.h	/^	int buf_size;$/;"	m	struct:object_buf
buffer	include/def.h	/^	char *buffer;$/;"	m	struct:object_buf
buffer_get_buffer	components/io/buffer.c	/^int buffer_get_buffer(object_buf_t buf, char *buffer, int size) $/;"	f
buffer_get_pending	components/io/buffer.c	/^int buffer_get_pending(object_buf_t buf, char *buffer, int size)$/;"	f
buffer_readbuf	components/io/buffer.c	/^int buffer_readbuf(object_t parent, char *buffer, int size)$/;"	f
buffer_sendbuf	components/io/buffer.c	/^int buffer_sendbuf(object_t parent, const char *buffer, const int size)$/;"	f
build_request_basis	utilities/modbus/modbus-private.h	/^    int (*build_request_basis) (modbus_t *ctx, int function, int addr,$/;"	m	struct:_modbus_backend
build_response_basis	utilities/modbus/modbus-private.h	/^    int (*build_response_basis) (sft_t *sft, uint8_t *rsp);$/;"	m	struct:_modbus_backend
busy	utilities/sqlite3/sqlite3.c	/^    u8 busy;                    \/* TRUE if currently initializing *\/$/;"	m	struct:sqlite3::sqlite3InitInfo	file:
busyHandler	utilities/sqlite3/sqlite3.c	/^  BusyHandler busyHandler;      \/* Busy callback *\/$/;"	m	struct:sqlite3	file:
busyTimeout	utilities/sqlite3/sqlite3.c	/^  int busyTimeout;              \/* Busy handler timeout, in msec *\/$/;"	m	struct:sqlite3	file:
busy_handler	utilities/sqlite3/sqlite3.c	/^  int  (*busy_handler)(sqlite3*,int(*)(void*,int),void*);$/;"	m	struct:sqlite3_api_routines	file:
busy_timeout	utilities/sqlite3/sqlite3.c	/^  int  (*busy_timeout)(sqlite3*,int ms);$/;"	m	struct:sqlite3_api_routines	file:
byte_timeout	utilities/modbus/modbus-private.h	/^    struct timeval byte_timeout;$/;"	m	struct:_modbus	typeref:struct:_modbus::timeval
cType	utilities/sqlite3/sqlite3.c	/^static const char cType[] = {$/;"	v	file:
c_to_u	utilities/common/tools.c	/^time_t c_to_u(char *st)$/;"	f
cacheCtr	utilities/sqlite3/sqlite3.c	/^  u32 cacheCtr;           \/* VdbeCursor row cache generation counter *\/$/;"	m	struct:Vdbe	file:
cacheEntryClear	utilities/sqlite3/sqlite3.c	/^static void cacheEntryClear(Parse *pParse, struct yColCache *p){$/;"	f	file:
cacheStatus	utilities/sqlite3/sqlite3.c	/^  u32 cacheStatus;      \/* Cache is valid if this matches Vdbe.cacheCtr *\/$/;"	m	struct:VdbeCursor	file:
cache_size	utilities/sqlite3/sqlite3.c	/^  int cache_size;      \/* Number of pages to use in the cache *\/$/;"	m	struct:Schema	file:
cachedRowid	utilities/sqlite3/sqlite3.c	/^  sqlite3_int64 cachedRowid; \/* Next rowid cache.  0 means not valid *\/$/;"	m	struct:BtCursor	file:
callCollNeeded	utilities/sqlite3/sqlite3.c	/^static void callCollNeeded(sqlite3 *db, int enc, const char *zName){$/;"	f	file:
callFinaliser	utilities/sqlite3/sqlite3.c	/^static void callFinaliser(sqlite3 *db, int offset){$/;"	f	file:
cdateFunc	utilities/sqlite3/sqlite3.c	/^static void cdateFunc($/;"	f	file:
cellArea	utilities/sqlite3/sqlite3.c	/^static float cellArea(Rtree *pRtree, RtreeCell *p){$/;"	f	file:
cellContains	utilities/sqlite3/sqlite3.c	/^static int cellContains(Rtree *pRtree, RtreeCell *p1, RtreeCell *p2){$/;"	f	file:
cellGrowth	utilities/sqlite3/sqlite3.c	/^static float cellGrowth(Rtree *pRtree, RtreeCell *p, RtreeCell *pCell){$/;"	f	file:
cellMargin	utilities/sqlite3/sqlite3.c	/^static float cellMargin(Rtree *pRtree, RtreeCell *p){$/;"	f	file:
cellOffset	utilities/sqlite3/sqlite3.c	/^  u16 cellOffset;      \/* Index in aData of first cell pointer *\/$/;"	m	struct:MemPage	file:
cellOverlap	utilities/sqlite3/sqlite3.c	/^static float cellOverlap($/;"	f	file:
cellOverlapEnlargement	utilities/sqlite3/sqlite3.c	/^static float cellOverlapEnlargement($/;"	f	file:
cellSize	utilities/sqlite3/sqlite3.c	/^static u16 cellSize(MemPage *pPage, int iCell){$/;"	f	file:
cellSizePtr	utilities/sqlite3/sqlite3.c	/^static u16 cellSizePtr(MemPage *pPage, u8 *pCell){$/;"	f	file:
cellUnion	utilities/sqlite3/sqlite3.c	/^static void cellUnion(Rtree *pRtree, RtreeCell *p1, RtreeCell *p2){$/;"	f	file:
cfg	include/def.h	/^	void *cfg;$/;"	m	struct:object_io
chain	utilities/sqlite3/sqlite3.c	/^    Fts3HashElem *chain;     \/* Pointer to first entry with this hash *\/$/;"	m	struct:Fts3Hash::_fts3ht	file:
chain	utilities/sqlite3/sqlite3.c	/^    HashElem *chain;           \/* Pointer to first entry with this hash *\/$/;"	m	struct:Hash::_ht	file:
changeCntOn	utilities/sqlite3/sqlite3.c	/^  u8 changeCntOn;         \/* True to update the change-counter *\/$/;"	m	struct:Vdbe	file:
changeCountDone	utilities/sqlite3/sqlite3.c	/^  u8 changeCountDone;         \/* Set after incrementing the change-counter *\/$/;"	m	struct:Pager	file:
changeTempStorage	utilities/sqlite3/sqlite3.c	/^static int changeTempStorage(Parse *pParse, const char *zStorageType){$/;"	f	file:
changes	utilities/sqlite3/sqlite3.c	/^  int  (*changes)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
changes	utilities/sqlite3/sqlite3.c	/^static void changes($/;"	f	file:
charMap	utilities/sqlite3/sqlite3.c	108994;"	d	file:
charMap	utilities/sqlite3/sqlite3.c	108997;"	d	file:
charset	utilities/sqlite3/sqlite3.c	/^  etByte charset;          \/* Offset into aDigits[] of the digits string *\/$/;"	m	struct:et_info	file:
checkActiveVdbeCnt	utilities/sqlite3/sqlite3.c	/^static void checkActiveVdbeCnt(sqlite3 *db){$/;"	f	file:
checkActiveVdbeCnt	utilities/sqlite3/sqlite3.c	60278;"	d	file:
checkAppendMsg	utilities/sqlite3/sqlite3.c	/^static void checkAppendMsg($/;"	f	file:
checkColumnOverlap	utilities/sqlite3/sqlite3.c	/^static int checkColumnOverlap(IdList *pIdList, ExprList *pEList){$/;"	f	file:
checkForMultiColumnSelectError	utilities/sqlite3/sqlite3.c	/^static int checkForMultiColumnSelectError($/;"	f	file:
checkList	utilities/sqlite3/sqlite3.c	/^static void checkList($/;"	f	file:
checkListProperties	utilities/sqlite3/sqlite3.c	/^static void checkListProperties(sqlite3 *db){$/;"	f	file:
checkListProperties	utilities/sqlite3/sqlite3.c	113170;"	d	file:
checkPage	utilities/sqlite3/sqlite3.c	/^static void checkPage(PgHdr *pPg){$/;"	f	file:
checkPtrmap	utilities/sqlite3/sqlite3.c	/^static void checkPtrmap($/;"	f	file:
checkRef	utilities/sqlite3/sqlite3.c	/^static int checkRef(IntegrityCk *pCheck, Pgno iPage, char *zContext){$/;"	f	file:
checkSavepointCount	utilities/sqlite3/sqlite3.c	/^static int checkSavepointCount(sqlite3 *db){$/;"	f	file:
checkSchema	utilities/sqlite3/sqlite3.c	/^  u8 checkSchema;      \/* Causes schema cookie check after an error *\/$/;"	m	struct:Parse	file:
checkTreePage	utilities/sqlite3/sqlite3.c	/^static int checkTreePage($/;"	f	file:
check_confirmation	utilities/modbus/modbus.c	/^static int check_confirmation(modbus_t *ctx, uint8_t *req,$/;"	f	file:
check_integrity	utilities/modbus/modbus-private.h	/^    int (*check_integrity) (modbus_t *ctx, uint8_t *msg,$/;"	m	struct:_modbus_backend
checksum_length	utilities/modbus/modbus-private.h	/^    unsigned int checksum_length;$/;"	m	struct:_modbus_backend
childPtrSize	utilities/sqlite3/sqlite3.c	/^  u8 childPtrSize;     \/* 0 if leaf==1.  4 if leaf==0 *\/$/;"	m	struct:MemPage	file:
ckBase	utilities/sqlite3/sqlite3.c	/^  int ckBase;          \/* Base register of data during check constraints *\/$/;"	m	struct:Parse	file:
ckptLock	utilities/sqlite3/sqlite3.c	/^  u8 ckptLock;               \/* True if holding a checkpoint lock *\/$/;"	m	struct:Wal	file:
ckptSyncFlags	utilities/sqlite3/sqlite3.c	/^  u8 ckptSyncFlags;           \/* SYNC_NORMAL or SYNC_FULL for checkpoint *\/$/;"	m	struct:Pager	file:
cksumInit	utilities/sqlite3/sqlite3.c	/^  u32 cksumInit;              \/* Quasi-random value added to every checksum *\/$/;"	m	struct:Pager	file:
clearAllSharedCacheTableLocks	utilities/sqlite3/sqlite3.c	/^static void clearAllSharedCacheTableLocks(Btree *p){$/;"	f	file:
clearAllSharedCacheTableLocks	utilities/sqlite3/sqlite3.c	48345;"	d	file:
clearCell	utilities/sqlite3/sqlite3.c	/^static int clearCell(MemPage *pPage, unsigned char *pCell){$/;"	f	file:
clearDatabasePage	utilities/sqlite3/sqlite3.c	/^static int clearDatabasePage($/;"	f	file:
clearSelect	utilities/sqlite3/sqlite3.c	/^static void clearSelect(sqlite3 *db, Select *p){$/;"	f	file:
clearYMD_HMS_TZ	utilities/sqlite3/sqlite3.c	/^static void clearYMD_HMS_TZ(DateTime *p){$/;"	f	file:
clear_bindings	utilities/sqlite3/sqlite3.c	/^  int (*clear_bindings)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	file:
close	utilities/modbus/modbus-private.h	/^    void (*close) (modbus_t *ctx);$/;"	m	struct:_modbus_backend
close	utilities/modbus/modbus-tcp.c	38;"	d	file:
close	utilities/sqlite3/sqlite3.c	/^  int  (*close)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
closeAllCursors	utilities/sqlite3/sqlite3.c	/^static void closeAllCursors(Vdbe *p){$/;"	f	file:
closePendingFds	utilities/sqlite3/sqlite3.c	/^static void closePendingFds(unixFile *pFile){$/;"	f	file:
closeUnixFile	utilities/sqlite3/sqlite3.c	/^static int closeUnixFile(sqlite3_file *id){$/;"	f	file:
cnt	utilities/sqlite3/sqlite3.c	/^  i64 cnt;          \/* Number of elements summed *\/$/;"	m	struct:SumCtx	file:
cnt	utilities/sqlite3/sqlite3.c	/^  int cnt;                 \/* Number of times this instruction was executed *\/$/;"	m	struct:VdbeOp	file:
cnt	utilities/sqlite3/sqlite3.c	/^  int cnt;    \/* Number of entries without a matching leave *\/$/;"	m	struct:sqlite3_debug_mutex	file:
codeAllEqualityTerms	utilities/sqlite3/sqlite3.c	/^static int codeAllEqualityTerms($/;"	f	file:
codeApplyAffinity	utilities/sqlite3/sqlite3.c	/^static void codeApplyAffinity(Parse *pParse, int base, int n, char *zAff){$/;"	f	file:
codeAttach	utilities/sqlite3/sqlite3.c	/^static void codeAttach($/;"	f	file:
codeCompare	utilities/sqlite3/sqlite3.c	/^static int codeCompare($/;"	f	file:
codeDistinct	utilities/sqlite3/sqlite3.c	/^static void codeDistinct($/;"	f	file:
codeEqualityTerm	utilities/sqlite3/sqlite3.c	/^static int codeEqualityTerm($/;"	f	file:
codeInteger	utilities/sqlite3/sqlite3.c	/^static void codeInteger(Parse *pParse, Expr *pExpr, int negFlag, int iMem){$/;"	f	file:
codeOffset	utilities/sqlite3/sqlite3.c	/^static void codeOffset($/;"	f	file:
codeOneLoopStart	utilities/sqlite3/sqlite3.c	/^static Bitmask codeOneLoopStart($/;"	f	file:
codeReal	utilities/sqlite3/sqlite3.c	/^static void codeReal(Vdbe *v, const char *z, int negateFlag, int iMem){$/;"	f	file:
codeRowTrigger	utilities/sqlite3/sqlite3.c	/^static TriggerPrg *codeRowTrigger($/;"	f	file:
codeTableLocks	utilities/sqlite3/sqlite3.c	/^static void codeTableLocks(Parse *pParse){$/;"	f	file:
codeTableLocks	utilities/sqlite3/sqlite3.c	79245;"	d	file:
codeTriggerProgram	utilities/sqlite3/sqlite3.c	/^static int codeTriggerProgram($/;"	f	file:
code_convert	utilities/common/iconv.c	/^static int code_convert(char *from_charset, char *to_charset, char *inbuf, size_t inlen, char *outbuf, size_t outlen)$/;"	f	file:
colNamesSet	utilities/sqlite3/sqlite3.c	/^  u8 colNamesSet;      \/* TRUE after OP_ColumnName has been issued to pVdbe *\/$/;"	m	struct:Parse	file:
colUsed	utilities/sqlite3/sqlite3.c	/^    Bitmask colUsed;  \/* Bit N (1<<N) set if column N of pTab is used *\/$/;"	m	struct:SrcList::SrcList_item	file:
collationMatch	utilities/sqlite3/sqlite3.c	/^static int collationMatch(const char *zColl, Index *pIndex){$/;"	f	file:
collation_needed	utilities/sqlite3/sqlite3.c	/^  int  (*collation_needed)(sqlite3*,void*,void(*)(void*,sqlite3*,int eTextRep,const char*));$/;"	m	struct:sqlite3_api_routines	file:
collation_needed16	utilities/sqlite3/sqlite3.c	/^  int  (*collation_needed16)(sqlite3*,void*,void(*)(void*,sqlite3*,int eTextRep,const void*));$/;"	m	struct:sqlite3_api_routines	file:
columnIndex	utilities/sqlite3/sqlite3.c	/^static int columnIndex(Table *pTab, const char *zCol){$/;"	f	file:
columnMallocFailure	utilities/sqlite3/sqlite3.c	/^static void columnMallocFailure(sqlite3_stmt *pStmt)$/;"	f	file:
columnMem	utilities/sqlite3/sqlite3.c	/^static Mem *columnMem(sqlite3_stmt *pStmt, int i){$/;"	f	file:
columnName	utilities/sqlite3/sqlite3.c	/^static const void *columnName($/;"	f	file:
columnType	utilities/sqlite3/sqlite3.c	/^static const char *columnType($/;"	f	file:
column_blob	utilities/sqlite3/sqlite3.c	/^  const void * (*column_blob)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	file:
column_bytes	utilities/sqlite3/sqlite3.c	/^  int  (*column_bytes)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	file:
column_bytes16	utilities/sqlite3/sqlite3.c	/^  int  (*column_bytes16)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	file:
column_count	utilities/sqlite3/sqlite3.c	/^  int  (*column_count)(sqlite3_stmt*pStmt);$/;"	m	struct:sqlite3_api_routines	file:
column_database_name	utilities/sqlite3/sqlite3.c	/^  const char * (*column_database_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	file:
column_database_name16	utilities/sqlite3/sqlite3.c	/^  const void * (*column_database_name16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	file:
column_decltype	utilities/sqlite3/sqlite3.c	/^  const char * (*column_decltype)(sqlite3_stmt*,int i);$/;"	m	struct:sqlite3_api_routines	file:
column_decltype16	utilities/sqlite3/sqlite3.c	/^  const void * (*column_decltype16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	file:
column_double	utilities/sqlite3/sqlite3.c	/^  double  (*column_double)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	file:
column_int	utilities/sqlite3/sqlite3.c	/^  int  (*column_int)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	file:
column_int64	utilities/sqlite3/sqlite3.c	/^  sqlite_int64  (*column_int64)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	file:
column_name	utilities/sqlite3/sqlite3.c	/^  const char * (*column_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	file:
column_name16	utilities/sqlite3/sqlite3.c	/^  const void * (*column_name16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	file:
column_origin_name	utilities/sqlite3/sqlite3.c	/^  const char * (*column_origin_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	file:
column_origin_name16	utilities/sqlite3/sqlite3.c	/^  const void * (*column_origin_name16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	file:
column_table_name	utilities/sqlite3/sqlite3.c	/^  const char * (*column_table_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	file:
column_table_name16	utilities/sqlite3/sqlite3.c	/^  const void * (*column_table_name16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	file:
column_text	utilities/sqlite3/sqlite3.c	/^  const unsigned char * (*column_text)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	file:
column_text16	utilities/sqlite3/sqlite3.c	/^  const void * (*column_text16)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	file:
column_type	utilities/sqlite3/sqlite3.c	/^  int  (*column_type)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	file:
column_value	utilities/sqlite3/sqlite3.c	/^  sqlite3_value* (*column_value)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	file:
commit_hook	utilities/sqlite3/sqlite3.c	/^  void * (*commit_hook)(sqlite3*,int(*)(void*),void*);$/;"	m	struct:sqlite3_api_routines	file:
compare2pow63	utilities/sqlite3/sqlite3.c	/^static int compare2pow63(const char *zNum, int incr){$/;"	f	file:
compareInfo	utilities/sqlite3/sqlite3.c	/^struct compareInfo {$/;"	s	file:
comparisonAffinity	utilities/sqlite3/sqlite3.c	/^static char comparisonAffinity(Expr *pExpr){$/;"	f	file:
compileoption_get	utilities/sqlite3/sqlite3.c	/^  const char *(*compileoption_get)(int);$/;"	m	struct:sqlite3_api_routines	file:
compileoption_used	utilities/sqlite3/sqlite3.c	/^  int (*compileoption_used)(const char*);$/;"	m	struct:sqlite3_api_routines	file:
compileoptiongetFunc	utilities/sqlite3/sqlite3.c	/^static void compileoptiongetFunc($/;"	f	file:
compileoptionusedFunc	utilities/sqlite3/sqlite3.c	/^static void compileoptionusedFunc($/;"	f	file:
complete	utilities/sqlite3/sqlite3.c	/^  int  (*complete)(const char*sql);$/;"	m	struct:sqlite3_api_routines	file:
complete16	utilities/sqlite3/sqlite3.c	/^  int  (*complete16)(const void*sql);$/;"	m	struct:sqlite3_api_routines	file:
computeHMS	utilities/sqlite3/sqlite3.c	/^static void computeHMS(DateTime *p){$/;"	f	file:
computeJD	utilities/sqlite3/sqlite3.c	/^static void computeJD(DateTime *p){$/;"	f	file:
computeLimitRegisters	utilities/sqlite3/sqlite3.c	/^static void computeLimitRegisters(Parse *pParse, Select *p, int iBreak){$/;"	f	file:
computeYMD	utilities/sqlite3/sqlite3.c	/^static void computeYMD(DateTime *p){$/;"	f	file:
computeYMD_HMS	utilities/sqlite3/sqlite3.c	/^static void computeYMD_HMS(DateTime *p){$/;"	f	file:
compute_data_length_after_meta	utilities/modbus/modbus.c	/^static int compute_data_length_after_meta(modbus_t *ctx, uint8_t *msg,$/;"	f	file:
compute_meta_length_after_function	utilities/modbus/modbus.c	/^static uint8_t compute_meta_length_after_function(int function,$/;"	f	file:
compute_response_length_from_request	utilities/modbus/modbus.c	/^static unsigned int compute_response_length_from_request(modbus_t *ctx, uint8_t *req)$/;"	f	file:
conchFile	utilities/sqlite3/sqlite3.c	/^  unixFile *conchFile;         \/* Open conch file *\/$/;"	m	struct:proxyLockingContext	file:
conchFilePath	utilities/sqlite3/sqlite3.c	/^  char *conchFilePath;         \/* Name of the conch file *\/$/;"	m	struct:proxyLockingContext	file:
conchHeld	utilities/sqlite3/sqlite3.c	/^  int conchHeld;               \/* 1 if the conch is held, -1 if lockless *\/$/;"	m	struct:proxyLockingContext	file:
connect	include/def.h	/^	int connect;$/;"	m	struct:object_io
connect	utilities/modbus/modbus-private.h	/^    int (*connect) (modbus_t *ctx);$/;"	m	struct:_modbus_backend
constructAutomaticIndex	utilities/sqlite3/sqlite3.c	/^static void constructAutomaticIndex($/;"	f	file:
contextMalloc	utilities/sqlite3/sqlite3.c	/^static void *contextMalloc(sqlite3_context *context, i64 nByte){$/;"	f	file:
context_db_handle	utilities/sqlite3/sqlite3.c	/^  sqlite3 *(*context_db_handle)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines	file:
convertCpPathToUtf8	utilities/sqlite3/sqlite3.c	/^char *convertCpPathToUtf8( const char *in ){$/;"	f
convertUtf8Filename	utilities/sqlite3/sqlite3.c	/^static void *convertUtf8Filename(const char *zFilename){$/;"	f	file:
convertUtf8PathToCp	utilities/sqlite3/sqlite3.c	/^static char *convertUtf8PathToCp( const char *in ){$/;"	f	file:
cookieGoto	utilities/sqlite3/sqlite3.c	/^  int cookieGoto;      \/* Address of OP_Goto to cookie verifier subroutine *\/$/;"	m	struct:Parse	file:
cookieMask	utilities/sqlite3/sqlite3.c	/^  yDbMask cookieMask;  \/* Bitmask of schema verified databases *\/$/;"	m	struct:Parse	file:
cookieValue	utilities/sqlite3/sqlite3.c	/^  int cookieValue[SQLITE_MAX_ATTACHED+2];  \/* Values of cookies to verify *\/$/;"	m	struct:Parse	file:
copyKey	utilities/sqlite3/sqlite3.c	/^  char copyKey;           \/* True if copy of key made on insert *\/$/;"	m	struct:Fts3Hash	file:
copyNodeContent	utilities/sqlite3/sqlite3.c	/^static void copyNodeContent(MemPage *pFrom, MemPage *pTo, int *pRC){$/;"	f	file:
copyPayload	utilities/sqlite3/sqlite3.c	/^static int copyPayload($/;"	f	file:
copy_stemmer	utilities/sqlite3/sqlite3.c	/^static void copy_stemmer(const char *zIn, int nIn, char *zOut, int *pnOut){$/;"	f	file:
corruptSchema	utilities/sqlite3/sqlite3.c	/^static void corruptSchema($/;"	f	file:
count	utilities/sqlite3/sqlite3.c	/^    int count;                 \/* Number of entries with this hash *\/$/;"	m	struct:Hash::_ht	file:
count	utilities/sqlite3/sqlite3.c	/^    int count;               \/* Number of entries with this hash *\/$/;"	m	struct:Fts3Hash::_fts3ht	file:
count	utilities/sqlite3/sqlite3.c	/^  int count;              \/* Number of entries in this table *\/$/;"	m	struct:Fts3Hash	file:
count	utilities/sqlite3/sqlite3.c	/^  unsigned int count;       \/* Number of entries in this table *\/$/;"	m	struct:Hash	file:
countFinalize	utilities/sqlite3/sqlite3.c	/^static void countFinalize(sqlite3_context *context){$/;"	f	file:
countStep	utilities/sqlite3/sqlite3.c	/^static void countStep(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
countWriteCursors	utilities/sqlite3/sqlite3.c	/^static int countWriteCursors(BtShared *pBt){$/;"	f	file:
covered	utilities/sqlite3/sqlite3.c	/^  u64 covered;                    \/* Mask of query phrases covered *\/$/;"	m	struct:SnippetFragment	file:
crc16	utilities/common/tools.c	/^unsigned short crc16(char *buf, int lenth)$/;"	f
crc16	utilities/modbus/modbus-rtu.c	/^static uint16_t crc16(uint8_t *buffer, uint16_t buffer_length)$/;"	f	file:
createCollation	utilities/sqlite3/sqlite3.c	/^static int createCollation($/;"	f	file:
createFile	utilities/sqlite3/sqlite3.c	/^static int createFile(JournalFile *p){$/;"	f	file:
createMask	utilities/sqlite3/sqlite3.c	/^static void createMask(WhereMaskSet *pMaskSet, int iCursor){$/;"	f	file:
createModule	utilities/sqlite3/sqlite3.c	/^static int createModule($/;"	f	file:
createTableStmt	utilities/sqlite3/sqlite3.c	/^static char *createTableStmt(sqlite3 *db, Table *p){$/;"	f	file:
create_collation	utilities/sqlite3/sqlite3.c	/^  int  (*create_collation)(sqlite3*,const char*,int,void*,int(*)(void*,int,const void*,int,const void*));$/;"	m	struct:sqlite3_api_routines	file:
create_collation16	utilities/sqlite3/sqlite3.c	/^  int  (*create_collation16)(sqlite3*,const void*,int,void*,int(*)(void*,int,const void*,int,const void*));$/;"	m	struct:sqlite3_api_routines	file:
create_collation_v2	utilities/sqlite3/sqlite3.c	/^  int (*create_collation_v2)(sqlite3*,const char*,int,void*,int(*)(void*,int,const void*,int,const void*),void(*)(void*));$/;"	m	struct:sqlite3_api_routines	file:
create_function	utilities/sqlite3/sqlite3.c	/^  int  (*create_function)(sqlite3*,const char*,int,int,void*,void (*xFunc)(sqlite3_context*,int,sqlite3_value**),void (*xStep)(sqlite3_context*,int,sqlite3_value**),void (*xFinal)(sqlite3_context*));$/;"	m	struct:sqlite3_api_routines	file:
create_function16	utilities/sqlite3/sqlite3.c	/^  int  (*create_function16)(sqlite3*,const void*,int,int,void*,void (*xFunc)(sqlite3_context*,int,sqlite3_value**),void (*xStep)(sqlite3_context*,int,sqlite3_value**),void (*xFinal)(sqlite3_context*));$/;"	m	struct:sqlite3_api_routines	file:
create_function_v2	utilities/sqlite3/sqlite3.c	/^  int (*create_function_v2)(sqlite3*,const char*,int,int,void*,void (*xFunc)(sqlite3_context*,int,sqlite3_value**),void (*xStep)(sqlite3_context*,int,sqlite3_value**),void (*xFinal)(sqlite3_context*),void(*xDestroy)(void*));$/;"	m	struct:sqlite3_api_routines	file:
create_module	utilities/sqlite3/sqlite3.c	/^  int (*create_module)(sqlite3*,const char*,const sqlite3_module*,void*);$/;"	m	struct:sqlite3_api_routines	file:
create_module_v2	utilities/sqlite3/sqlite3.c	/^  int (*create_module_v2)(sqlite3*,const char*,const sqlite3_module*,void*,void (*xDestroy)(void *));$/;"	m	struct:sqlite3_api_routines	file:
create_unixdomain	utilities/common/ipc.c	/^int create_unixdomain(int type, const char *unix_file)$/;"	f
csr	utilities/sqlite3/sqlite3.c	/^  Fts3MultiSegReader csr;        \/* Must be right after "base" *\/$/;"	m	struct:Fts3auxCursor	file:
ctimeFunc	utilities/sqlite3/sqlite3.c	/^static void ctimeFunc($/;"	f	file:
ctimestampFunc	utilities/sqlite3/sqlite3.c	/^static void ctimestampFunc($/;"	f	file:
ctrlFlags	utilities/sqlite3/sqlite3.c	/^  unsigned char ctrlFlags;            \/* Behavioral bits.  UNIXFILE_* flags *\/$/;"	m	struct:unixFile	file:
currentCount	utilities/sqlite3/sqlite3.c	/^  u32 currentCount;   \/* Current number of distinct checkouts *\/$/;"	m	struct:Mem5Global	file:
currentOut	utilities/sqlite3/sqlite3.c	/^  u32 currentOut;     \/* Current checkout, including internal fragmentation *\/$/;"	m	struct:Mem5Global	file:
currentTimeFunc	utilities/sqlite3/sqlite3.c	/^static void currentTimeFunc($/;"	f	file:
current_plevel	src/kernel/print.c	/^static int current_plevel;$/;"	v	file:
cursorHoldsMutex	utilities/sqlite3/sqlite3.c	/^static int cursorHoldsMutex(BtCursor *p){$/;"	f	file:
cycles	utilities/sqlite3/sqlite3.c	/^  u64 cycles;              \/* Total time spent executing this instruction *\/$/;"	m	struct:VdbeOp	file:
data	utilities/sqlite3/sqlite3.c	/^  void *data;                  \/* Data associated with this element *\/$/;"	m	struct:HashElem	file:
data	utilities/sqlite3/sqlite3.c	/^  void *data;                \/* Data associated with this element *\/$/;"	m	struct:Fts3HashElem	file:
data_bit	utilities/modbus/modbus-rtu-private.h	/^    uint8_t data_bit;$/;"	m	struct:_modbus_rtu
data_count	utilities/sqlite3/sqlite3.c	/^  int  (*data_count)(sqlite3_stmt*pStmt);$/;"	m	struct:sqlite3_api_routines	file:
databit	include/common.h	/^	int databit;$/;"	m	struct:uart_setting
dateFunc	utilities/sqlite3/sqlite3.c	/^static void dateFunc($/;"	f	file:
datetimeFunc	utilities/sqlite3/sqlite3.c	/^static void datetimeFunc($/;"	f	file:
db	utilities/sqlite3/sqlite3.c	/^  sqlite3 *db;                    \/* The database connection *\/$/;"	m	struct:Fts3Table	file:
db	utilities/sqlite3/sqlite3.c	/^  sqlite3 *db;                   \/* The database connection *\/$/;"	m	struct:RowSet	file:
db	utilities/sqlite3/sqlite3.c	/^  sqlite3 *db;                \/* Host database connection *\/$/;"	m	struct:Rtree	file:
db	utilities/sqlite3/sqlite3.c	/^  sqlite3 *db;              \/* Database connection associated with this table *\/$/;"	m	struct:VTable	file:
db	utilities/sqlite3/sqlite3.c	/^  sqlite3 *db;            \/* The associated database *\/$/;"	m	struct:Incrblob	file:
db	utilities/sqlite3/sqlite3.c	/^  sqlite3 *db;            \/* The database connection that owns this statement *\/$/;"	m	struct:Vdbe	file:
db	utilities/sqlite3/sqlite3.c	/^  sqlite3 *db;          \/* Database connection currently using this Btree *\/$/;"	m	struct:BtShared	file:
db	utilities/sqlite3/sqlite3.c	/^  sqlite3 *db;         \/* Optional database for lookaside.  Can be NULL *\/$/;"	m	struct:StrAccum	file:
db	utilities/sqlite3/sqlite3.c	/^  sqlite3 *db;         \/* The main database structure *\/$/;"	m	struct:Parse	file:
db	utilities/sqlite3/sqlite3.c	/^  sqlite3 *db;        \/* The associated database connection *\/$/;"	m	struct:Mem	file:
db	utilities/sqlite3/sqlite3.c	/^  sqlite3 *db;        \/* The database being initialized *\/$/;"	m	struct:__anon15	file:
db	utilities/sqlite3/sqlite3.c	/^  sqlite3 *db;        \/* The database connection *\/$/;"	m	struct:KeyInfo	file:
db	utilities/sqlite3/sqlite3.c	/^  sqlite3 *db;       \/* The database connection holding this btree *\/$/;"	m	struct:Btree	file:
db	utilities/sqlite3/sqlite3.c	/^  sqlite3 *db;$/;"	m	struct:analysisInfo	file:
dbFileSize	utilities/sqlite3/sqlite3.c	/^  Pgno dbFileSize;            \/* Number of pages in the database file *\/$/;"	m	struct:Pager	file:
dbFileVers	utilities/sqlite3/sqlite3.c	/^  char dbFileVers[16];        \/* Changes whenever database file changes *\/$/;"	m	struct:Pager	file:
dbHintSize	utilities/sqlite3/sqlite3.c	/^  Pgno dbHintSize;            \/* Value passed to FCNTL_SIZE_HINT call *\/$/;"	m	struct:Pager	file:
dbOrigSize	utilities/sqlite3/sqlite3.c	/^  Pgno dbOrigSize;            \/* dbSize before the current transaction *\/$/;"	m	struct:Pager	file:
dbPath	utilities/sqlite3/sqlite3.c	/^  char *dbPath;                \/* Name of the open file *\/$/;"	m	struct:proxyLockingContext	file:
dbPath	utilities/sqlite3/sqlite3.c	/^  const char *dbPath;             \/* Name of the open file *\/$/;"	m	struct:afpLockingContext	file:
dbSize	utilities/sqlite3/sqlite3.c	/^  Pgno dbSize;                \/* Number of pages in the database *\/$/;"	m	struct:Pager	file:
dbUpdate	utilities/sqlite3/sqlite3.c	/^  unsigned char dbUpdate;        \/* True if any part of database file changed *\/$/;"	m	struct:unixFile	file:
db_config	utilities/sqlite3/sqlite3.c	/^  int (*db_config)(sqlite3*,int,...);$/;"	m	struct:sqlite3_api_routines	file:
db_handle	utilities/sqlite3/sqlite3.c	/^  sqlite3 * (*db_handle)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	file:
db_mutex	utilities/sqlite3/sqlite3.c	/^  sqlite3_mutex *(*db_mutex)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
db_status	utilities/sqlite3/sqlite3.c	/^  int (*db_status)(sqlite3*,int,int*,int*,int);$/;"	m	struct:sqlite3_api_routines	file:
debug	src/kernel/print.c	/^int debug(int plevel, const char *format, ...)$/;"	f
debug	utilities/modbus/modbus-private.h	/^    int debug;$/;"	m	struct:_modbus
debugMutexAlloc	utilities/sqlite3/sqlite3.c	/^static sqlite3_mutex *debugMutexAlloc(int id){$/;"	f	file:
debugMutexEnd	utilities/sqlite3/sqlite3.c	/^static int debugMutexEnd(void){ return SQLITE_OK; }$/;"	f	file:
debugMutexEnter	utilities/sqlite3/sqlite3.c	/^static void debugMutexEnter(sqlite3_mutex *pX){$/;"	f	file:
debugMutexFree	utilities/sqlite3/sqlite3.c	/^static void debugMutexFree(sqlite3_mutex *pX){$/;"	f	file:
debugMutexHeld	utilities/sqlite3/sqlite3.c	/^static int debugMutexHeld(sqlite3_mutex *pX){$/;"	f	file:
debugMutexInit	utilities/sqlite3/sqlite3.c	/^static int debugMutexInit(void){ return SQLITE_OK; }$/;"	f	file:
debugMutexLeave	utilities/sqlite3/sqlite3.c	/^static void debugMutexLeave(sqlite3_mutex *pX){$/;"	f	file:
debugMutexNotheld	utilities/sqlite3/sqlite3.c	/^static int debugMutexNotheld(sqlite3_mutex *pX){$/;"	f	file:
debugMutexTry	utilities/sqlite3/sqlite3.c	/^static int debugMutexTry(sqlite3_mutex *pX){$/;"	f	file:
declareVtab	utilities/sqlite3/sqlite3.c	/^  u8 declareVtab;            \/* True if inside sqlite3_declare_vtab() *\/$/;"	m	struct:Parse	file:
declare_vtab	utilities/sqlite3/sqlite3.c	/^  int (*declare_vtab)(sqlite3*,const char*);$/;"	m	struct:sqlite3_api_routines	file:
decodeFlags	utilities/sqlite3/sqlite3.c	/^static int decodeFlags(MemPage *pPage, int flagByte){$/;"	f	file:
deferredMoveto	utilities/sqlite3/sqlite3.c	/^  Bool deferredMoveto;  \/* A call to sqlite3BtreeMoveto() is needed *\/$/;"	m	struct:VdbeCursor	file:
defragmentPage	utilities/sqlite3/sqlite3.c	/^static int defragmentPage(MemPage *pPage){$/;"	f	file:
del_sem	utilities/common/sem.c	/^int del_sem(int sem_id)$/;"	f
deleteCell	utilities/sqlite3/sqlite3.c	/^static int deleteCell(Rtree *pRtree, RtreeNode *pNode, int iCell, int iHeight){$/;"	f	file:
delim	utilities/sqlite3/sqlite3.c	/^  char delim[128];             \/* flag ASCII delimiters *\/$/;"	m	struct:simple_tokenizer	file:
desc	utilities/sqlite3/sqlite3.c	/^     unsigned char desc;       \/* True for DESC.  False for ASC. *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_orderby	file:
desc	utilities/sqlite3/sqlite3.h	/^     unsigned char desc;       \/* True for DESC.  False for ASC. *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_orderby
descendToCell	utilities/sqlite3/sqlite3.c	/^static int descendToCell($/;"	f	file:
deserializeGeometry	utilities/sqlite3/sqlite3.c	/^static int deserializeGeometry(sqlite3_value *pValue, RtreeConstraint *pCons){$/;"	f	file:
destroyRootPage	utilities/sqlite3/sqlite3.c	/^static void destroyRootPage(Parse *pParse, int iTable, int iDb){$/;"	f	file:
destroyTable	utilities/sqlite3/sqlite3.c	/^static void destroyTable(Parse *pParse, Table *pTab){$/;"	f	file:
detachFunc	utilities/sqlite3/sqlite3.c	/^static void detachFunc($/;"	f	file:
dev	utilities/sqlite3/sqlite3.c	/^  dev_t dev;                  \/* Device number *\/$/;"	m	struct:unixFileId	file:
device	utilities/modbus/modbus-rtu-private.h	/^    char device[64];$/;"	m	struct:_modbus_rtu
dfltLockMode	utilities/sqlite3/sqlite3.c	/^  u8 dfltLockMode;              \/* Default locking-mode for attached dbs *\/$/;"	m	struct:sqlite3	file:
directMode	utilities/sqlite3/sqlite3.c	/^  u8 directMode;          \/* Direct rendering mode means take data directly$/;"	m	struct:AggInfo	file:
disableTerm	utilities/sqlite3/sqlite3.c	/^static void disableTerm(WhereLevel *pLevel, WhereTerm *pTerm){$/;"	f	file:
disableTriggers	utilities/sqlite3/sqlite3.c	/^  u8 disableTriggers;  \/* True to disable triggers *\/$/;"	m	struct:Parse	file:
disable_simulated_io_errors	utilities/sqlite3/sqlite3.c	/^void disable_simulated_io_errors(void){$/;"	f
disable_simulated_io_errors	utilities/sqlite3/sqlite3.c	41098;"	d	file:
disable_simulated_io_errors	utilities/sqlite3/sqlite3.c	8766;"	d	file:
disallow	utilities/sqlite3/sqlite3.c	/^  int disallow; \/* Do not allow memory allocation *\/$/;"	m	struct:__anon18	file:
dispatch_message	src/kernel/message.c	/^int dispatch_message(msg_t pmsg)$/;"	f
displayP4	utilities/sqlite3/sqlite3.c	/^static char *displayP4(Op *pOp, char *zTemp, int nTemp){$/;"	f	file:
doNotSpill	utilities/sqlite3/sqlite3.c	/^  u8 doNotSpill;              \/* Do not spill the cache when non-zero *\/$/;"	m	struct:Pager	file:
doNotSyncSpill	utilities/sqlite3/sqlite3.c	/^  u8 doNotSyncSpill;          \/* Do not do a spill that requires jrnl sync *\/$/;"	m	struct:Pager	file:
doNotUseWAL	utilities/sqlite3/sqlite3.c	/^  u8 doNotUseWAL;       \/* If true, do not open write-ahead-log file *\/$/;"	m	struct:BtShared	file:
doSqlite3Free	utilities/sqlite3/sqlite3.c	/^static void doSqlite3Free(void *p){$/;"	f	file:
doWalCallbacks	utilities/sqlite3/sqlite3.c	/^static int doWalCallbacks(sqlite3 *db){$/;"	f	file:
doclist	utilities/sqlite3/sqlite3.c	/^  Fts3Doclist doclist;$/;"	m	struct:Fts3Phrase	file:
done	utilities/sqlite3/sqlite3.c	/^    u8 done;               \/* A flag to indicate when processing is finished *\/$/;"	m	struct:ExprList::ExprList_item	file:
dotlockCheckReservedLock	utilities/sqlite3/sqlite3.c	/^static int dotlockCheckReservedLock(sqlite3_file *id, int *pResOut) {$/;"	f	file:
dotlockClose	utilities/sqlite3/sqlite3.c	/^static int dotlockClose(sqlite3_file *id) {$/;"	f	file:
dotlockLock	utilities/sqlite3/sqlite3.c	/^static int dotlockLock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
dotlockUnlock	utilities/sqlite3/sqlite3.c	/^static int dotlockUnlock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
double	utilities/sqlite3/sqlite3.c	7243;"	d	file:
double	utilities/sqlite3/sqlite3.c	7584;"	d	file:
double	utilities/sqlite3/sqlite3.c	812;"	d	file:
double	utilities/sqlite3/sqlite3.h	263;"	d
double	utilities/sqlite3/sqlite3.h	6694;"	d
doubleConsonant	utilities/sqlite3/sqlite3.c	/^static int doubleConsonant(const char *z){$/;"	f	file:
doubleToInt64	utilities/sqlite3/sqlite3.c	/^static i64 doubleToInt64(double r){$/;"	f	file:
downgradeAllSharedCacheTableLocks	utilities/sqlite3/sqlite3.c	/^static void downgradeAllSharedCacheTableLocks(Btree *p){$/;"	f	file:
downgradeAllSharedCacheTableLocks	utilities/sqlite3/sqlite3.c	48346;"	d	file:
dropCell	utilities/sqlite3/sqlite3.c	/^static void dropCell(MemPage *pPage, int idx, int sz, int *pRC){$/;"	f	file:
dup8bytes	utilities/sqlite3/sqlite3.c	/^static char *dup8bytes(Vdbe *v, const char *in){$/;"	f	file:
dupedExprNodeSize	utilities/sqlite3/sqlite3.c	/^static int dupedExprNodeSize(Expr *p, int flags){$/;"	f	file:
dupedExprSize	utilities/sqlite3/sqlite3.c	/^static int dupedExprSize(Expr *p, int flags){$/;"	f	file:
dupedExprStructSize	utilities/sqlite3/sqlite3.c	/^static int dupedExprStructSize(Expr *p, int flags){$/;"	f	file:
dw_data	include/def.h	/^	DWORD dw_data;$/;"	m	struct:msgqueue
eCoordType	utilities/sqlite3/sqlite3.c	/^  int eCoordType;$/;"	m	struct:Rtree	file:
eDest	utilities/sqlite3/sqlite3.c	/^  u8 eDest;         \/* How to dispose of the results *\/$/;"	m	struct:SelectDest	file:
eDistinct	utilities/sqlite3/sqlite3.c	/^  u8 eDistinct;$/;"	m	struct:WhereInfo	file:
eEvalmode	utilities/sqlite3/sqlite3.c	/^  int eEvalmode;                  \/* An FTS3_EVAL_XX constant *\/$/;"	m	struct:Fts3Cursor	file:
eFileLock	utilities/sqlite3/sqlite3.c	/^  unsigned char eFileLock;            \/* The type of lock held on this fd *\/$/;"	m	struct:unixFile	file:
eFileLock	utilities/sqlite3/sqlite3.c	/^  unsigned char eFileLock;        \/* One of SHARED_LOCK, RESERVED_LOCK etc. *\/$/;"	m	struct:unixInodeInfo	file:
eLock	utilities/sqlite3/sqlite3.c	/^  u8 eLock;                   \/* Current lock held on database file *\/$/;"	m	struct:Pager	file:
eLock	utilities/sqlite3/sqlite3.c	/^  u8 eLock;             \/* READ_LOCK or WRITE_LOCK *\/$/;"	m	struct:BtLock	file:
eOperator	utilities/sqlite3/sqlite3.c	/^  Token eOperator;  \/* "like" or "glob" or "regexp" *\/$/;"	m	struct:LikeOp	file:
eOperator	utilities/sqlite3/sqlite3.c	/^  u16 eOperator;          \/* A WO_xx value describing <op> *\/$/;"	m	struct:WhereTerm	file:
eOrconf	utilities/sqlite3/sqlite3.c	/^  u8 eOrconf;          \/* Default ON CONFLICT policy for trigger steps *\/$/;"	m	struct:Parse	file:
eSearch	utilities/sqlite3/sqlite3.c	/^  i16 eSearch;                    \/* Search strategy (see below) *\/$/;"	m	struct:Fts3Cursor	file:
eState	utilities/sqlite3/sqlite3.c	/^  u8 eState;                  \/* Pager state (OPEN, READER, WRITER_LOCKED..) *\/$/;"	m	struct:Pager	file:
eState	utilities/sqlite3/sqlite3.c	/^  u8 eState;                \/* One of the CURSOR_XXX constants (see below) *\/$/;"	m	struct:BtCursor	file:
eTriggerOp	utilities/sqlite3/sqlite3.c	/^  u8 eTriggerOp;       \/* TK_UPDATE, TK_INSERT or TK_DELETE *\/$/;"	m	struct:Parse	file:
eType	utilities/sqlite3/sqlite3.c	/^  int eType;                 \/* One of the FTSQUERY_XXX values defined below *\/$/;"	m	struct:Fts3Expr	file:
eType	utilities/sqlite3/sqlite3.c	/^  u8 eType;                           \/* Allocation type code *\/$/;"	m	struct:MemBlockHdr	file:
eType	utilities/sqlite3/sqlite3.c	/^  u8 eType;         \/* SQLITE_NULL, SQLITE_INTEGER ... etc. *\/$/;"	m	struct:IndexSample	file:
ebcdicToAscii	utilities/sqlite3/sqlite3.c	/^const unsigned char ebcdicToAscii[] = {$/;"	v
enable_shared_cache	utilities/sqlite3/sqlite3.c	/^  int  (*enable_shared_cache)(int);$/;"	m	struct:sqlite3_api_routines	file:
enable_simulated_io_errors	utilities/sqlite3/sqlite3.c	/^void enable_simulated_io_errors(void){$/;"	f
enable_simulated_io_errors	utilities/sqlite3/sqlite3.c	41099;"	d	file:
enable_simulated_io_errors	utilities/sqlite3/sqlite3.c	8767;"	d	file:
enc	utilities/sqlite3/sqlite3.c	/^  u8  enc;            \/* SQLITE_UTF8, SQLITE_UTF16BE, SQLITE_UTF16LE *\/$/;"	m	struct:Mem	file:
enc	utilities/sqlite3/sqlite3.c	/^  u8 enc;               \/* Text encoding handled by xCmp() *\/$/;"	m	struct:CollSeq	file:
enc	utilities/sqlite3/sqlite3.c	/^  u8 enc;              \/* Text encoding used by this database *\/$/;"	m	struct:Schema	file:
enc	utilities/sqlite3/sqlite3.c	/^  u8 enc;             \/* Text encoding - one of the SQLITE_UTF* values *\/$/;"	m	struct:KeyInfo	file:
endpoint	utilities/sqlite3/sqlite3.c	/^  FilePoint endpoint;             \/* Pointer to the end of the file *\/$/;"	m	struct:MemJournal	file:
enterMutex	utilities/sqlite3/sqlite3.c	/^static void enterMutex(void){$/;"	f	file:
entry	include/def.h	/^	void *(*entry)(void *);	\/\/\/<线程入口$/;"	m	struct:object_thread
errCode	utilities/sqlite3/sqlite3.c	/^  int errCode;                  \/* Most recent error code (SQLITE_*) *\/$/;"	m	struct:sqlite3	file:
errCode	utilities/sqlite3/sqlite3.c	/^  int errCode;                \/* One of several kinds of errors *\/$/;"	m	struct:Pager	file:
errMask	utilities/sqlite3/sqlite3.c	/^  int errMask;                  \/* & result codes with this before returning *\/$/;"	m	struct:sqlite3	file:
errMsg	utilities/sqlite3/sqlite3.c	/^  StrAccum errMsg;  \/* Accumulate the error message text here *\/$/;"	m	struct:IntegrityCk	file:
errcode	utilities/sqlite3/sqlite3.c	/^  int  (*errcode)(sqlite3*db);$/;"	m	struct:sqlite3_api_routines	file:
errlogFunc	utilities/sqlite3/sqlite3.c	/^static void errlogFunc($/;"	f	file:
errmsg	utilities/sqlite3/sqlite3.c	/^  const char * (*errmsg)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
errmsg16	utilities/sqlite3/sqlite3.c	/^  const void * (*errmsg16)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
errorAction	utilities/sqlite3/sqlite3.c	/^  u8 errorAction;         \/* Recovery action to do in case of an error *\/$/;"	m	struct:Vdbe	file:
error_recovery	utilities/modbus/modbus-private.h	/^    int error_recovery;$/;"	m	struct:_modbus
estLog	utilities/sqlite3/sqlite3.c	/^static double estLog(double N){$/;"	f	file:
estimatedCost	utilities/sqlite3/sqlite3.c	/^  double estimatedCost;      \/* Estimated cost of using this index *\/$/;"	m	struct:sqlite3_index_info	file:
estimatedCost	utilities/sqlite3/sqlite3.h	/^  double estimatedCost;      \/* Estimated cost of using this index *\/$/;"	m	struct:sqlite3_index_info
etBUFSIZE	utilities/sqlite3/sqlite3.c	19071;"	d	file:
etByte	utilities/sqlite3/sqlite3.c	/^typedef unsigned char etByte;$/;"	t	file:
etCHARX	utilities/sqlite3/sqlite3.c	18939;"	d	file:
etDYNSTRING	utilities/sqlite3/sqlite3.c	18937;"	d	file:
etEXP	utilities/sqlite3/sqlite3.c	18933;"	d	file:
etFLOAT	utilities/sqlite3/sqlite3.c	18932;"	d	file:
etGENERIC	utilities/sqlite3/sqlite3.c	18934;"	d	file:
etINVALID	utilities/sqlite3/sqlite3.c	18950;"	d	file:
etORDINAL	utilities/sqlite3/sqlite3.c	18948;"	d	file:
etPERCENT	utilities/sqlite3/sqlite3.c	18938;"	d	file:
etPOINTER	utilities/sqlite3/sqlite3.c	18946;"	d	file:
etRADIX	utilities/sqlite3/sqlite3.c	18931;"	d	file:
etSIZE	utilities/sqlite3/sqlite3.c	18935;"	d	file:
etSQLESCAPE	utilities/sqlite3/sqlite3.c	18941;"	d	file:
etSQLESCAPE2	utilities/sqlite3/sqlite3.c	18942;"	d	file:
etSQLESCAPE3	utilities/sqlite3/sqlite3.c	18947;"	d	file:
etSRCLIST	utilities/sqlite3/sqlite3.c	18945;"	d	file:
etSTRING	utilities/sqlite3/sqlite3.c	18936;"	d	file:
etTOKEN	utilities/sqlite3/sqlite3.c	18944;"	d	file:
et_getdigit	utilities/sqlite3/sqlite3.c	/^static char et_getdigit(LONGDOUBLE_TYPE *val, int *cnt){$/;"	f	file:
et_info	utilities/sqlite3/sqlite3.c	/^typedef struct et_info {   \/* Information about each format field *\/$/;"	s	file:
et_info	utilities/sqlite3/sqlite3.c	/^} et_info;$/;"	t	typeref:struct:et_info	file:
evalConstExpr	utilities/sqlite3/sqlite3.c	/^static int evalConstExpr(Walker *pWalker, Expr *pExpr){$/;"	f	file:
exclMask	utilities/sqlite3/sqlite3.c	/^  u16 exclMask;              \/* Mask of exclusive locks held *\/$/;"	m	struct:unixShm	file:
exclMask	utilities/sqlite3/sqlite3.c	/^  u16 exclMask;              \/* Mask of exclusive locks held *\/$/;"	m	struct:winShm	file:
exclMask	utilities/sqlite3/sqlite3.c	/^  u32 exclMask;              \/* Mask of exclusive locks held *\/$/;"	m	struct:os2ShmLink	file:
exclMask	utilities/sqlite3/sqlite3.c	/^  u8 exclMask;               \/* Mask of exclusive locks held *\/$/;"	m	struct:unixShmNode	file:
exclusiveMode	utilities/sqlite3/sqlite3.c	/^  u8 exclusiveMode;           \/* Boolean. True if locking_mode==EXCLUSIVE *\/$/;"	m	struct:Pager	file:
exclusiveMode	utilities/sqlite3/sqlite3.c	/^  u8 exclusiveMode;          \/* Non-zero if connection is in exclusive mode *\/$/;"	m	struct:Wal	file:
exec	utilities/sqlite3/sqlite3.c	/^  int  (*exec)(sqlite3*,const char*,sqlite3_callback,void*,char**);$/;"	m	struct:sqlite3_api_routines	file:
execExecSql	utilities/sqlite3/sqlite3.c	/^static int execExecSql(sqlite3 *db, char **pzErrMsg, const char *zSql){$/;"	f	file:
execSql	utilities/sqlite3/sqlite3.c	/^static int execSql(sqlite3 *db, char **pzErrMsg, const char *zSql){$/;"	f	file:
expandBlob	utilities/sqlite3/sqlite3.c	57172;"	d	file:
expensive_assert	utilities/sqlite3/sqlite3.c	35211;"	d	file:
expensive_assert	utilities/sqlite3/sqlite3.c	35213;"	d	file:
expired	utilities/sqlite3/sqlite3.c	/^  int  (*expired)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	file:
expired	utilities/sqlite3/sqlite3.c	/^  u8 expired;             \/* True if the VM needs to be recompiled *\/$/;"	m	struct:Vdbe	file:
explain	utilities/sqlite3/sqlite3.c	/^  u8 explain;             \/* True if EXPLAIN present on SQL command *\/$/;"	m	struct:Vdbe	file:
explain	utilities/sqlite3/sqlite3.c	/^  u8 explain;          \/* True if the EXPLAIN flag is found on the query *\/$/;"	m	struct:Parse	file:
explainAppendTerm	utilities/sqlite3/sqlite3.c	/^static void explainAppendTerm($/;"	f	file:
explainComposite	utilities/sqlite3/sqlite3.c	/^static void explainComposite($/;"	f	file:
explainComposite	utilities/sqlite3/sqlite3.c	93209;"	d	file:
explainIndexRange	utilities/sqlite3/sqlite3.c	/^static char *explainIndexRange(sqlite3 *db, WhereLevel *pLevel, Table *pTab){$/;"	f	file:
explainOneScan	utilities/sqlite3/sqlite3.c	/^static void explainOneScan($/;"	f	file:
explainOneScan	utilities/sqlite3/sqlite3.c	104108;"	d	file:
explainSetInteger	utilities/sqlite3/sqlite3.c	93167;"	d	file:
explainSetInteger	utilities/sqlite3/sqlite3.c	93172;"	d	file:
explainSimpleCount	utilities/sqlite3/sqlite3.c	/^static void explainSimpleCount($/;"	f	file:
explainSimpleCount	utilities/sqlite3/sqlite3.c	96014;"	d	file:
explainTempTable	utilities/sqlite3/sqlite3.c	/^static void explainTempTable(Parse *pParse, const char *zUsage){$/;"	f	file:
explainTempTable	utilities/sqlite3/sqlite3.c	93171;"	d	file:
expmask	utilities/sqlite3/sqlite3.c	/^  u32 expmask;            \/* Binding to these vars invalidates VM *\/$/;"	m	struct:Vdbe	file:
exprAnalyze	utilities/sqlite3/sqlite3.c	/^static void exprAnalyze($/;"	f	file:
exprAnalyzeAll	utilities/sqlite3/sqlite3.c	/^static void exprAnalyzeAll($/;"	f	file:
exprAnalyzeOrTerm	utilities/sqlite3/sqlite3.c	/^static void exprAnalyzeOrTerm($/;"	f	file:
exprCodeBetween	utilities/sqlite3/sqlite3.c	/^static void exprCodeBetween($/;"	f	file:
exprCommute	utilities/sqlite3/sqlite3.c	/^static void exprCommute(Parse *pParse, Expr *pExpr){$/;"	f	file:
exprDup	utilities/sqlite3/sqlite3.c	/^static Expr *exprDup(sqlite3 *db, Expr *p, int flags, u8 **pzBuffer){$/;"	f	file:
exprIsConst	utilities/sqlite3/sqlite3.c	/^static int exprIsConst(Expr *p, int initFlag){$/;"	f	file:
exprListTableUsage	utilities/sqlite3/sqlite3.c	/^static Bitmask exprListTableUsage(WhereMaskSet *pMaskSet, ExprList *pList){$/;"	f	file:
exprNodeIsConstant	utilities/sqlite3/sqlite3.c	/^static int exprNodeIsConstant(Walker *pWalker, Expr *pExpr){$/;"	f	file:
exprSelectTableUsage	utilities/sqlite3/sqlite3.c	/^static Bitmask exprSelectTableUsage(WhereMaskSet *pMaskSet, Select *pS){$/;"	f	file:
exprSetHeight	utilities/sqlite3/sqlite3.c	/^static void exprSetHeight(Expr *p){$/;"	f	file:
exprSetHeight	utilities/sqlite3/sqlite3.c	73371;"	d	file:
exprStructSize	utilities/sqlite3/sqlite3.c	/^static int exprStructSize(Expr *p){$/;"	f	file:
exprTableUsage	utilities/sqlite3/sqlite3.c	/^static Bitmask exprTableUsage(WhereMaskSet *pMaskSet, Expr *p){$/;"	f	file:
exprToString	utilities/sqlite3/sqlite3.c	/^static char *exprToString(Fts3Expr *pExpr, char *zBuf){$/;"	f	file:
exprWalkNoop	utilities/sqlite3/sqlite3.c	/^static int exprWalkNoop(Walker *NotUsed, Expr *NotUsed2){$/;"	f	file:
extended_errcode	utilities/sqlite3/sqlite3.c	/^  int (*extended_errcode)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
extended_result_codes	utilities/sqlite3/sqlite3.c	/^  int (*extended_result_codes)(sqlite3*,int);$/;"	m	struct:sqlite3_api_routines	file:
f	include/version.h	23;"	d
f	utilities/sqlite3/sqlite3.c	/^  float f;$/;"	m	union:RtreeCoord	file:
fcntlSizeHint	utilities/sqlite3/sqlite3.c	/^static int fcntlSizeHint(unixFile *pFile, i64 nByte){$/;"	f	file:
fd	include/def.h	/^	int fd;$/;"	m	struct:object_io
fd	utilities/modbus/modbus-rtu-private.h	/^	HANDLE fd;$/;"	m	struct:win32_ser
fd	utilities/sqlite3/sqlite3.c	/^  int fd;                           \/* file desc to assoc this lock with *\/$/;"	m	struct:ByteRangeLockPB2	file:
fd	utilities/sqlite3/sqlite3.c	/^  int fd;                   \/* File descriptor to close *\/$/;"	m	struct:UnixUnusedFd	file:
fd	utilities/sqlite3/sqlite3.c	/^  sqlite3_file *fd;           \/* File descriptor for database *\/$/;"	m	struct:Pager	file:
fdatasync	utilities/sqlite3/sqlite3.c	27730;"	d	file:
fetchPayload	utilities/sqlite3/sqlite3.c	/^static const unsigned char *fetchPayload($/;"	f	file:
fileId	utilities/sqlite3/sqlite3.c	/^  struct unixFileId fileId;       \/* The lookup key *\/$/;"	m	struct:unixInodeInfo	typeref:struct:unixInodeInfo::unixFileId	file:
file_control	utilities/sqlite3/sqlite3.c	/^  int (*file_control)(sqlite3*,const char*,int,void*);$/;"	m	struct:sqlite3_api_routines	file:
file_format	utilities/sqlite3/sqlite3.c	/^  u8 file_format;      \/* Schema format version for this file *\/$/;"	m	struct:Schema	file:
fillInCell	utilities/sqlite3/sqlite3.c	/^static int fillInCell($/;"	f	file:
fillInUnixFile	utilities/sqlite3/sqlite3.c	/^static int fillInUnixFile($/;"	f	file:
filter	utilities/sqlite3/sqlite3.c	/^  Fts3SegFilter filter;$/;"	m	struct:Fts3auxCursor	file:
filter_request	utilities/modbus/modbus-private.h	/^    int (*filter_request) (modbus_t *ctx, int slave);$/;"	m	struct:_modbus_backend
finalize	utilities/sqlite3/sqlite3.c	/^  int  (*finalize)(sqlite3_stmt*pStmt);$/;"	m	struct:sqlite3_api_routines	file:
finalizeAggFunctions	utilities/sqlite3/sqlite3.c	/^static void finalizeAggFunctions(Parse *pParse, AggInfo *pAggInfo){$/;"	f	file:
findBtree	utilities/sqlite3/sqlite3.c	/^static Btree *findBtree(sqlite3 *pErrorDb, sqlite3 *pDb, const char *zDb){$/;"	f	file:
findCell	utilities/sqlite3/sqlite3.c	49116;"	d	file:
findCellv2	utilities/sqlite3/sqlite3.c	49118;"	d	file:
findCollSeqEntry	utilities/sqlite3/sqlite3.c	/^static CollSeq *findCollSeqEntry($/;"	f	file:
findCreateFileMode	utilities/sqlite3/sqlite3.c	/^static int findCreateFileMode($/;"	f	file:
findElementGivenHash	utilities/sqlite3/sqlite3.c	/^static HashElem *findElementGivenHash($/;"	f	file:
findIndexCol	utilities/sqlite3/sqlite3.c	/^static int findIndexCol($/;"	f	file:
findInodeInfo	utilities/sqlite3/sqlite3.c	/^static int findInodeInfo($/;"	f	file:
findLeafNode	utilities/sqlite3/sqlite3.c	/^static int findLeafNode(Rtree *pRtree, i64 iRowid, RtreeNode **ppLeaf){$/;"	f	file:
findNextHostParameter	utilities/sqlite3/sqlite3.c	/^static int findNextHostParameter(const char *zSql, int *pnToken){$/;"	f	file:
findOverflowCell	utilities/sqlite3/sqlite3.c	/^static u8 *findOverflowCell(MemPage *pPage, int iCell){$/;"	f	file:
findReusableFd	utilities/sqlite3/sqlite3.c	/^static UnixUnusedFd *findReusableFd(const char *zPath, int flags){$/;"	f	file:
findTerm	utilities/sqlite3/sqlite3.c	/^static WhereTerm *findTerm($/;"	f	file:
find_thread	src/kernel/message.c	/^HMOD find_thread(const char *name)$/;"	f
finder_type	utilities/sqlite3/sqlite3.c	/^typedef const sqlite3_io_methods *(*finder_type)(const char*,unixFile*);$/;"	t	file:
first	utilities/sqlite3/sqlite3.c	/^  Fts3HashElem *first;    \/* The first element of the array *\/$/;"	m	struct:Fts3Hash	file:
first	utilities/sqlite3/sqlite3.c	/^  HashElem *first;          \/* The first element of the array *\/$/;"	m	struct:Hash	file:
fixBoundingBox	utilities/sqlite3/sqlite3.c	/^static int fixBoundingBox(Rtree *pRtree, RtreeNode *pNode){$/;"	f	file:
fixLeafParent	utilities/sqlite3/sqlite3.c	/^static int fixLeafParent(Rtree *pRtree, RtreeNode *pLeaf){$/;"	f	file:
fkActionTrigger	utilities/sqlite3/sqlite3.c	/^static Trigger *fkActionTrigger($/;"	f	file:
fkLookupParent	utilities/sqlite3/sqlite3.c	/^static void fkLookupParent($/;"	f	file:
fkScanChildren	utilities/sqlite3/sqlite3.c	/^static void fkScanChildren($/;"	f	file:
fkTriggerDelete	utilities/sqlite3/sqlite3.c	/^static void fkTriggerDelete(sqlite3 *dbMem, Trigger *p){$/;"	f	file:
fkeyHash	utilities/sqlite3/sqlite3.c	/^  Hash fkeyHash;       \/* All foreign keys by referenced table name *\/$/;"	m	struct:Schema	file:
flag	include/def.h	/^	int flag;		\/\/\/<对象标志$/;"	m	struct:object
flagPragma	utilities/sqlite3/sqlite3.c	/^static int flagPragma(Parse *pParse, const char *zLeft, const char *zRight){$/;"	f	file:
flags	utilities/sqlite3/sqlite3.c	/^  etByte flags;            \/* One or more of FLAG_ constants below *\/$/;"	m	struct:et_info	file:
flags	utilities/sqlite3/sqlite3.c	/^  int flags;                      \/* xOpen flags *\/$/;"	m	struct:JournalFile	file:
flags	utilities/sqlite3/sqlite3.c	/^  int flags;                    \/* Miscellaneous flags. See below *\/$/;"	m	struct:sqlite3	file:
flags	utilities/sqlite3/sqlite3.c	/^  int flags;                \/* Flags provided to os2Open() *\/$/;"	m	struct:os2File	file:
flags	utilities/sqlite3/sqlite3.c	/^  int flags;                \/* Flags this file descriptor was opened with *\/$/;"	m	struct:UnixUnusedFd	file:
flags	utilities/sqlite3/sqlite3.c	/^  int flags;              \/* Copy of "flags" passed to sqlite3_blob_open() *\/$/;"	m	struct:Incrblob	file:
flags	utilities/sqlite3/sqlite3.c	/^  int flags;$/;"	m	struct:Fts3SegFilter	file:
flags	utilities/sqlite3/sqlite3.c	/^  u16 flags;                     \/* PGHDR flags defined below *\/$/;"	m	struct:PgHdr	file:
flags	utilities/sqlite3/sqlite3.c	/^  u16 flags;             \/* Various flags.  EP_* See below *\/$/;"	m	struct:Expr	file:
flags	utilities/sqlite3/sqlite3.c	/^  u16 flags;           \/* Flags associated with this schema *\/$/;"	m	struct:Schema	file:
flags	utilities/sqlite3/sqlite3.c	/^  u16 flags;          \/* Boolean settings.  UNPACKED_... below *\/$/;"	m	struct:UnpackedRecord	file:
flags	utilities/sqlite3/sqlite3.c	/^  u16 flags;          \/* Some combination of MEM_Null, MEM_Str, MEM_Dyn, etc. *\/$/;"	m	struct:Mem	file:
flags	utilities/sqlite3/sqlite3.c	/^  u8 flags;            \/* Some combination of SQLITE_FUNC_* *\/$/;"	m	struct:FuncDef	file:
flags2	utilities/sqlite3/sqlite3.c	/^  u8 flags2;             \/* Second set of flags.  EP2_... *\/$/;"	m	struct:Expr	file:
flattenSubquery	utilities/sqlite3/sqlite3.c	/^static int flattenSubquery($/;"	f	file:
float	utilities/sqlite3/sqlite3.c	7585;"	d	file:
floatSwap	utilities/sqlite3/sqlite3.c	/^static u64 floatSwap(u64 in){$/;"	f	file:
flockCheckReservedLock	utilities/sqlite3/sqlite3.c	/^static int flockCheckReservedLock(sqlite3_file *id, int *pResOut){$/;"	f	file:
flockClose	utilities/sqlite3/sqlite3.c	/^static int flockClose(sqlite3_file *id) {$/;"	f	file:
flockLock	utilities/sqlite3/sqlite3.c	/^static int flockLock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
flockUnlock	utilities/sqlite3/sqlite3.c	/^static int flockUnlock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
flush	utilities/modbus/modbus-private.h	/^    int (*flush) (modbus_t *ctx);$/;"	m	struct:_modbus_backend
fmtinfo	utilities/sqlite3/sqlite3.c	/^static const et_info fmtinfo[] = {$/;"	v	file:
fmttype	utilities/sqlite3/sqlite3.c	/^  char fmttype;            \/* The format field code letter *\/$/;"	m	struct:et_info	file:
free	utilities/sqlite3/sqlite3.c	/^  void  (*free)(void*);$/;"	m	struct:sqlite3_api_routines	file:
freeCursorConstraints	utilities/sqlite3/sqlite3.c	/^static void freeCursorConstraints(RtreeCursor *pCsr){$/;"	f	file:
freeEphemeralFunction	utilities/sqlite3/sqlite3.c	/^static void freeEphemeralFunction(sqlite3 *db, FuncDef *pDef){$/;"	f	file:
freeIndex	utilities/sqlite3/sqlite3.c	/^static void freeIndex(sqlite3 *db, Index *p){$/;"	f	file:
freeListIfEmpty	utilities/sqlite3/sqlite3.c	/^static void freeListIfEmpty(PGroup *pGroup, PGroupBlockList *pList){$/;"	f	file:
freeP4	utilities/sqlite3/sqlite3.c	/^static void freeP4(sqlite3 *db, int p4type, void *p4){$/;"	f	file:
freePage	utilities/sqlite3/sqlite3.c	/^static void freePage(MemPage *pPage, int *pRC){$/;"	f	file:
freePage2	utilities/sqlite3/sqlite3.c	/^static int freePage2(BtShared *pBt, MemPage *pMemPage, Pgno iPage){$/;"	f	file:
freeSpace	utilities/sqlite3/sqlite3.c	/^static int freeSpace(MemPage *pPage, int start, int size){$/;"	f	file:
freeTempSpace	utilities/sqlite3/sqlite3.c	/^static void freeTempSpace(BtShared *pBt){$/;"	f	file:
freeUconvObjects	utilities/sqlite3/sqlite3.c	/^static void freeUconvObjects( void ){$/;"	f	file:
free_table	utilities/sqlite3/sqlite3.c	/^  void  (*free_table)(char**result);$/;"	m	struct:sqlite3_api_routines	file:
fsFlags	utilities/sqlite3/sqlite3.c	/^  unsigned fsFlags;                   \/* cached details from statfs() *\/$/;"	m	struct:unixFile	file:
fts3AllocateSegdirIdx	utilities/sqlite3/sqlite3.c	/^static int fts3AllocateSegdirIdx($/;"	f	file:
fts3Appendf	utilities/sqlite3/sqlite3.c	/^static void fts3Appendf($/;"	f	file:
fts3BeginMethod	utilities/sqlite3/sqlite3.c	/^static int fts3BeginMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts3BestIndexMethod	utilities/sqlite3/sqlite3.c	/^static int fts3BestIndexMethod(sqlite3_vtab *pVTab, sqlite3_index_info *pInfo){$/;"	f	file:
fts3BestSnippet	utilities/sqlite3/sqlite3.c	/^static int fts3BestSnippet($/;"	f	file:
fts3BinCompare	utilities/sqlite3/sqlite3.c	/^static int fts3BinCompare(const void *pKey1, int n1, const void *pKey2, int n2){$/;"	f	file:
fts3BinHash	utilities/sqlite3/sqlite3.c	/^static int fts3BinHash(const void *pKey, int nKey){$/;"	f	file:
fts3CloseMethod	utilities/sqlite3/sqlite3.c	/^static int fts3CloseMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3ColumnFilter	utilities/sqlite3/sqlite3.c	/^static void fts3ColumnFilter($/;"	f	file:
fts3ColumnMethod	utilities/sqlite3/sqlite3.c	/^static int fts3ColumnMethod($/;"	f	file:
fts3ColumnlistCopy	utilities/sqlite3/sqlite3.c	/^static void fts3ColumnlistCopy(char **pp, char **ppPoslist){$/;"	f	file:
fts3ColumnlistCount	utilities/sqlite3/sqlite3.c	/^static int fts3ColumnlistCount(char **ppCollist){$/;"	f	file:
fts3CommitMethod	utilities/sqlite3/sqlite3.c	/^static int fts3CommitMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts3CompareElemByTerm	utilities/sqlite3/sqlite3.c	/^static int fts3CompareElemByTerm(const void *lhs, const void *rhs){$/;"	f	file:
fts3ConnectMethod	utilities/sqlite3/sqlite3.c	/^static int fts3ConnectMethod($/;"	f	file:
fts3CreateMethod	utilities/sqlite3/sqlite3.c	/^static int fts3CreateMethod($/;"	f	file:
fts3CreateTables	utilities/sqlite3/sqlite3.c	/^static int fts3CreateTables(Fts3Table *p){$/;"	f	file:
fts3CursorSeek	utilities/sqlite3/sqlite3.c	/^static int fts3CursorSeek(sqlite3_context *pContext, Fts3Cursor *pCsr){$/;"	f	file:
fts3DatabasePageSize	utilities/sqlite3/sqlite3.c	/^static void fts3DatabasePageSize(int *pRc, Fts3Table *p){$/;"	f	file:
fts3DbExec	utilities/sqlite3/sqlite3.c	/^static void fts3DbExec($/;"	f	file:
fts3DeclareVtab	utilities/sqlite3/sqlite3.c	/^static void fts3DeclareVtab(int *pRc, Fts3Table *p){$/;"	f	file:
fts3DecodeIntArray	utilities/sqlite3/sqlite3.c	/^static void fts3DecodeIntArray($/;"	f	file:
fts3DeleteAll	utilities/sqlite3/sqlite3.c	/^static int fts3DeleteAll(Fts3Table *p){$/;"	f	file:
fts3DeleteByRowid	utilities/sqlite3/sqlite3.c	/^static int fts3DeleteByRowid($/;"	f	file:
fts3DeleteSegdir	utilities/sqlite3/sqlite3.c	/^static int fts3DeleteSegdir($/;"	f	file:
fts3DeleteTerms	utilities/sqlite3/sqlite3.c	/^static void fts3DeleteTerms( $/;"	f	file:
fts3DestroyMethod	utilities/sqlite3/sqlite3.c	/^static int fts3DestroyMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts3DisconnectMethod	utilities/sqlite3/sqlite3.c	/^static int fts3DisconnectMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts3DoOptimize	utilities/sqlite3/sqlite3.c	/^static int fts3DoOptimize(Fts3Table *p, int bReturnDone){$/;"	f	file:
fts3DoclistCountDocids	utilities/sqlite3/sqlite3.c	/^static int fts3DoclistCountDocids(char *aList, int nList){$/;"	f	file:
fts3DoclistOrMerge	utilities/sqlite3/sqlite3.c	/^static int fts3DoclistOrMerge($/;"	f	file:
fts3DoclistPhraseMerge	utilities/sqlite3/sqlite3.c	/^static void fts3DoclistPhraseMerge($/;"	f	file:
fts3EncodeIntArray	utilities/sqlite3/sqlite3.c	/^static void fts3EncodeIntArray($/;"	f	file:
fts3EofMethod	utilities/sqlite3/sqlite3.c	/^static int fts3EofMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3EvalAllocateReaders	utilities/sqlite3/sqlite3.c	/^static void fts3EvalAllocateReaders($/;"	f	file:
fts3EvalAverageDocsize	utilities/sqlite3/sqlite3.c	/^static int fts3EvalAverageDocsize(Fts3Cursor *pCsr, int *pnPage){$/;"	f	file:
fts3EvalDeferredPhrase	utilities/sqlite3/sqlite3.c	/^static int fts3EvalDeferredPhrase(Fts3Cursor *pCsr, Fts3Phrase *pPhrase){$/;"	f	file:
fts3EvalGatherStats	utilities/sqlite3/sqlite3.c	/^static int fts3EvalGatherStats($/;"	f	file:
fts3EvalInvalidatePoslist	utilities/sqlite3/sqlite3.c	/^static void fts3EvalInvalidatePoslist(Fts3Phrase *pPhrase){$/;"	f	file:
fts3EvalNearTest	utilities/sqlite3/sqlite3.c	/^static int fts3EvalNearTest(Fts3Expr *pExpr, int *pRc){$/;"	f	file:
fts3EvalNearTrim	utilities/sqlite3/sqlite3.c	/^static int fts3EvalNearTrim($/;"	f	file:
fts3EvalNext	utilities/sqlite3/sqlite3.c	/^static int fts3EvalNext(Fts3Cursor *pCsr){$/;"	f	file:
fts3EvalNextRow	utilities/sqlite3/sqlite3.c	/^static void fts3EvalNextRow($/;"	f	file:
fts3EvalPhraseLoad	utilities/sqlite3/sqlite3.c	/^static int fts3EvalPhraseLoad($/;"	f	file:
fts3EvalPhraseMergeToken	utilities/sqlite3/sqlite3.c	/^static void fts3EvalPhraseMergeToken($/;"	f	file:
fts3EvalPhraseNext	utilities/sqlite3/sqlite3.c	/^static int fts3EvalPhraseNext($/;"	f	file:
fts3EvalPhraseStart	utilities/sqlite3/sqlite3.c	/^static int fts3EvalPhraseStart(Fts3Cursor *pCsr, int bOptOk, Fts3Phrase *p){$/;"	f	file:
fts3EvalRestart	utilities/sqlite3/sqlite3.c	/^static void fts3EvalRestart($/;"	f	file:
fts3EvalSelectDeferred	utilities/sqlite3/sqlite3.c	/^static int fts3EvalSelectDeferred($/;"	f	file:
fts3EvalStart	utilities/sqlite3/sqlite3.c	/^static int fts3EvalStart(Fts3Cursor *pCsr){$/;"	f	file:
fts3EvalStartReaders	utilities/sqlite3/sqlite3.c	/^static void fts3EvalStartReaders($/;"	f	file:
fts3EvalTestDeferredAndNear	utilities/sqlite3/sqlite3.c	/^static int fts3EvalTestDeferredAndNear(Fts3Cursor *pCsr, int *pRc){$/;"	f	file:
fts3EvalTestExpr	utilities/sqlite3/sqlite3.c	/^static int fts3EvalTestExpr($/;"	f	file:
fts3EvalTokenCosts	utilities/sqlite3/sqlite3.c	/^static void fts3EvalTokenCosts($/;"	f	file:
fts3EvalUpdateCounts	utilities/sqlite3/sqlite3.c	/^static void fts3EvalUpdateCounts(Fts3Expr *pExpr){$/;"	f	file:
fts3ExprGlobalHitsCb	utilities/sqlite3/sqlite3.c	/^static int fts3ExprGlobalHitsCb($/;"	f	file:
fts3ExprIterate	utilities/sqlite3/sqlite3.c	/^static int fts3ExprIterate($/;"	f	file:
fts3ExprIterate2	utilities/sqlite3/sqlite3.c	/^static int fts3ExprIterate2($/;"	f	file:
fts3ExprLoadDoclists	utilities/sqlite3/sqlite3.c	/^static int fts3ExprLoadDoclists($/;"	f	file:
fts3ExprLoadDoclistsCb	utilities/sqlite3/sqlite3.c	/^static int fts3ExprLoadDoclistsCb(Fts3Expr *pExpr, int iPhrase, void *ctx){$/;"	f	file:
fts3ExprLocalHitsCb	utilities/sqlite3/sqlite3.c	/^static int fts3ExprLocalHitsCb($/;"	f	file:
fts3ExprParse	utilities/sqlite3/sqlite3.c	/^static int fts3ExprParse($/;"	f	file:
fts3ExprPhraseCount	utilities/sqlite3/sqlite3.c	/^static int fts3ExprPhraseCount(Fts3Expr *pExpr){$/;"	f	file:
fts3ExprPhraseCountCb	utilities/sqlite3/sqlite3.c	/^static int fts3ExprPhraseCountCb(Fts3Expr *pExpr, int iPhrase, void *ctx){$/;"	f	file:
fts3ExprTermOffsetInit	utilities/sqlite3/sqlite3.c	/^static int fts3ExprTermOffsetInit(Fts3Expr *pExpr, int iPhrase, void *ctx){$/;"	f	file:
fts3ExprTest	utilities/sqlite3/sqlite3.c	/^static void fts3ExprTest($/;"	f	file:
fts3FilterMethod	utilities/sqlite3/sqlite3.c	/^static int fts3FilterMethod($/;"	f	file:
fts3FindElementByHash	utilities/sqlite3/sqlite3.c	/^static Fts3HashElem *fts3FindElementByHash($/;"	f	file:
fts3FindFunctionMethod	utilities/sqlite3/sqlite3.c	/^static int fts3FindFunctionMethod($/;"	f	file:
fts3FunctionArg	utilities/sqlite3/sqlite3.c	/^static int fts3FunctionArg($/;"	f	file:
fts3GetDeltaPosition	utilities/sqlite3/sqlite3.c	/^static void fts3GetDeltaPosition(char **pp, int *piPos){$/;"	f	file:
fts3GetDeltaVarint	utilities/sqlite3/sqlite3.c	/^static void fts3GetDeltaVarint(char **pp, sqlite3_int64 *pVal){$/;"	f	file:
fts3GetDeltaVarint3	utilities/sqlite3/sqlite3.c	/^static void fts3GetDeltaVarint3($/;"	f	file:
fts3GetMatchinfo	utilities/sqlite3/sqlite3.c	/^static int fts3GetMatchinfo($/;"	f	file:
fts3GetReverseVarint	utilities/sqlite3/sqlite3.c	/^static void fts3GetReverseVarint($/;"	f	file:
fts3GobbleInt	utilities/sqlite3/sqlite3.c	/^static int fts3GobbleInt(const char **pp, int *pnOut){$/;"	f	file:
fts3HashClear	utilities/sqlite3/sqlite3.c	114005;"	d	file:
fts3HashCount	utilities/sqlite3/sqlite3.c	114029;"	d	file:
fts3HashData	utilities/sqlite3/sqlite3.c	114022;"	d	file:
fts3HashFind	utilities/sqlite3/sqlite3.c	114004;"	d	file:
fts3HashFindElem	utilities/sqlite3/sqlite3.c	114006;"	d	file:
fts3HashFirst	utilities/sqlite3/sqlite3.c	114020;"	d	file:
fts3HashFree	utilities/sqlite3/sqlite3.c	/^static void fts3HashFree(void *p){$/;"	f	file:
fts3HashInit	utilities/sqlite3/sqlite3.c	114002;"	d	file:
fts3HashInsert	utilities/sqlite3/sqlite3.c	114003;"	d	file:
fts3HashInsertElement	utilities/sqlite3/sqlite3.c	/^static void fts3HashInsertElement($/;"	f	file:
fts3HashKey	utilities/sqlite3/sqlite3.c	114023;"	d	file:
fts3HashKeysize	utilities/sqlite3/sqlite3.c	114024;"	d	file:
fts3HashMalloc	utilities/sqlite3/sqlite3.c	/^static void *fts3HashMalloc(int n){$/;"	f	file:
fts3HashNext	utilities/sqlite3/sqlite3.c	114021;"	d	file:
fts3InitVtab	utilities/sqlite3/sqlite3.c	/^static int fts3InitVtab($/;"	f	file:
fts3InsertData	utilities/sqlite3/sqlite3.c	/^static int fts3InsertData($/;"	f	file:
fts3InsertDocsize	utilities/sqlite3/sqlite3.c	/^static void fts3InsertDocsize($/;"	f	file:
fts3InsertTerms	utilities/sqlite3/sqlite3.c	/^static int fts3InsertTerms(Fts3Table *p, sqlite3_value **apVal, u32 *aSz){$/;"	f	file:
fts3IsEmpty	utilities/sqlite3/sqlite3.c	/^static int fts3IsEmpty(Fts3Table *p, sqlite3_value *pRowid, int *pisEmpty){$/;"	f	file:
fts3IsSpecialColumn	utilities/sqlite3/sqlite3.c	/^static int fts3IsSpecialColumn($/;"	f	file:
fts3LcsIteratorAdvance	utilities/sqlite3/sqlite3.c	/^static int fts3LcsIteratorAdvance(LcsIterator *pIter){$/;"	f	file:
fts3MallocZero	utilities/sqlite3/sqlite3.c	/^static void *fts3MallocZero(int nByte){$/;"	f	file:
fts3MatchinfoCheck	utilities/sqlite3/sqlite3.c	/^static int fts3MatchinfoCheck($/;"	f	file:
fts3MatchinfoFunc	utilities/sqlite3/sqlite3.c	/^static void fts3MatchinfoFunc($/;"	f	file:
fts3MatchinfoLcs	utilities/sqlite3/sqlite3.c	/^static int fts3MatchinfoLcs(Fts3Cursor *pCsr, MatchInfo *pInfo){$/;"	f	file:
fts3MatchinfoLcsCb	utilities/sqlite3/sqlite3.c	/^static int fts3MatchinfoLcsCb($/;"	f	file:
fts3MatchinfoSelectDoctotal	utilities/sqlite3/sqlite3.c	/^static int fts3MatchinfoSelectDoctotal($/;"	f	file:
fts3MatchinfoSize	utilities/sqlite3/sqlite3.c	/^static int fts3MatchinfoSize(MatchInfo *pInfo, char cArg){$/;"	f	file:
fts3MatchinfoValues	utilities/sqlite3/sqlite3.c	/^static int fts3MatchinfoValues($/;"	f	file:
fts3Module	utilities/sqlite3/sqlite3.c	/^static const sqlite3_module fts3Module = {$/;"	v	file:
fts3MsrBufferData	utilities/sqlite3/sqlite3.c	/^static int fts3MsrBufferData($/;"	f	file:
fts3NextMethod	utilities/sqlite3/sqlite3.c	/^static int fts3NextMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3NodeAddTerm	utilities/sqlite3/sqlite3.c	/^static int fts3NodeAddTerm($/;"	f	file:
fts3NodeFree	utilities/sqlite3/sqlite3.c	/^static void fts3NodeFree(SegmentNode *pTree){$/;"	f	file:
fts3NodeWrite	utilities/sqlite3/sqlite3.c	/^static int fts3NodeWrite($/;"	f	file:
fts3OffsetsFunc	utilities/sqlite3/sqlite3.c	/^static void fts3OffsetsFunc($/;"	f	file:
fts3OpenMethod	utilities/sqlite3/sqlite3.c	/^static int fts3OpenMethod(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCsr){$/;"	f	file:
fts3OptimizeFunc	utilities/sqlite3/sqlite3.c	/^static void fts3OptimizeFunc($/;"	f	file:
fts3PendingListAppend	utilities/sqlite3/sqlite3.c	/^static int fts3PendingListAppend($/;"	f	file:
fts3PendingListAppendVarint	utilities/sqlite3/sqlite3.c	/^static int fts3PendingListAppendVarint($/;"	f	file:
fts3PendingListDelete	utilities/sqlite3/sqlite3.c	/^static void fts3PendingListDelete(PendingList *pList){$/;"	f	file:
fts3PendingTermsAdd	utilities/sqlite3/sqlite3.c	/^static int fts3PendingTermsAdd($/;"	f	file:
fts3PendingTermsAddOne	utilities/sqlite3/sqlite3.c	/^static int fts3PendingTermsAddOne($/;"	f	file:
fts3PendingTermsDocid	utilities/sqlite3/sqlite3.c	/^static int fts3PendingTermsDocid(Fts3Table *p, sqlite_int64 iDocid){$/;"	f	file:
fts3PoslistCopy	utilities/sqlite3/sqlite3.c	/^static void fts3PoslistCopy(char **pp, char **ppPoslist){$/;"	f	file:
fts3PoslistMerge	utilities/sqlite3/sqlite3.c	/^static void fts3PoslistMerge($/;"	f	file:
fts3PoslistNearMerge	utilities/sqlite3/sqlite3.c	/^static int fts3PoslistNearMerge($/;"	f	file:
fts3PoslistPhraseMerge	utilities/sqlite3/sqlite3.c	/^static int fts3PoslistPhraseMerge($/;"	f	file:
fts3PrefixCompress	utilities/sqlite3/sqlite3.c	/^static int fts3PrefixCompress($/;"	f	file:
fts3PrefixParameter	utilities/sqlite3/sqlite3.c	/^static int fts3PrefixParameter($/;"	f	file:
fts3PutColNumber	utilities/sqlite3/sqlite3.c	/^static int fts3PutColNumber(char **pp, int iCol){$/;"	f	file:
fts3PutDeltaVarint	utilities/sqlite3/sqlite3.c	/^static void fts3PutDeltaVarint($/;"	f	file:
fts3PutDeltaVarint3	utilities/sqlite3/sqlite3.c	/^static void fts3PutDeltaVarint3($/;"	f	file:
fts3QuoteId	utilities/sqlite3/sqlite3.c	/^static char *fts3QuoteId(char const *zInput){$/;"	f	file:
fts3ReadExprList	utilities/sqlite3/sqlite3.c	/^static char *fts3ReadExprList(Fts3Table *p, const char *zFunc, int *pRc){$/;"	f	file:
fts3ReadNextPos	utilities/sqlite3/sqlite3.c	/^static void fts3ReadNextPos($/;"	f	file:
fts3ReallocOrFree	utilities/sqlite3/sqlite3.c	/^static void *fts3ReallocOrFree(void *pOrig, int nNew){$/;"	f	file:
fts3Rehash	utilities/sqlite3/sqlite3.c	/^static int fts3Rehash(Fts3Hash *pH, int new_size){$/;"	f	file:
fts3ReleaseMethod	utilities/sqlite3/sqlite3.c	/^static int fts3ReleaseMethod(sqlite3_vtab *pVtab, int iSavepoint){$/;"	f	file:
fts3RemoveElementByHash	utilities/sqlite3/sqlite3.c	/^static void fts3RemoveElementByHash($/;"	f	file:
fts3RenameMethod	utilities/sqlite3/sqlite3.c	/^static int fts3RenameMethod($/;"	f	file:
fts3ReversePoslist	utilities/sqlite3/sqlite3.c	/^static void fts3ReversePoslist(char *pStart, char **ppPoslist){$/;"	f	file:
fts3RollbackMethod	utilities/sqlite3/sqlite3.c	/^static int fts3RollbackMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts3RollbackToMethod	utilities/sqlite3/sqlite3.c	/^static int fts3RollbackToMethod(sqlite3_vtab *pVtab, int iSavepoint){$/;"	f	file:
fts3RowidMethod	utilities/sqlite3/sqlite3.c	/^static int fts3RowidMethod(sqlite3_vtab_cursor *pCursor, sqlite_int64 *pRowid){$/;"	f	file:
fts3SavepointMethod	utilities/sqlite3/sqlite3.c	/^static int fts3SavepointMethod(sqlite3_vtab *pVtab, int iSavepoint){$/;"	f	file:
fts3ScanInteriorNode	utilities/sqlite3/sqlite3.c	/^static int fts3ScanInteriorNode($/;"	f	file:
fts3SegReaderCmp	utilities/sqlite3/sqlite3.c	/^static int fts3SegReaderCmp(Fts3SegReader *pLhs, Fts3SegReader *pRhs){$/;"	f	file:
fts3SegReaderCursor	utilities/sqlite3/sqlite3.c	/^static int fts3SegReaderCursor($/;"	f	file:
fts3SegReaderCursorAddZero	utilities/sqlite3/sqlite3.c	/^static int fts3SegReaderCursorAddZero($/;"	f	file:
fts3SegReaderCursorAppend	utilities/sqlite3/sqlite3.c	/^static int fts3SegReaderCursorAppend($/;"	f	file:
fts3SegReaderCursorFree	utilities/sqlite3/sqlite3.c	/^static void fts3SegReaderCursorFree(Fts3MultiSegReader *pSegcsr){$/;"	f	file:
fts3SegReaderDoclistCmp	utilities/sqlite3/sqlite3.c	/^static int fts3SegReaderDoclistCmp(Fts3SegReader *pLhs, Fts3SegReader *pRhs){$/;"	f	file:
fts3SegReaderDoclistCmpRev	utilities/sqlite3/sqlite3.c	/^static int fts3SegReaderDoclistCmpRev(Fts3SegReader *pLhs, Fts3SegReader *pRhs){$/;"	f	file:
fts3SegReaderFirstDocid	utilities/sqlite3/sqlite3.c	/^static int fts3SegReaderFirstDocid(Fts3Table *pTab, Fts3SegReader *pReader){$/;"	f	file:
fts3SegReaderIncrRead	utilities/sqlite3/sqlite3.c	/^static int fts3SegReaderIncrRead(Fts3SegReader *pReader){$/;"	f	file:
fts3SegReaderIsPending	utilities/sqlite3/sqlite3.c	122400;"	d	file:
fts3SegReaderIsRootOnly	utilities/sqlite3/sqlite3.c	122401;"	d	file:
fts3SegReaderNext	utilities/sqlite3/sqlite3.c	/^static int fts3SegReaderNext($/;"	f	file:
fts3SegReaderNextDocid	utilities/sqlite3/sqlite3.c	/^static int fts3SegReaderNextDocid($/;"	f	file:
fts3SegReaderRequire	utilities/sqlite3/sqlite3.c	/^static int fts3SegReaderRequire(Fts3SegReader *pReader, char *pFrom, int nByte){$/;"	f	file:
fts3SegReaderSort	utilities/sqlite3/sqlite3.c	/^static void fts3SegReaderSort($/;"	f	file:
fts3SegReaderStart	utilities/sqlite3/sqlite3.c	/^static int fts3SegReaderStart($/;"	f	file:
fts3SegReaderTermCmp	utilities/sqlite3/sqlite3.c	/^static int fts3SegReaderTermCmp($/;"	f	file:
fts3SegWriterAdd	utilities/sqlite3/sqlite3.c	/^static int fts3SegWriterAdd($/;"	f	file:
fts3SegWriterFlush	utilities/sqlite3/sqlite3.c	/^static int fts3SegWriterFlush($/;"	f	file:
fts3SegWriterFree	utilities/sqlite3/sqlite3.c	/^static void fts3SegWriterFree(SegmentWriter *pWriter){$/;"	f	file:
fts3SegmentMaxLevel	utilities/sqlite3/sqlite3.c	/^static int fts3SegmentMaxLevel(Fts3Table *p, int iIndex, int *pnMax){$/;"	f	file:
fts3SegmentMerge	utilities/sqlite3/sqlite3.c	/^static int fts3SegmentMerge(Fts3Table *p, int iIndex, int iLevel){$/;"	f	file:
fts3SelectDocsize	utilities/sqlite3/sqlite3.c	/^static int fts3SelectDocsize($/;"	f	file:
fts3SelectLeaf	utilities/sqlite3/sqlite3.c	/^static int fts3SelectLeaf($/;"	f	file:
fts3SnippetAdvance	utilities/sqlite3/sqlite3.c	/^static void fts3SnippetAdvance(char **ppIter, int *piIter, int iNext){$/;"	f	file:
fts3SnippetDetails	utilities/sqlite3/sqlite3.c	/^static void fts3SnippetDetails($/;"	f	file:
fts3SnippetFindPositions	utilities/sqlite3/sqlite3.c	/^static int fts3SnippetFindPositions(Fts3Expr *pExpr, int iPhrase, void *ctx){$/;"	f	file:
fts3SnippetFunc	utilities/sqlite3/sqlite3.c	/^static void fts3SnippetFunc($/;"	f	file:
fts3SnippetNextCandidate	utilities/sqlite3/sqlite3.c	/^static int fts3SnippetNextCandidate(SnippetIter *pIter){$/;"	f	file:
fts3SnippetShift	utilities/sqlite3/sqlite3.c	/^static int fts3SnippetShift($/;"	f	file:
fts3SnippetText	utilities/sqlite3/sqlite3.c	/^static int fts3SnippetText($/;"	f	file:
fts3SpecialInsert	utilities/sqlite3/sqlite3.c	/^static int fts3SpecialInsert(Fts3Table *p, sqlite3_value *pVal){$/;"	f	file:
fts3SqlExec	utilities/sqlite3/sqlite3.c	/^static void fts3SqlExec($/;"	f	file:
fts3SqlStmt	utilities/sqlite3/sqlite3.c	/^static int fts3SqlStmt($/;"	f	file:
fts3StrCompare	utilities/sqlite3/sqlite3.c	/^static int fts3StrCompare(const void *pKey1, int n1, const void *pKey2, int n2){$/;"	f	file:
fts3StrHash	utilities/sqlite3/sqlite3.c	/^static int fts3StrHash(const void *pKey, int nKey){$/;"	f	file:
fts3StringAppend	utilities/sqlite3/sqlite3.c	/^static int fts3StringAppend($/;"	f	file:
fts3SyncMethod	utilities/sqlite3/sqlite3.c	/^static int fts3SyncMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts3TermSegReaderCursor	utilities/sqlite3/sqlite3.c	/^static int fts3TermSegReaderCursor($/;"	f	file:
fts3TermSelect	utilities/sqlite3/sqlite3.c	/^static int fts3TermSelect($/;"	f	file:
fts3TermSelectFinishMerge	utilities/sqlite3/sqlite3.c	/^static int fts3TermSelectFinishMerge(Fts3Table *p, TermSelect *pTS){$/;"	f	file:
fts3TermSelectMerge	utilities/sqlite3/sqlite3.c	/^static int fts3TermSelectMerge($/;"	f	file:
fts3TreeFinishNode	utilities/sqlite3/sqlite3.c	/^static int fts3TreeFinishNode($/;"	f	file:
fts3UpdateDocTotals	utilities/sqlite3/sqlite3.c	/^static void fts3UpdateDocTotals($/;"	f	file:
fts3UpdateMethod	utilities/sqlite3/sqlite3.c	/^static int fts3UpdateMethod($/;"	f	file:
fts3WriteExprList	utilities/sqlite3/sqlite3.c	/^static char *fts3WriteExprList(Fts3Table *p, const char *zFunc, int *pRc){$/;"	f	file:
fts3WriteSegdir	utilities/sqlite3/sqlite3.c	/^static int fts3WriteSegdir($/;"	f	file:
fts3WriteSegment	utilities/sqlite3/sqlite3.c	/^static int fts3WriteSegment($/;"	f	file:
fts3_isalnum	utilities/sqlite3/sqlite3.c	/^static int fts3_isalnum(int x){$/;"	f	file:
fts3auxBestIndexMethod	utilities/sqlite3/sqlite3.c	/^static int fts3auxBestIndexMethod($/;"	f	file:
fts3auxCloseMethod	utilities/sqlite3/sqlite3.c	/^static int fts3auxCloseMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3auxColumnMethod	utilities/sqlite3/sqlite3.c	/^static int fts3auxColumnMethod($/;"	f	file:
fts3auxConnectMethod	utilities/sqlite3/sqlite3.c	/^static int fts3auxConnectMethod($/;"	f	file:
fts3auxDisconnectMethod	utilities/sqlite3/sqlite3.c	/^static int fts3auxDisconnectMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts3auxEofMethod	utilities/sqlite3/sqlite3.c	/^static int fts3auxEofMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3auxFilterMethod	utilities/sqlite3/sqlite3.c	/^static int fts3auxFilterMethod($/;"	f	file:
fts3auxGrowStatArray	utilities/sqlite3/sqlite3.c	/^static int fts3auxGrowStatArray(Fts3auxCursor *pCsr, int nSize){$/;"	f	file:
fts3auxNextMethod	utilities/sqlite3/sqlite3.c	/^static int fts3auxNextMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3auxOpenMethod	utilities/sqlite3/sqlite3.c	/^static int fts3auxOpenMethod(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCsr){$/;"	f	file:
fts3auxRowidMethod	utilities/sqlite3/sqlite3.c	/^static int fts3auxRowidMethod($/;"	f	file:
fts3isspace	utilities/sqlite3/sqlite3.c	/^static int fts3isspace(char c){$/;"	f	file:
ftsCompareFunction	utilities/sqlite3/sqlite3.c	/^static int (*ftsCompareFunction(int keyClass))(const void*,int,const void*,int){$/;"	f	file:
ftsHashFunction	utilities/sqlite3/sqlite3.c	/^static int (*ftsHashFunction(int keyClass))(const void*,int){$/;"	f	file:
fullSync	utilities/sqlite3/sqlite3.c	/^  u8 fullSync;                \/* Do extra syncs of the journal for robustness *\/$/;"	m	struct:Pager	file:
full_fsync	utilities/sqlite3/sqlite3.c	/^static int full_fsync(int fd, int fullSync, int dataOnly){$/;"	f	file:
function	utilities/modbus/modbus-private.h	/^    int function;$/;"	m	struct:_sft
functionDestroy	utilities/sqlite3/sqlite3.c	/^static void functionDestroy(sqlite3 *db, FuncDef *p){$/;"	f	file:
functionSearch	utilities/sqlite3/sqlite3.c	/^static FuncDef *functionSearch($/;"	f	file:
g_elapsed	utilities/sqlite3/sqlite3.c	/^static sqlite_uint64 g_elapsed;$/;"	v	file:
g_start	utilities/sqlite3/sqlite3.c	/^static sqlite_uint64 g_start;$/;"	v	file:
gbk_2_utf8	utilities/common/iconv.c	/^int gbk_2_utf8(char *inbuf, size_t inlen, char *outbuf, size_t outlen)$/;"	f
generateColumnNames	utilities/sqlite3/sqlite3.c	/^static void generateColumnNames($/;"	f	file:
generateColumnTypes	utilities/sqlite3/sqlite3.c	/^static void generateColumnTypes($/;"	f	file:
generateOutputSubroutine	utilities/sqlite3/sqlite3.c	/^static int generateOutputSubroutine($/;"	f	file:
generateSortTail	utilities/sqlite3/sqlite3.c	/^static void generateSortTail($/;"	f	file:
geomCallback	utilities/sqlite3/sqlite3.c	/^static void geomCallback(sqlite3_context *ctx, int nArg, sqlite3_value **aArg){$/;"	f	file:
get2byte	utilities/sqlite3/sqlite3.c	47978;"	d	file:
get2byteNotZero	utilities/sqlite3/sqlite3.c	48299;"	d	file:
get4byte	utilities/sqlite3/sqlite3.c	47980;"	d	file:
getAndInitPage	utilities/sqlite3/sqlite3.c	/^static int getAndInitPage($/;"	f	file:
getAutoVacuum	utilities/sqlite3/sqlite3.c	/^static int getAutoVacuum(const char *z){$/;"	f	file:
getCellInfo	utilities/sqlite3/sqlite3.c	/^  static void getCellInfo(BtCursor *pCur){$/;"	f	file:
getCellInfo	utilities/sqlite3/sqlite3.c	51888;"	d	file:
getDigits	utilities/sqlite3/sqlite3.c	/^static int getDigits(const char *zDate, ...){$/;"	f	file:
getIntFromStmt	utilities/sqlite3/sqlite3.c	/^static int getIntFromStmt(sqlite3 *db, const char *zSql, int *piVal){$/;"	f	file:
getLastErrorMsg	utilities/sqlite3/sqlite3.c	/^static int getLastErrorMsg(int nBuf, char *zBuf){$/;"	f	file:
getLockingMode	utilities/sqlite3/sqlite3.c	/^static int getLockingMode(const char *z){$/;"	f	file:
getMask	utilities/sqlite3/sqlite3.c	/^static Bitmask getMask(WhereMaskSet *pMaskSet, int iCursor){$/;"	f	file:
getNextNode	utilities/sqlite3/sqlite3.c	/^static int getNextNode($/;"	f	file:
getNextString	utilities/sqlite3/sqlite3.c	/^static int getNextString($/;"	f	file:
getNextToken	utilities/sqlite3/sqlite3.c	/^static int getNextToken($/;"	f	file:
getNodeSize	utilities/sqlite3/sqlite3.c	/^static int getNodeSize($/;"	f	file:
getOverflowPage	utilities/sqlite3/sqlite3.c	/^static int getOverflowPage($/;"	f	file:
getReadLock	utilities/sqlite3/sqlite3.c	/^static int getReadLock( os2File *pFile ){$/;"	f	file:
getReadLock	utilities/sqlite3/sqlite3.c	/^static int getReadLock(winFile *pFile){$/;"	f	file:
getRowTrigger	utilities/sqlite3/sqlite3.c	/^static TriggerPrg *getRowTrigger($/;"	f	file:
getSafetyLevel	utilities/sqlite3/sqlite3.c	/^static u8 getSafetyLevel(const char *z){$/;"	f	file:
getSectorSize	utilities/sqlite3/sqlite3.c	/^static int getSectorSize($/;"	f	file:
getTempStore	utilities/sqlite3/sqlite3.c	/^static int getTempStore(const char *z){$/;"	f	file:
getTempname	utilities/sqlite3/sqlite3.c	/^static int getTempname(int nBuf, char *zBuf ){$/;"	f	file:
getTempname	utilities/sqlite3/sqlite3.c	/^static int getTempname(int nBuf, char *zBuf){$/;"	f	file:
getVarint	utilities/sqlite3/sqlite3.c	11569;"	d	file:
getVarint32	utilities/sqlite3/sqlite3.c	11567;"	d	file:
get_autocommit	utilities/sqlite3/sqlite3.c	/^  int  (*get_autocommit)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
get_auxdata	utilities/sqlite3/sqlite3.c	/^  void * (*get_auxdata)(sqlite3_context*,int);$/;"	m	struct:sqlite3_api_routines	file:
get_dev	utilities/common/serial_port.c	/^const char *get_dev(int port)$/;"	f
get_message	src/kernel/message.c	/^int get_message(HMOD hmod, msg_t pmsg)$/;"	f
get_qn	utilities/common/tools.c	/^int get_qn(char *qn)$/;"	f
get_real_time	utilities/common/tools.c	/^long long get_real_time(time_t now)$/;"	f
get_real_time2	utilities/common/tools.c	/^time_t get_real_time2(long long t)$/;"	f
get_sys_time	utilities/common/tools.c	/^int get_sys_time(time_t now, char *systime)$/;"	f
get_table	utilities/sqlite3/sqlite3.c	/^  int  (*get_table)(sqlite3*,const char*,char***,int*,int*,char**);$/;"	m	struct:sqlite3_api_routines	file:
globInfo	utilities/sqlite3/sqlite3.c	/^static const struct compareInfo globInfo = { '*', '?', '[', 0 };$/;"	v	typeref:struct:compareInfo	file:
global_recover	utilities/sqlite3/sqlite3.c	/^  int  (*global_recover)(void);$/;"	m	struct:sqlite3_api_routines	file:
groupConcatFinalize	utilities/sqlite3/sqlite3.c	/^static void groupConcatFinalize(sqlite3_context *context){$/;"	f	file:
groupConcatStep	utilities/sqlite3/sqlite3.c	/^static void groupConcatStep($/;"	f	file:
growOpArray	utilities/sqlite3/sqlite3.c	/^static int growOpArray(Vdbe *p){$/;"	f	file:
growVTrans	utilities/sqlite3/sqlite3.c	/^static int growVTrans(sqlite3 *db){$/;"	f	file:
grp	utilities/sqlite3/sqlite3.c	/^  PGroup grp;                    \/* The global PGroup for mode (2) *\/$/;"	m	struct:PCacheGlobal	file:
h	utilities/sqlite3/sqlite3.c	/^  HANDLE h;               \/* Handle for accessing the file *\/$/;"	m	struct:winFile	file:
h	utilities/sqlite3/sqlite3.c	/^  HFILE h;                  \/* Handle for accessing the file *\/$/;"	m	struct:os2File	file:
h	utilities/sqlite3/sqlite3.c	/^  int h, m;          \/* Hour and minutes *\/$/;"	m	struct:DateTime	file:
h	utilities/sqlite3/sqlite3.c	/^  int h;                              \/* The file descriptor *\/$/;"	m	struct:unixFile	file:
h	utilities/sqlite3/sqlite3.c	/^  int h;                     \/* Open file descriptor *\/$/;"	m	struct:unixShmNode	file:
hFile	utilities/sqlite3/sqlite3.c	/^  winFile hFile;             \/* File handle from winOpen *\/$/;"	m	struct:winShmNode	file:
hHeap	utilities/sqlite3/sqlite3.c	/^  HANDLE hHeap; \/* The handle to our heap. *\/$/;"	m	struct:winMemData	file:
hLockFile	utilities/sqlite3/sqlite3.c	/^  HFILE hLockFile;           \/* File used for inter-process memory locking *\/$/;"	m	struct:os2ShmNode	file:
hMap	utilities/sqlite3/sqlite3.c	/^    HANDLE hMap;             \/* File handle from CreateFileMapping *\/$/;"	m	struct:winShmNode::ShmRegion	file:
hMutex	utilities/sqlite3/sqlite3.c	/^  HANDLE hMutex;          \/* Mutex used to control access to shared lock *\/  $/;"	m	struct:winFile	file:
hPending	utilities/sqlite3/sqlite3.c	/^    Fts3Hash hPending;            \/* Pending terms table for this index *\/$/;"	m	struct:Fts3Table::Fts3Index	file:
hShared	utilities/sqlite3/sqlite3.c	/^  HANDLE hShared;         \/* Shared memory segment used for locking *\/$/;"	m	struct:winFile	file:
hasAgg	utilities/sqlite3/sqlite3.c	/^  u8 hasAgg;           \/* True if aggregates are seen *\/$/;"	m	struct:NameContext	file:
hasData	utilities/sqlite3/sqlite3.c	/^  u8 hasData;          \/* True if this page stores data *\/$/;"	m	struct:MemPage	file:
hasHotJournal	utilities/sqlite3/sqlite3.c	/^static int hasHotJournal(Pager *pPager, int *pExists){$/;"	f	file:
hasMutex	utilities/sqlite3/sqlite3.c	/^  u8 hasMutex;               \/* True if holding the unixShmNode mutex *\/$/;"	m	struct:unixShm	file:
hasMutex	utilities/sqlite3/sqlite3.c	/^  u8 hasMutex;               \/* True if holding the winShmNode mutex *\/$/;"	m	struct:winShm	file:
hasReadConflicts	utilities/sqlite3/sqlite3.c	/^static int hasReadConflicts(Btree *pBtree, Pgno iRoot){$/;"	f	file:
hasReadConflicts	utilities/sqlite3/sqlite3.c	48348;"	d	file:
hasSharedCacheTableLock	utilities/sqlite3/sqlite3.c	/^static int hasSharedCacheTableLock($/;"	f	file:
hasSharedCacheTableLock	utilities/sqlite3/sqlite3.c	48347;"	d	file:
hasVowel	utilities/sqlite3/sqlite3.c	/^static int hasVowel(const char *z){$/;"	f	file:
hashDestroy	utilities/sqlite3/sqlite3.c	/^static void hashDestroy(void *p){$/;"	f	file:
hdr	utilities/sqlite3/sqlite3.c	/^    } hdr;$/;"	m	union:Mem3Block::__anon19	typeref:struct:Mem3Block::__anon19::__anon20	file:
hdr	utilities/sqlite3/sqlite3.c	/^  WalIndexHdr hdr;           \/* Wal-index header for current transaction *\/$/;"	m	struct:Wal	file:
hdrOffset	utilities/sqlite3/sqlite3.c	/^  u8 hdrOffset;        \/* 100 for page 1.  0 otherwise *\/$/;"	m	struct:MemPage	file:
header_length	utilities/modbus/modbus-private.h	/^    unsigned int header_length;$/;"	m	struct:_modbus_backend
heightOfExpr	utilities/sqlite3/sqlite3.c	/^static void heightOfExpr(Expr *p, int *pnHeight){$/;"	f	file:
heightOfExprList	utilities/sqlite3/sqlite3.c	/^static void heightOfExprList(ExprList *p, int *pnHeight){$/;"	f	file:
heightOfSelect	utilities/sqlite3/sqlite3.c	/^static void heightOfSelect(Select *p, int *pnHeight){$/;"	f	file:
hexFunc	utilities/sqlite3/sqlite3.c	/^static void hexFunc($/;"	f	file:
hexdigits	utilities/sqlite3/sqlite3.c	/^static const char hexdigits[] = {$/;"	v	file:
hlmask	utilities/sqlite3/sqlite3.c	/^  u64 hlmask;                     \/* Mask of snippet terms to highlight *\/$/;"	m	struct:SnippetFragment	file:
hmod	include/def.h	/^	HMOD hmod;	\/\/\/<定时器归属$/;"	m	struct:object_timer
hmod	include/def.h	/^	HMOD hmod;$/;"	m	struct:msg
ht	utilities/sqlite3/sqlite3.c	/^  } *ht;$/;"	m	struct:Fts3Hash	typeref:struct:Fts3Hash::_fts3ht	file:
ht	utilities/sqlite3/sqlite3.c	/^  } *ht;$/;"	m	struct:Hash	typeref:struct:Hash::_ht	file:
ht_slot	utilities/sqlite3/sqlite3.c	/^typedef u16 ht_slot;$/;"	t	file:
htsize	utilities/sqlite3/sqlite3.c	/^  int htsize;             \/* Number of buckets in the hash table *\/$/;"	m	struct:Fts3Hash	file:
htsize	utilities/sqlite3/sqlite3.c	/^  unsigned int htsize;      \/* Number of buckets in the hash table *\/$/;"	m	struct:Hash	file:
i	utilities/sqlite3/sqlite3.c	/^    i64 i;              \/* Integer value used when MEM_Int is set in flags *\/$/;"	m	union:Mem::__anon17	file:
i	utilities/sqlite3/sqlite3.c	/^    int i;                                     \/* Integer value *\/$/;"	m	union:Walker::__anon16	file:
i	utilities/sqlite3/sqlite3.c	/^    int i;                 \/* Integer value if p4type==P4_INT32 *\/$/;"	m	union:VdbeOp::__anon7	file:
i	utilities/sqlite3/sqlite3.c	/^  int i;$/;"	m	union:RtreeCoord	file:
i	utilities/sqlite3/sqlite3.c	/^  unsigned char i, j;            \/* State variables *\/$/;"	m	struct:sqlite3PrngType	file:
i16	utilities/sqlite3/sqlite3.c	/^typedef INT16_TYPE i16;            \/* 2-byte signed integer *\/$/;"	t	file:
i16	utilities/sqlite3/sqlite3.c	/^typedef short int i16;            \/* 2-byte (or larger) signed integer *\/$/;"	t	file:
i64	utilities/sqlite3/sqlite3.c	/^typedef sqlite3_int64 i64;$/;"	t	file:
i64	utilities/sqlite3/sqlite3.c	/^typedef sqlite_int64 i64;          \/* 8-byte signed integer *\/$/;"	t	file:
i8	utilities/sqlite3/sqlite3.c	/^typedef INT8_TYPE i8;              \/* 1-byte signed integer *\/$/;"	t	file:
iAddr	utilities/sqlite3/sqlite3.c	/^  int iAddr;                 \/* Address of next instruction to return *\/$/;"	m	struct:VdbeOpIter	file:
iAgg	utilities/sqlite3/sqlite3.c	/^  i16 iAgg;              \/* Which entry in pAggInfo->aCol[] or ->aFunc[] *\/$/;"	m	struct:Expr	file:
iAlias	utilities/sqlite3/sqlite3.c	/^    u16 iAlias;            \/* Index into Parse.aAlias[] for zName *\/$/;"	m	struct:ExprList::ExprList_item	file:
iBatch	utilities/sqlite3/sqlite3.c	/^  u8 iBatch;                     \/* Current insert batch *\/$/;"	m	struct:RowSet	file:
iBreak	utilities/sqlite3/sqlite3.c	/^  int iBreak;                    \/* Jump here to break out of the loop *\/$/;"	m	struct:WhereInfo	file:
iCacheCnt	utilities/sqlite3/sqlite3.c	/^  int iCacheCnt;       \/* Counter used to generate aColCache[].lru values *\/$/;"	m	struct:Parse	file:
iCacheLevel	utilities/sqlite3/sqlite3.c	/^  int iCacheLevel;     \/* ColCache valid when aColCache[].iLevel<=iCacheLevel *\/$/;"	m	struct:Parse	file:
iCallback	utilities/sqlite3/sqlite3.c	/^  u32 iCallback;             \/* Value to pass to log callback (or 0) *\/$/;"	m	struct:Wal	file:
iCell	utilities/sqlite3/sqlite3.c	/^  int iCell;                        \/* Index of current cell in pNode *\/$/;"	m	struct:RtreeCursor	file:
iChange	utilities/sqlite3/sqlite3.c	/^  u32 iChange;                    \/* Counter incremented each transaction *\/$/;"	m	struct:WalIndexHdr	file:
iCol	utilities/sqlite3/sqlite3.c	/^    u16 iCol;              \/* For ORDER BY, column number in result set *\/$/;"	m	struct:ExprList::ExprList_item	file:
iCol	utilities/sqlite3/sqlite3.c	/^  int iCol;                       \/* Column of table to populate aTerm for *\/$/;"	m	struct:TermOffsetCtx	file:
iCol	utilities/sqlite3/sqlite3.c	/^  int iCol;                       \/* Column snippet is extracted from *\/$/;"	m	struct:SnippetFragment	file:
iCol	utilities/sqlite3/sqlite3.c	/^  int iCol;                       \/* Column token must occur in *\/$/;"	m	struct:Fts3DeferredToken	file:
iCol	utilities/sqlite3/sqlite3.c	/^  int iCol;                       \/* Current value of 'col' column *\/$/;"	m	struct:Fts3auxCursor	file:
iCol	utilities/sqlite3/sqlite3.c	/^  int iCol;                       \/* Extract snippet from this column *\/$/;"	m	struct:SnippetIter	file:
iCol	utilities/sqlite3/sqlite3.c	/^  int iCol;                       \/* The column the token must match *\/$/;"	m	struct:Fts3TokenAndCost	file:
iCol	utilities/sqlite3/sqlite3.c	/^  int iCol;               \/* Table column this handle is open on *\/$/;"	m	struct:Incrblob	file:
iCol	utilities/sqlite3/sqlite3.c	/^  int iCol;$/;"	m	struct:Fts3SegFilter	file:
iColCache	utilities/sqlite3/sqlite3.c	/^  u8 iColCache;        \/* Next entry of the cache to replace *\/$/;"	m	struct:Parse	file:
iColFilter	utilities/sqlite3/sqlite3.c	/^  int iColFilter;                 \/* If >=0, filter for this column *\/$/;"	m	struct:Fts3MultiSegReader	file:
iColumn	utilities/sqlite3/sqlite3.c	/^     int iColumn;              \/* Column number *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_orderby	file:
iColumn	utilities/sqlite3/sqlite3.c	/^     int iColumn;              \/* Column on left-hand side of constraint *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint	file:
iColumn	utilities/sqlite3/sqlite3.c	/^    int iColumn;             \/* Column number within the source table *\/$/;"	m	struct:AggInfo::AggInfo_col	file:
iColumn	utilities/sqlite3/sqlite3.c	/^    int iColumn;          \/* Table column number *\/$/;"	m	struct:Parse::yColCache	file:
iColumn	utilities/sqlite3/sqlite3.c	/^  int iColumn;               \/* Index of column this phrase must match *\/$/;"	m	struct:Fts3Phrase	file:
iColumn	utilities/sqlite3/sqlite3.c	/^  ynVar iColumn;         \/* TK_COLUMN: column index.  -1 for rowid.$/;"	m	struct:Expr	file:
iColumn	utilities/sqlite3/sqlite3.h	/^     int iColumn;              \/* Column number *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_orderby
iColumn	utilities/sqlite3/sqlite3.h	/^     int iColumn;              \/* Column on left-hand side of constraint *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint
iContinue	utilities/sqlite3/sqlite3.c	/^  int iContinue;                 \/* Jump here to continue with next record *\/$/;"	m	struct:WhereInfo	file:
iCoord	utilities/sqlite3/sqlite3.c	/^  int iCoord;                     \/* Index of constrained coordinate *\/$/;"	m	struct:RtreeConstraint	file:
iCur	utilities/sqlite3/sqlite3.c	/^        int iCur;              \/* The VDBE cursor used by this IN operator *\/$/;"	m	struct:WhereLevel::__anon13::__anon14::InLoop	file:
iCurrent	utilities/sqlite3/sqlite3.c	/^  int iCurrent;                   \/* First token of current snippet *\/$/;"	m	struct:SnippetIter	file:
iCurrentBlock	utilities/sqlite3/sqlite3.c	/^  sqlite3_int64 iCurrentBlock;    \/* Current leaf block (or 0) *\/$/;"	m	struct:Fts3SegReader	file:
iCursor	utilities/sqlite3/sqlite3.c	/^    int iCursor;      \/* The VDBE cursor number used to access this table *\/$/;"	m	struct:SrcList::SrcList_item	file:
iDb	utilities/sqlite3/sqlite3.c	/^    int iDb;                    \/* When back is being initialized *\/$/;"	m	struct:sqlite3::sqlite3InitInfo	file:
iDb	utilities/sqlite3/sqlite3.c	/^  int iDb;              \/* Index in sqlite3.aDb[] of database holding pTab *\/$/;"	m	struct:AutoincInfo	file:
iDb	utilities/sqlite3/sqlite3.c	/^  int iDb;              \/* Index of cursor database in db->aDb[] (or -1) *\/$/;"	m	struct:VdbeCursor	file:
iDb	utilities/sqlite3/sqlite3.c	/^  int iDb;             \/* The database containing the table to be locked *\/$/;"	m	struct:TableLock	file:
iDb	utilities/sqlite3/sqlite3.c	/^  int iDb;            \/* 0 for main database.  1 for TEMP, 2.. for ATTACHed *\/$/;"	m	struct:__anon15	file:
iDefaultCol	utilities/sqlite3/sqlite3.c	/^  int iDefaultCol;                    \/* Default column to query *\/$/;"	m	struct:ParseContext	file:
iDepth	utilities/sqlite3/sqlite3.c	/^  int iDepth;                 \/* Current depth of the r-tree structure *\/$/;"	m	struct:Rtree	file:
iDestSchema	utilities/sqlite3/sqlite3.c	/^  u32 iDestSchema;         \/* Original schema cookie in destination *\/$/;"	m	struct:sqlite3_backup	file:
iDistinct	utilities/sqlite3/sqlite3.c	/^    int iDistinct;           \/* Ephemeral table used to enforce DISTINCT *\/$/;"	m	struct:AggInfo::AggInfo_func	file:
iDivisor	utilities/sqlite3/sqlite3.c	/^  u32 iDivisor;   \/* Number of bits handled by each apSub[] entry. *\/$/;"	m	struct:Bitvec	file:
iDocid	utilities/sqlite3/sqlite3.c	/^  sqlite3_int64 iDocid;          \/* Current docid (if pList!=0) *\/$/;"	m	struct:Fts3Doclist	file:
iDocid	utilities/sqlite3/sqlite3.c	/^  sqlite3_int64 iDocid;      \/* Current docid *\/$/;"	m	struct:Fts3Expr	file:
iDocid	utilities/sqlite3/sqlite3.c	/^  sqlite3_int64 iDocid;$/;"	m	struct:Fts3SegReader	file:
iDocid	utilities/sqlite3/sqlite3.c	/^  sqlite3_int64 iDocid;$/;"	m	struct:TermOffsetCtx	file:
iDoclistToken	utilities/sqlite3/sqlite3.c	/^  int iDoclistToken;$/;"	m	struct:Fts3Phrase	file:
iECursor	utilities/sqlite3/sqlite3.c	/^  int iECursor;          \/* VDBE Cursor associated with this ExprList *\/$/;"	m	struct:ExprList	file:
iEndBlock	utilities/sqlite3/sqlite3.c	/^  sqlite3_int64 iEndBlock;        \/* Rowid of final block in segment (or 0) *\/$/;"	m	struct:Fts3SegReader	file:
iEof	utilities/sqlite3/sqlite3.c	/^  i64 iEof;                       \/* 1 byte past EOF for this iterator *\/$/;"	m	struct:VdbeSorterIter	file:
iFirst	utilities/sqlite3/sqlite3.c	/^  sqlite3_int64 iFirst;           \/* First slot in %_segments written *\/$/;"	m	struct:SegmentWriter	file:
iForeGuard	utilities/sqlite3/sqlite3.c	/^  int iForeGuard;                     \/* Guard word for sanity *\/$/;"	m	struct:MemBlockHdr	file:
iFree	utilities/sqlite3/sqlite3.c	/^  sqlite3_int64 iFree;            \/* Next free slot in %_segments *\/$/;"	m	struct:SegmentWriter	file:
iFrom	utilities/sqlite3/sqlite3.c	/^    int iFrom;         \/* Index of column in pFrom *\/$/;"	m	struct:FKey::sColMap	file:
iFrom	utilities/sqlite3/sqlite3.c	/^  u8 iFrom;             \/* Which entry in the FROM clause *\/$/;"	m	struct:WhereLevel	file:
iGeneration	utilities/sqlite3/sqlite3.c	/^  int iGeneration;     \/* Generation counter.  Incremented with each change *\/$/;"	m	struct:Schema	file:
iHdrOffset	utilities/sqlite3/sqlite3.c	/^  i64 iHdrOffset;              \/* See above *\/$/;"	m	struct:PagerSavepoint	file:
iHead	utilities/sqlite3/sqlite3.c	/^  int iHead;                      \/* Next value in position list *\/$/;"	m	struct:SnippetPhrase	file:
iIdx	utilities/sqlite3/sqlite3.c	/^  int iIdx;                       \/* Index within level, or 0x7FFFFFFF for PT *\/$/;"	m	struct:Fts3SegReader	file:
iIdxCur	utilities/sqlite3/sqlite3.c	/^  int iIdxCur;          \/* The VDBE cursor used to access pIdx *\/$/;"	m	struct:WhereLevel	file:
iJD	utilities/sqlite3/sqlite3.c	/^  sqlite3_int64 iJD; \/* The julian day number times 86400000 *\/$/;"	m	struct:DateTime	file:
iKey	utilities/sqlite3/sqlite3.c	/^  unsigned int iKey;             \/* Key value (page number) *\/$/;"	m	struct:PgHdr1	file:
iLastCol	utilities/sqlite3/sqlite3.c	/^  sqlite3_int64 iLastCol;$/;"	m	struct:PendingList	file:
iLastDocid	utilities/sqlite3/sqlite3.c	/^  sqlite3_int64 iLastDocid;$/;"	m	struct:PendingList	file:
iLastPos	utilities/sqlite3/sqlite3.c	/^  sqlite3_int64 iLastPos;$/;"	m	struct:PendingList	file:
iLeafEndBlock	utilities/sqlite3/sqlite3.c	/^  sqlite3_int64 iLeafEndBlock;    \/* Rowid of final leaf block to traverse *\/$/;"	m	struct:Fts3SegReader	file:
iLeftJoin	utilities/sqlite3/sqlite3.c	/^  int iLeftJoin;        \/* Memory cell used to implement LEFT OUTER JOIN *\/$/;"	m	struct:WhereLevel	file:
iLevel	utilities/sqlite3/sqlite3.c	/^    int iLevel;           \/* Nesting level *\/$/;"	m	struct:Parse::yColCache	file:
iLimit	utilities/sqlite3/sqlite3.c	/^  int iLimit, iOffset;   \/* Memory registers holding LIMIT & OFFSET counters *\/$/;"	m	struct:Select	file:
iMaster	utilities/sqlite3/sqlite3.c	/^  u32 iMaster;$/;"	m	struct:Mem3Global	file:
iMaxKey	utilities/sqlite3/sqlite3.c	/^  unsigned int iMaxKey;               \/* Largest key seen since xTruncate() *\/$/;"	m	struct:PCache1	file:
iMem	utilities/sqlite3/sqlite3.c	/^    int iMem;                \/* Memory location that acts as accumulator *\/$/;"	m	struct:AggInfo::AggInfo_col	file:
iMem	utilities/sqlite3/sqlite3.c	/^    int iMem;                \/* Memory location that acts as accumulator *\/$/;"	m	struct:AggInfo::AggInfo_func	file:
iMem	utilities/sqlite3/sqlite3.c	/^  int iMem;         \/* Base register where results are written *\/$/;"	m	struct:SelectDest	file:
iNext	utilities/sqlite3/sqlite3.c	/^    int iNext;                    \/* Next slot in aIndex[] not yet returned *\/$/;"	m	struct:WalIterator::WalSegment	file:
iNext	utilities/sqlite3/sqlite3.c	/^  Pgno iNext;              \/* Page number of the next source page to copy *\/$/;"	m	struct:sqlite3_backup	file:
iNextSelectId	utilities/sqlite3/sqlite3.c	/^  int iNextSelectId;$/;"	m	struct:Parse	file:
iNode	utilities/sqlite3/sqlite3.c	/^  i64 iNode;$/;"	m	struct:RtreeNode	file:
iNodeSize	utilities/sqlite3/sqlite3.c	/^  int iNodeSize;              \/* Size in bytes of each node in the node table *\/$/;"	m	struct:Rtree	file:
iOff	utilities/sqlite3/sqlite3.c	/^  int iOff;                       \/* Offset of this term from read positions *\/$/;"	m	struct:TermOffset	file:
iOffset	utilities/sqlite3/sqlite3.c	/^  i64 iOffset;                 \/* Starting offset in main journal *\/$/;"	m	struct:PagerSavepoint	file:
iOffset	utilities/sqlite3/sqlite3.c	/^  int iLimit, iOffset;   \/* Memory registers holding LIMIT & OFFSET counters *\/$/;"	m	struct:Select	file:
iOffset	utilities/sqlite3/sqlite3.c	/^  int iOffset;                 \/* current position in pInput *\/$/;"	m	struct:simple_tokenizer_cursor	file:
iOffset	utilities/sqlite3/sqlite3.c	/^  int iOffset;                 \/* current position in zInput *\/$/;"	m	struct:porter_tokenizer_cursor	file:
iOffset	utilities/sqlite3/sqlite3.c	/^  int iOffset;            \/* Byte offset of blob in cursor data *\/$/;"	m	struct:Incrblob	file:
iOffset	utilities/sqlite3/sqlite3.c	/^  sqlite3_int64 iOffset;          \/* Offset from the beginning of the file *\/$/;"	m	struct:FilePoint	file:
iOverflow	utilities/sqlite3/sqlite3.c	/^  u16 iOverflow; \/* Offset to overflow page number.  Zero if no overflow *\/$/;"	m	struct:CellInfo	file:
iPKey	utilities/sqlite3/sqlite3.c	/^  int iPKey;           \/* If not negative, use aCol[iPKey] as the primary key *\/$/;"	m	struct:Table	file:
iPage	utilities/sqlite3/sqlite3.c	/^  i16 iPage;                            \/* Index of current page in apPage *\/$/;"	m	struct:BtCursor	file:
iParent	utilities/sqlite3/sqlite3.c	/^  int iParent;            \/* Disable pWC->a[iParent] when this term disabled *\/$/;"	m	struct:WhereTerm	file:
iParm	utilities/sqlite3/sqlite3.c	/^  int iParm;        \/* A parameter used by the eDest disposal method *\/$/;"	m	struct:SelectDest	file:
iPos	utilities/sqlite3/sqlite3.c	/^  int iPos;                       \/* Current position *\/$/;"	m	struct:LcsIterator	file:
iPos	utilities/sqlite3/sqlite3.c	/^  int iPos;                       \/* Index of first token in snippet *\/$/;"	m	struct:SnippetFragment	file:
iPos	utilities/sqlite3/sqlite3.c	/^  int iPos;                       \/* Position just read from pList *\/$/;"	m	struct:TermOffset	file:
iPosOffset	utilities/sqlite3/sqlite3.c	/^  int iPosOffset;                 \/* Tokens count up to end of this phrase *\/$/;"	m	struct:LcsIterator	file:
iPrefEnc	utilities/sqlite3/sqlite3.c	/^  u8 iPrefEnc;         \/* Preferred text encoding (SQLITE_UTF8, 16LE, 16BE) *\/$/;"	m	struct:FuncDef	file:
iPrevDocid	utilities/sqlite3/sqlite3.c	/^  sqlite_int64 iPrevDocid;        \/* Docid of most recently inserted document *\/$/;"	m	struct:Fts3Table	file:
iPrevId	utilities/sqlite3/sqlite3.c	/^  sqlite3_int64 iPrevId;          \/* Previous id read from aDoclist *\/$/;"	m	struct:Fts3Cursor	file:
iPrior	utilities/sqlite3/sqlite3.c	/^  int iPrior;                     \/* Last result returned from the iterator *\/$/;"	m	struct:WalIterator	file:
iRangeReg	utilities/sqlite3/sqlite3.c	/^  int iRangeReg;       \/* First register in temporary register block *\/$/;"	m	struct:Parse	file:
iReadOff	utilities/sqlite3/sqlite3.c	/^  i64 iReadOff;                   \/* Current read offset *\/$/;"	m	struct:VdbeSorterIter	file:
iReadOff	utilities/sqlite3/sqlite3.c	/^  i64 iReadOff;                   \/* Current read offset within file pTemp1 *\/$/;"	m	struct:VdbeSorter	file:
iReg	utilities/sqlite3/sqlite3.c	/^    int iReg;             \/* Reg with value of this column. 0 means none. *\/$/;"	m	struct:Parse::yColCache	file:
iReinsertHeight	utilities/sqlite3/sqlite3.c	/^  int iReinsertHeight;        \/* Height of sub-trees Reinsert() has run on *\/$/;"	m	struct:Rtree	file:
iRightJoinTable	utilities/sqlite3/sqlite3.c	/^  i16 iRightJoinTable;   \/* If EP_FromJoin, the right table of the join *\/$/;"	m	struct:Expr	file:
iRowid	utilities/sqlite3/sqlite3.c	/^  i64 iRowid;$/;"	m	struct:RtreeCell	file:
iRowid	utilities/sqlite3/sqlite3.c	/^  sqlite3_int64 iRowid;           \/* Current rowid *\/$/;"	m	struct:Fts3auxCursor	file:
iSavepoint	utilities/sqlite3/sqlite3.c	/^  int iSavepoint;           \/* Depth of the SAVEPOINT stack *\/$/;"	m	struct:VTable	file:
iSelectId	utilities/sqlite3/sqlite3.c	/^    u8 iSelectId;     \/* If pSelect!=0, the id of the sub-select in EQP *\/$/;"	m	struct:SrcList::SrcList_item	file:
iSelectId	utilities/sqlite3/sqlite3.c	/^  int iSelectId;$/;"	m	struct:Parse	file:
iSize	utilities/sqlite3/sqlite3.c	/^  i64 iSize;                          \/* Size of this allocation *\/$/;"	m	struct:MemBlockHdr	file:
iSize	utilities/sqlite3/sqlite3.c	/^  int iSize;                      \/* Amount of zBuf[] currently used *\/$/;"	m	struct:JournalFile	file:
iSize	utilities/sqlite3/sqlite3.c	/^  u32 iSize;      \/* Maximum bit index.  Max iSize is 4,294,967,296. *\/$/;"	m	struct:Bitvec	file:
iSorterColumn	utilities/sqlite3/sqlite3.c	/^    int iSorterColumn;       \/* Column number in the sorting index *\/$/;"	m	struct:AggInfo::AggInfo_col	file:
iStartBlock	utilities/sqlite3/sqlite3.c	/^  sqlite3_int64 iStartBlock;      \/* Rowid of first leaf block to traverse *\/$/;"	m	struct:Fts3SegReader	file:
iStatement	utilities/sqlite3/sqlite3.c	/^  int iStatement;         \/* Statement number (or 0 if has not opened stmt) *\/$/;"	m	struct:Vdbe	file:
iStrategy	utilities/sqlite3/sqlite3.c	/^  int iStrategy;                    \/* Copy of idxNum search parameter *\/$/;"	m	struct:RtreeCursor	file:
iSub	utilities/sqlite3/sqlite3.c	/^  int iSub;                  \/* 0 = main program, 1 = first sub-program etc. *\/$/;"	m	struct:VdbeOpIter	file:
iSubRec	utilities/sqlite3/sqlite3.c	/^  Pgno iSubRec;                \/* Index of first record in sub-journal *\/$/;"	m	struct:PagerSavepoint	file:
iSum	utilities/sqlite3/sqlite3.c	/^  i64 iSum;         \/* Integer sum *\/   $/;"	m	struct:SumCtx	file:
iTab	utilities/sqlite3/sqlite3.c	/^  int iTab;            \/* The root page of the table to be locked *\/$/;"	m	struct:TableLock	file:
iTabCur	utilities/sqlite3/sqlite3.c	/^  int iTabCur;          \/* The VDBE cursor used to access the table *\/$/;"	m	struct:WhereLevel	file:
iTable	utilities/sqlite3/sqlite3.c	/^    int iTable;              \/* Cursor number of the source table *\/$/;"	m	struct:AggInfo::AggInfo_col	file:
iTable	utilities/sqlite3/sqlite3.c	/^    int iTable;           \/* Table cursor number *\/$/;"	m	struct:Parse::yColCache	file:
iTable	utilities/sqlite3/sqlite3.c	/^  Pgno iTable;          \/* Root page of table *\/$/;"	m	struct:BtLock	file:
iTable	utilities/sqlite3/sqlite3.c	/^  int iTable;            \/* TK_COLUMN: cursor number of table holding column$/;"	m	struct:Expr	file:
iTail	utilities/sqlite3/sqlite3.c	/^  int iTail;                      \/* Next value in trailing position list *\/$/;"	m	struct:SnippetPhrase	file:
iTerm	utilities/sqlite3/sqlite3.c	/^  int iTerm;$/;"	m	struct:TermOffsetCtx	file:
iTermOffset	utilities/sqlite3/sqlite3.c	/^     int iTermOffset;          \/* Used internally - xBestIndex should ignore *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint	file:
iTermOffset	utilities/sqlite3/sqlite3.h	/^     int iTermOffset;          \/* Used internally - xBestIndex should ignore *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint
iToken	utilities/sqlite3/sqlite3.c	/^  int iToken;                     \/* Position of token in phrase *\/$/;"	m	struct:Fts3TokenAndCost	file:
iToken	utilities/sqlite3/sqlite3.c	/^  int iToken;                  \/* index of next token to be returned *\/$/;"	m	struct:porter_tokenizer_cursor	file:
iToken	utilities/sqlite3/sqlite3.c	/^  int iToken;                  \/* index of next token to be returned *\/$/;"	m	struct:simple_tokenizer_cursor	file:
iToken	utilities/sqlite3/sqlite3.c	/^  int iToken;$/;"	m	struct:IcuCursor	file:
iTop	utilities/sqlite3/sqlite3.c	/^  int iTop;                      \/* The very beginning of the WHERE loop *\/$/;"	m	struct:WhereInfo	file:
iValue	utilities/sqlite3/sqlite3.c	/^    int iValue;            \/* Non-negative integer value if EP_IntValue *\/$/;"	m	union:Expr::__anon10	file:
iVersion	utilities/sqlite3/sqlite3.c	/^  int iVersion;            \/* Structure version number (currently 3) *\/$/;"	m	struct:sqlite3_vfs	file:
iVersion	utilities/sqlite3/sqlite3.c	/^  int iVersion;$/;"	m	struct:sqlite3_io_methods	file:
iVersion	utilities/sqlite3/sqlite3.c	/^  int iVersion;$/;"	m	struct:sqlite3_module	file:
iVersion	utilities/sqlite3/sqlite3.c	/^  int iVersion;$/;"	m	struct:sqlite3_tokenizer_module	file:
iVersion	utilities/sqlite3/sqlite3.c	/^  u32 iVersion;                   \/* Wal-index version *\/$/;"	m	struct:WalIndexHdr	file:
iVersion	utilities/sqlite3/sqlite3.h	/^  int iVersion;            \/* Structure version number (currently 3) *\/$/;"	m	struct:sqlite3_vfs
iVersion	utilities/sqlite3/sqlite3.h	/^  int iVersion;$/;"	m	struct:sqlite3_io_methods
iVersion	utilities/sqlite3/sqlite3.h	/^  int iVersion;$/;"	m	struct:sqlite3_module
iWriteOff	utilities/sqlite3/sqlite3.c	/^  i64 iWriteOff;                  \/* Current write offset within file pTemp1 *\/$/;"	m	struct:VdbeSorter	file:
iZero	utilities/sqlite3/sqlite3.c	/^    int iZero;                    \/* Frame number associated with aPgno[0] *\/$/;"	m	struct:WalIterator::WalSegment	file:
icuCaseFunc16	utilities/sqlite3/sqlite3.c	/^static void icuCaseFunc16(sqlite3_context *p, int nArg, sqlite3_value **apArg){$/;"	f	file:
icuClose	utilities/sqlite3/sqlite3.c	/^static int icuClose(sqlite3_tokenizer_cursor *pCursor){$/;"	f	file:
icuCollationColl	utilities/sqlite3/sqlite3.c	/^static int icuCollationColl($/;"	f	file:
icuCollationDel	utilities/sqlite3/sqlite3.c	/^static void icuCollationDel(void *pCtx){$/;"	f	file:
icuCreate	utilities/sqlite3/sqlite3.c	/^static int icuCreate($/;"	f	file:
icuDestroy	utilities/sqlite3/sqlite3.c	/^static int icuDestroy(sqlite3_tokenizer *pTokenizer){$/;"	f	file:
icuFunctionError	utilities/sqlite3/sqlite3.c	/^static void icuFunctionError($/;"	f	file:
icuLikeCompare	utilities/sqlite3/sqlite3.c	/^static int icuLikeCompare($/;"	f	file:
icuLikeFunc	utilities/sqlite3/sqlite3.c	/^static void icuLikeFunc($/;"	f	file:
icuLoadCollation	utilities/sqlite3/sqlite3.c	/^static void icuLoadCollation($/;"	f	file:
icuNext	utilities/sqlite3/sqlite3.c	/^static int icuNext($/;"	f	file:
icuOpen	utilities/sqlite3/sqlite3.c	/^static int icuOpen($/;"	f	file:
icuRegexpDelete	utilities/sqlite3/sqlite3.c	/^static void icuRegexpDelete(void *p){$/;"	f	file:
icuRegexpFunc	utilities/sqlite3/sqlite3.c	/^static void icuRegexpFunc(sqlite3_context *p, int nArg, sqlite3_value **apArg){$/;"	f	file:
icuTokenizerModule	utilities/sqlite3/sqlite3.c	/^static const sqlite3_tokenizer_module icuTokenizerModule = {$/;"	v	file:
id	include/def.h	/^	int id;		\/\/\/<定时器编号$/;"	m	struct:object_timer
id	utilities/sqlite3/sqlite3.c	/^  int  id;          \/* Mutex type *\/$/;"	m	struct:sqlite3_mutex	file:
id	utilities/sqlite3/sqlite3.c	/^  int id;                    \/* Mutex type *\/$/;"	m	struct:sqlite3_mutex	file:
id	utilities/sqlite3/sqlite3.c	/^  int id;     \/* The mutex type *\/$/;"	m	struct:sqlite3_debug_mutex	file:
id	utilities/sqlite3/sqlite3.c	/^  u8 id;                     \/* Id of this connection with its os2ShmNode *\/$/;"	m	struct:os2ShmLink	file:
id	utilities/sqlite3/sqlite3.c	/^  u8 id;                     \/* Id of this connection with its winShmNode *\/$/;"	m	struct:winShm	file:
id	utilities/sqlite3/sqlite3.c	/^  u8 id;                     \/* Id of this connection within its unixShmNode *\/$/;"	m	struct:unixShm	file:
identLength	utilities/sqlite3/sqlite3.c	/^static int identLength(const char *z){$/;"	f	file:
identPut	utilities/sqlite3/sqlite3.c	/^static void identPut(char *z, int *pIdx, char *zSignedIdent){$/;"	f	file:
idle	src/application/idle.c	/^void idle(void)$/;"	f
idx	utilities/sqlite3/sqlite3.c	/^    int idx;          \/* Index in some Table.aCol[] of a column named zName *\/$/;"	m	struct:IdList::IdList_item	file:
idx	utilities/sqlite3/sqlite3.c	/^    u16 idx;            \/* Insert this cell before idx-th non-overflow cell *\/$/;"	m	struct:MemPage::_OvflCell	file:
idxHash	utilities/sqlite3/sqlite3.c	/^  Hash idxHash;        \/* All (named) indices indexed by name *\/$/;"	m	struct:Schema	file:
idxNum	utilities/sqlite3/sqlite3.c	/^  int idxNum;                \/* Number used to identify the index *\/$/;"	m	struct:sqlite3_index_info	file:
idxNum	utilities/sqlite3/sqlite3.h	/^  int idxNum;                \/* Number used to identify the index *\/$/;"	m	struct:sqlite3_index_info
idxStr	utilities/sqlite3/sqlite3.c	/^  char *idxStr;              \/* String, possibly obtained from sqlite3_malloc *\/$/;"	m	struct:sqlite3_index_info	file:
idxStr	utilities/sqlite3/sqlite3.h	/^  char *idxStr;              \/* String, possibly obtained from sqlite3_malloc *\/$/;"	m	struct:sqlite3_index_info
ifnullFunc	utilities/sqlite3/sqlite3.c	84438;"	d	file:
importVtabErrMsg	utilities/sqlite3/sqlite3.c	/^static void importVtabErrMsg(Vdbe *p, sqlite3_vtab *pVtab){$/;"	f	file:
in	utilities/sqlite3/sqlite3.c	/^    } in;                 \/* Used when plan.wsFlags&WHERE_IN_ABLE *\/$/;"	m	union:WhereLevel::__anon13	typeref:struct:WhereLevel::__anon13::__anon14	file:
inNormalWrite	utilities/sqlite3/sqlite3.c	/^  unsigned char inNormalWrite;   \/* True if in a normal write operation *\/$/;"	m	struct:unixFile	file:
inProgress	utilities/sqlite3/sqlite3.c	/^  int inProgress;                   \/* True while initialization in progress *\/$/;"	m	struct:Sqlite3Config	file:
inTrans	utilities/sqlite3/sqlite3.c	/^  u8 inTrans;          \/* 0: not writable.  1: Transaction.  2: Checkpoint *\/$/;"	m	struct:Db	file:
inTrans	utilities/sqlite3/sqlite3.c	/^  u8 inTrans;        \/* TRANS_NONE, TRANS_READ or TRANS_WRITE *\/$/;"	m	struct:Btree	file:
inTransaction	utilities/sqlite3/sqlite3.c	/^  int inTransaction;     \/* True after xBegin but before xCommit\/xRollback *\/$/;"	m	struct:Fts3Table	file:
inTransaction	utilities/sqlite3/sqlite3.c	/^  u8 inTransaction;     \/* Transaction state *\/$/;"	m	struct:BtShared	file:
inVtabMethod	utilities/sqlite3/sqlite3.c	/^  u8 inVtabMethod;        \/* See comments above *\/$/;"	m	struct:Vdbe	file:
incrVacuum	utilities/sqlite3/sqlite3.c	/^  u8 incrVacuum;        \/* True if incr-vacuum is enabled *\/$/;"	m	struct:BtShared	file:
incrVacuumStep	utilities/sqlite3/sqlite3.c	/^static int incrVacuumStep(BtShared *pBt, Pgno nFin, Pgno iLastPg){$/;"	f	file:
indexable	utilities/sqlite3/sqlite3.c	/^  Bitmask indexable;       \/* Bitmask of all indexable tables in the clause *\/$/;"	m	struct:WhereOrInfo	file:
info	utilities/sqlite3/sqlite3.c	/^  CellInfo info;            \/* A parse of the cell we are pointing at *\/$/;"	m	struct:BtCursor	file:
info_arch	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_compiler	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_platform	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_version	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	/^char const info_version[] = {$/;"	v
info_version	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version[] = {$/;"	v
init	src/application/init.c	/^int init(void)$/;"	f
init	utilities/sqlite3/sqlite3.c	/^  } init;$/;"	m	struct:sqlite3	typeref:struct:sqlite3::sqlite3InitInfo	file:
initMaskSet	utilities/sqlite3/sqlite3.c	100736;"	d	file:
initUconvObjects	utilities/sqlite3/sqlite3.c	/^static void initUconvObjects( void ){$/;"	f	file:
init_print_level	src/application/init.c	/^static void init_print_level(void)$/;"	f	file:
init_sem	utilities/common/sem.c	/^int init_sem(int sem_id, int init_value)$/;"	f
init_sigalrm_timer	src/kernel/timer.c	/^static int init_sigalrm_timer(void)$/;"	f	file:
init_tick	include/def.h	/^	int init_tick;	\/\/\/<定时器超时时间$/;"	m	struct:object_timer
init_timerfd_timer	src/kernel/timer.c	/^static int init_timerfd_timer(void)$/;"	f	file:
initiallyEmpty	utilities/sqlite3/sqlite3.c	/^  u8 initiallyEmpty;    \/* Database is empty at start of transaction *\/$/;"	m	struct:BtShared	file:
ino	utilities/sqlite3/sqlite3.c	/^  ino_t ino;                  \/* Inode number *\/$/;"	m	struct:unixFileId	file:
inodeList	utilities/sqlite3/sqlite3.c	/^static unixInodeInfo *inodeList = 0;$/;"	v	file:
insertBinaryOperator	utilities/sqlite3/sqlite3.c	/^static void insertBinaryOperator($/;"	f	file:
insertCell	utilities/sqlite3/sqlite3.c	/^static void insertCell($/;"	f	file:
insertElement	utilities/sqlite3/sqlite3.c	/^static void insertElement($/;"	f	file:
install_sighandler	src/application/init.c	/^static void install_sighandler(void)$/;"	f	file:
intKey	utilities/sqlite3/sqlite3.c	/^  u8 intKey;           \/* True if intkey flag is set *\/$/;"	m	struct:MemPage	file:
intTestFunc	utilities/sqlite3/sqlite3.c	/^static void intTestFunc($/;"	f	file:
interruptx	utilities/sqlite3/sqlite3.c	/^  void  (*interruptx)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
invalidateAllOverflowCache	utilities/sqlite3/sqlite3.c	/^static void invalidateAllOverflowCache(BtShared *pBt){$/;"	f	file:
invalidateAllOverflowCache	utilities/sqlite3/sqlite3.c	48741;"	d	file:
invalidateCursorsOnModifiedBtrees	utilities/sqlite3/sqlite3.c	/^static void invalidateCursorsOnModifiedBtrees(sqlite3 *db){$/;"	f	file:
invalidateIncrblobCursors	utilities/sqlite3/sqlite3.c	/^static void invalidateIncrblobCursors($/;"	f	file:
invalidateIncrblobCursors	utilities/sqlite3/sqlite3.c	48742;"	d	file:
invalidateOverflowCache	utilities/sqlite3/sqlite3.c	/^static void invalidateOverflowCache(BtCursor *pCur){$/;"	f	file:
invalidateOverflowCache	utilities/sqlite3/sqlite3.c	48740;"	d	file:
invalidateTempStorage	utilities/sqlite3/sqlite3.c	/^static int invalidateTempStorage(Parse *pParse){$/;"	f	file:
ip	include/common.h	/^	char ip[16];$/;"	m	struct:net_setting
ip	utilities/modbus/modbus-tcp-private.h	/^    char ip[16];$/;"	m	struct:_modbus_tcp
isAppropriateForFactoring	utilities/sqlite3/sqlite3.c	/^static int isAppropriateForFactoring(Expr *p){$/;"	f	file:
isAttached	utilities/sqlite3/sqlite3.c	/^  int isAttached;          \/* True once backup has been registered with pager *\/$/;"	m	struct:sqlite3_backup	file:
isBusy	utilities/sqlite3/sqlite3.c	/^  int isBusy;                    \/* Do not run ReleaseMemory() if true *\/$/;"	m	struct:PGroup	file:
isCandidateForInOpt	utilities/sqlite3/sqlite3.c	/^static int isCandidateForInOpt(Select *p){$/;"	f	file:
isCheck	utilities/sqlite3/sqlite3.c	/^  u8 isCheck;          \/* True if resolving names in a CHECK constraint *\/$/;"	m	struct:NameContext	file:
isConsonant	utilities/sqlite3/sqlite3.c	/^static int isConsonant(const char *z){$/;"	f	file:
isCorrelated	utilities/sqlite3/sqlite3.c	/^    u8 isCorrelated;  \/* True if sub-query is correlated *\/$/;"	m	struct:SrcList::SrcList_item	file:
isDate	utilities/sqlite3/sqlite3.c	/^static int isDate($/;"	f	file:
isDeferred	utilities/sqlite3/sqlite3.c	/^  u8 isDeferred;    \/* True if constraint checking is deferred till COMMIT *\/$/;"	m	struct:FKey	file:
isDelete	utilities/sqlite3/sqlite3.c	/^  int isDelete;                       \/* Delete on close if true *\/$/;"	m	struct:unixFile	file:
isDelim	utilities/sqlite3/sqlite3.c	121455;"	d	file:
isDirty	utilities/sqlite3/sqlite3.c	/^  int isDirty;$/;"	m	struct:RtreeNode	file:
isDistinctIndex	utilities/sqlite3/sqlite3.c	/^static int isDistinctIndex($/;"	f	file:
isDistinctRedundant	utilities/sqlite3/sqlite3.c	/^static int isDistinctRedundant($/;"	f	file:
isEof	utilities/sqlite3/sqlite3.c	/^  int isEof;                      \/* True if cursor is at EOF *\/$/;"	m	struct:Fts3auxCursor	file:
isEof	utilities/sqlite3/sqlite3.c	/^  u8 isEof;                       \/* True if at End Of Results *\/$/;"	m	struct:Fts3Cursor	file:
isError	utilities/sqlite3/sqlite3.c	/^  int isError;          \/* Error code returned by the function. *\/$/;"	m	struct:sqlite3_context	file:
isExclusive	utilities/sqlite3/sqlite3.c	/^  u8 isExclusive;       \/* True if pWriter has an EXCLUSIVE lock on the db *\/$/;"	m	struct:BtShared	file:
isFatalError	utilities/sqlite3/sqlite3.c	/^static int isFatalError(int rc){$/;"	f	file:
isHidden	utilities/sqlite3/sqlite3.c	/^  u8 isHidden;     \/* True if this column is 'hidden' *\/$/;"	m	struct:Column	file:
isIncrblobHandle	utilities/sqlite3/sqlite3.c	/^  u8 isIncrblobHandle;      \/* True if this cursor is an incr. io handle *\/$/;"	m	struct:BtCursor	file:
isIndex	utilities/sqlite3/sqlite3.c	/^  Bool isIndex;         \/* True if an index containing keys only - no data *\/$/;"	m	struct:VdbeCursor	file:
isInit	utilities/sqlite3/sqlite3.c	/^  int isInit;                       \/* True after initialization has finished *\/$/;"	m	struct:Sqlite3Config	file:
isInit	utilities/sqlite3/sqlite3.c	/^  int isInit;                    \/* True if initialized *\/$/;"	m	struct:PCacheGlobal	file:
isInit	utilities/sqlite3/sqlite3.c	/^  u8 isInit;                      \/* 1 when initialized *\/$/;"	m	struct:WalIndexHdr	file:
isInit	utilities/sqlite3/sqlite3.c	/^  u8 isInit;           \/* True if previously initialized. MUST BE FIRST! *\/$/;"	m	struct:MemPage	file:
isInit	utilities/sqlite3/sqlite3.c	/^  unsigned char isInit;          \/* True if initialized *\/$/;"	m	struct:sqlite3PrngType	file:
isInterrupted	utilities/sqlite3/sqlite3.c	/^    volatile int isInterrupted; \/* True if sqlite3_interrupt has been called *\/$/;"	m	union:sqlite3::__anon8	file:
isLikeOrGlob	utilities/sqlite3/sqlite3.c	/^static int isLikeOrGlob($/;"	f	file:
isLookaside	utilities/sqlite3/sqlite3.c	/^static int isLookaside(sqlite3 *db, void *p){$/;"	f	file:
isLookaside	utilities/sqlite3/sqlite3.c	18531;"	d	file:
isMallocInit	utilities/sqlite3/sqlite3.c	/^  int isMallocInit;                 \/* True after malloc is initialized *\/$/;"	m	struct:Sqlite3Config	file:
isMatchOfColumn	utilities/sqlite3/sqlite3.c	/^static int isMatchOfColumn($/;"	f	file:
isMatchinfoNeeded	utilities/sqlite3/sqlite3.c	/^  int isMatchinfoNeeded;          \/* True when aMatchinfo[] needs filling in *\/$/;"	m	struct:Fts3Cursor	file:
isMultiWrite	utilities/sqlite3/sqlite3.c	/^  u8 isMultiWrite;     \/* True if statement may affect\/insert multiple rows *\/$/;"	m	struct:Parse	file:
isMutexInit	utilities/sqlite3/sqlite3.c	/^  int isMutexInit;                  \/* True after mutexes are initialized *\/$/;"	m	struct:Sqlite3Config	file:
isNT	utilities/sqlite3/sqlite3.c	/^  static int isNT(void){$/;"	f	file:
isNT	utilities/sqlite3/sqlite3.c	31787;"	d	file:
isNot	utilities/sqlite3/sqlite3.c	/^  int isNot;                          \/* True if getNextNode() sees a unary - *\/$/;"	m	struct:ParseContext	file:
isOpen	utilities/sqlite3/sqlite3.c	38308;"	d	file:
isOrdered	utilities/sqlite3/sqlite3.c	/^  Bool isOrdered;       \/* True if the underlying table is BTREE_UNORDERED *\/$/;"	m	struct:VdbeCursor	file:
isPCacheInit	utilities/sqlite3/sqlite3.c	/^  int isPCacheInit;                 \/* True after malloc is initialized *\/$/;"	m	struct:Sqlite3Config	file:
isPending	utilities/sqlite3/sqlite3.c	/^  u8 isPending;         \/* If waiting for read-locks to clear *\/$/;"	m	struct:BtShared	file:
isPrefix	utilities/sqlite3/sqlite3.c	/^  int isPrefix;                   \/* True if token ends with a "*" character *\/$/;"	m	struct:Fts3PhraseToken	file:
isPrepareV2	utilities/sqlite3/sqlite3.c	/^  u8 isPrepareV2;         \/* True if prepared with prepare_v2() *\/$/;"	m	struct:Vdbe	file:
isPrimKey	utilities/sqlite3/sqlite3.c	/^  u8 isPrimKey;    \/* True if this column is part of the PRIMARY KEY *\/$/;"	m	struct:Column	file:
isReadonly	utilities/sqlite3/sqlite3.c	/^  u8 isReadonly;             \/* True if read-only *\/$/;"	m	struct:unixShmNode	file:
isRequireSeek	utilities/sqlite3/sqlite3.c	/^  u8 isRequireSeek;               \/* True if must seek pStmt to %_content row *\/$/;"	m	struct:Fts3Cursor	file:
isSimpleCount	utilities/sqlite3/sqlite3.c	/^static Table *isSimpleCount(Select *p, AggInfo *pAggInfo){$/;"	f	file:
isSorted	utilities/sqlite3/sqlite3.c	/^  u8 isSorted;                   \/* True if pEntry is sorted *\/$/;"	m	struct:RowSet	file:
isSorter	utilities/sqlite3/sqlite3.c	/^  Bool isSorter;        \/* True if a new-style sorter *\/$/;"	m	struct:VdbeCursor	file:
isSorter	utilities/sqlite3/sqlite3.c	63164;"	d	file:
isSorter	utilities/sqlite3/sqlite3.c	63166;"	d	file:
isSortingIndex	utilities/sqlite3/sqlite3.c	/^static int isSortingIndex($/;"	f	file:
isSystemTable	utilities/sqlite3/sqlite3.c	/^static int isSystemTable(Parse *pParse, const char *zName){$/;"	f	file:
isTable	utilities/sqlite3/sqlite3.c	/^  Bool isTable;         \/* True if a table requiring integer keys *\/$/;"	m	struct:VdbeCursor	file:
isTransactionSavepoint	utilities/sqlite3/sqlite3.c	/^  u8 isTransactionSavepoint;    \/* True if the outermost savepoint is a TS *\/$/;"	m	struct:sqlite3	file:
isView	utilities/sqlite3/sqlite3.c	83668;"	d	file:
isView	utilities/sqlite3/sqlite3.c	83669;"	d	file:
isView	utilities/sqlite3/sqlite3.c	83850;"	d	file:
isView	utilities/sqlite3/sqlite3.c	87390;"	d	file:
isView	utilities/sqlite3/sqlite3.c	87391;"	d	file:
isView	utilities/sqlite3/sqlite3.c	87929;"	d	file:
isView	utilities/sqlite3/sqlite3.c	98414;"	d	file:
isView	utilities/sqlite3/sqlite3.c	98415;"	d	file:
isView	utilities/sqlite3/sqlite3.c	98825;"	d	file:
isVowel	utilities/sqlite3/sqlite3.c	/^static int isVowel(const char *z){$/;"	f	file:
isWriteLock	utilities/sqlite3/sqlite3.c	/^  u8 isWriteLock;      \/* True for write lock.  False for a read lock *\/$/;"	m	struct:TableLock	file:
ix	utilities/sqlite3/sqlite3.c	/^  int ix[BMS];                  \/* Cursor assigned to each bit *\/$/;"	m	struct:WhereMaskSet	file:
j	utilities/sqlite3/sqlite3.c	/^  unsigned char i, j;            \/* State variables *\/$/;"	m	struct:sqlite3PrngType	file:
jfd	utilities/sqlite3/sqlite3.c	/^  sqlite3_file *jfd;          \/* File descriptor for main journal *\/$/;"	m	struct:Pager	file:
jointype	utilities/sqlite3/sqlite3.c	/^    u8 jointype;      \/* Type of join between this able and the previous *\/$/;"	m	struct:SrcList::SrcList_item	file:
journalHdr	utilities/sqlite3/sqlite3.c	/^  i64 journalHdr;             \/* Byte offset to previous journal header *\/$/;"	m	struct:Pager	file:
journalHdrOffset	utilities/sqlite3/sqlite3.c	/^static i64 journalHdrOffset(Pager *pPager){$/;"	f	file:
journalMode	utilities/sqlite3/sqlite3.c	/^  u8 journalMode;             \/* One of the PAGER_JOURNALMODE_* values *\/$/;"	m	struct:Pager	file:
journalOff	utilities/sqlite3/sqlite3.c	/^  i64 journalOff;             \/* Current write offset in the journal file *\/$/;"	m	struct:Pager	file:
journalSizeLimit	utilities/sqlite3/sqlite3.c	/^  i64 journalSizeLimit;       \/* Size limit for persistent journal files *\/$/;"	m	struct:Pager	file:
jrnlBufferSize	utilities/sqlite3/sqlite3.c	/^static int jrnlBufferSize(Pager *pPager){$/;"	f	file:
jrnlClose	utilities/sqlite3/sqlite3.c	/^static int jrnlClose(sqlite3_file *pJfd){$/;"	f	file:
jrnlFileSize	utilities/sqlite3/sqlite3.c	/^static int jrnlFileSize(sqlite3_file *pJfd, sqlite_int64 *pSize){$/;"	f	file:
jrnlRead	utilities/sqlite3/sqlite3.c	/^static int jrnlRead($/;"	f	file:
jrnlSync	utilities/sqlite3/sqlite3.c	/^static int jrnlSync(sqlite3_file *pJfd, int flags){$/;"	f	file:
jrnlTruncate	utilities/sqlite3/sqlite3.c	/^static int jrnlTruncate(sqlite3_file *pJfd, sqlite_int64 size){$/;"	f	file:
jrnlWrite	utilities/sqlite3/sqlite3.c	/^static int jrnlWrite($/;"	f	file:
juliandayFunc	utilities/sqlite3/sqlite3.c	/^static void juliandayFunc($/;"	f	file:
key	utilities/sqlite3/sqlite3.c	/^struct AttachKey { int type;  Token key; };$/;"	m	struct:AttachKey	file:
keyClass	utilities/sqlite3/sqlite3.c	/^  char keyClass;          \/* HASH_INT, _POINTER, _STRING, _BINARY *\/$/;"	m	struct:Fts3Hash	file:
keyConf	utilities/sqlite3/sqlite3.c	/^  u8 keyConf;          \/* What to do in case of uniqueness conflict on iPKey *\/$/;"	m	struct:Table	file:
keyInfoFromExprList	utilities/sqlite3/sqlite3.c	/^static KeyInfo *keyInfoFromExprList(Parse *pParse, ExprList *pList){$/;"	f	file:
keywordCode	utilities/sqlite3/sqlite3.c	/^static int keywordCode(const char *z, int n){$/;"	f	file:
lastErrno	utilities/sqlite3/sqlite3.c	/^  DWORD lastErrno;           \/* The Windows errno from the last I\/O error *\/$/;"	m	struct:winShmNode	file:
lastErrno	utilities/sqlite3/sqlite3.c	/^  DWORD lastErrno;        \/* The Windows errno from the last I\/O error *\/$/;"	m	struct:winFile	file:
lastErrno	utilities/sqlite3/sqlite3.c	/^  int lastErrno;                      \/* The unix errno from last I\/O error *\/$/;"	m	struct:unixFile	file:
lastRowid	utilities/sqlite3/sqlite3.c	/^  i64 lastRowid;                \/* ROWID of most recent insert (see above) *\/$/;"	m	struct:sqlite3	file:
lastRowid	utilities/sqlite3/sqlite3.c	/^  i64 lastRowid;          \/* Last insert rowid (sqlite3.lastRowid) *\/$/;"	m	struct:VdbeFrame	file:
lastRowid	utilities/sqlite3/sqlite3.c	/^  i64 lastRowid;        \/* Last rowid from a Next or NextIdx operation *\/$/;"	m	struct:VdbeCursor	file:
last_insert_rowid	utilities/sqlite3/sqlite3.c	/^  sqlite_int64  (*last_insert_rowid)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
last_insert_rowid	utilities/sqlite3/sqlite3.c	/^static void last_insert_rowid($/;"	f	file:
leaf	utilities/sqlite3/sqlite3.c	/^  u8 leaf;             \/* True if leaf flag is set *\/$/;"	m	struct:MemPage	file:
leaveMutex	utilities/sqlite3/sqlite3.c	/^static void leaveMutex(void){$/;"	f	file:
leftColumn	utilities/sqlite3/sqlite3.c	/^    int leftColumn;         \/* Column number of X in "X <op> <expr>" *\/$/;"	m	union:WhereTerm::__anon23	file:
leftCursor	utilities/sqlite3/sqlite3.c	/^  int leftCursor;         \/* Cursor number of X in "X <op> <expr>" *\/$/;"	m	struct:WhereTerm	file:
length	utilities/sqlite3/sqlite3.c	/^  unsigned long long length;        \/* nbr of bytes to lock *\/$/;"	m	struct:ByteRangeLockPB2	file:
lengthFunc	utilities/sqlite3/sqlite3.c	/^static void lengthFunc($/;"	f	file:
lhs	utilities/sqlite3/sqlite3.c	/^  YYCODETYPE lhs;         \/* Symbol on the left-hand side of the rule *\/$/;"	m	struct:__anon26	file:
libmodbus_version_major	utilities/modbus/modbus.c	/^const unsigned int libmodbus_version_major = LIBMODBUS_VERSION_MAJOR;$/;"	v
libmodbus_version_micro	utilities/modbus/modbus.c	/^const unsigned int libmodbus_version_micro = LIBMODBUS_VERSION_MICRO;$/;"	v
libmodbus_version_minor	utilities/modbus/modbus.c	/^const unsigned int libmodbus_version_minor = LIBMODBUS_VERSION_MINOR;$/;"	v
libversion	utilities/sqlite3/sqlite3.c	/^  const char * (*libversion)(void);$/;"	m	struct:sqlite3_api_routines	file:
libversion_number	utilities/sqlite3/sqlite3.c	/^  int  (*libversion_number)(void);$/;"	m	struct:sqlite3_api_routines	file:
likeFunc	utilities/sqlite3/sqlite3.c	/^static void likeFunc($/;"	f	file:
likeInfoAlt	utilities/sqlite3/sqlite3.c	/^static const struct compareInfo likeInfoAlt = { '%', '_',   0, 0 };$/;"	v	typeref:struct:compareInfo	file:
likeInfoNorm	utilities/sqlite3/sqlite3.c	/^static const struct compareInfo likeInfoNorm = { '%', '_',   0, 1 };$/;"	v	typeref:struct:compareInfo	file:
likely	utilities/sqlite3/sqlite3.c	541;"	d	file:
likely	utilities/sqlite3/sqlite3.c	544;"	d	file:
limit	utilities/sqlite3/sqlite3.c	/^  int (*limit)(sqlite3*,int,int);$/;"	m	struct:sqlite3_api_routines	file:
list	include/def.h	/^	list_t list;				\/\/\/<链表头$/;"	m	struct:object_information
list	include/def.h	/^	list_t list;	\/\/\/<节点$/;"	m	struct:object
list	utilities/sqlite3/sqlite3.c	/^    } list;$/;"	m	union:Mem3Block::__anon19	typeref:struct:Mem3Block::__anon19::__anon21	file:
list_entry	include/list.h	40;"	d
list_init	src/kernel/list.c	/^void list_init(list_t *l)$/;"	f
list_insert_after	src/kernel/list.c	/^void list_insert_after(list_t *l, list_t *n)$/;"	f
list_insert_before	src/kernel/list.c	/^void list_insert_before(list_t *l, list_t *n)$/;"	f
list_isempty	src/kernel/list.c	/^int list_isempty(const list_t *l)$/;"	f
list_node	include/list.h	/^typedef struct list_node$/;"	s
list_remove	src/kernel/list.c	/^void list_remove(list_t *n)$/;"	f
list_t	include/list.h	/^}list_t;$/;"	t	typeref:struct:list_node
loadAnalysis	utilities/sqlite3/sqlite3.c	/^static void loadAnalysis(Parse *pParse, int iDb){$/;"	f	file:
loadExt	utilities/sqlite3/sqlite3.c	/^static void loadExt(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
local	utilities/sqlite3/sqlite3.c	/^  winceLock local;        \/* Locks obtained by this instance of winFile *\/$/;"	m	struct:winFile	file:
local_ioerr	utilities/sqlite3/sqlite3.c	/^static void local_ioerr(){$/;"	f	file:
localtime	utilities/sqlite3/sqlite3.c	/^struct tm *__cdecl localtime(const time_t *t)$/;"	f
localtimeOffset	utilities/sqlite3/sqlite3.c	/^static sqlite3_int64 localtimeOffset($/;"	f	file:
locateFkeyIndex	utilities/sqlite3/sqlite3.c	/^static int locateFkeyIndex($/;"	f	file:
lock	include/def.h	/^	pthread_mutex_t lock;		\/\/\/<锁$/;"	m	struct:object_information
lock	include/def.h	/^	pthread_mutex_t lock;$/;"	m	struct:msgqueue
lock	src/kernel/print.c	/^static pthread_mutex_t lock;$/;"	v	file:
lock	utilities/sqlite3/sqlite3.c	/^  BtLock lock;       \/* Object used to lock page 1 *\/$/;"	m	struct:Btree	file:
lockBtree	utilities/sqlite3/sqlite3.c	/^static int lockBtree(BtShared *pBt){$/;"	f	file:
lockBtreeMutex	utilities/sqlite3/sqlite3.c	/^static void lockBtreeMutex(Btree *p){$/;"	f	file:
lockError	utilities/sqlite3/sqlite3.c	/^  u8 lockError;              \/* True if a locking error has occurred *\/$/;"	m	struct:Wal	file:
lockMask	utilities/sqlite3/sqlite3.c	/^  yDbMask lockMask;       \/* Subset of btreeMask that requires a lock *\/$/;"	m	struct:Vdbe	file:
lockProxy	utilities/sqlite3/sqlite3.c	/^  unixFile *lockProxy;         \/* Open proxy lock file *\/$/;"	m	struct:proxyLockingContext	file:
lockProxyPath	utilities/sqlite3/sqlite3.c	/^  char *lockProxyPath;         \/* Name of the proxy lock file *\/$/;"	m	struct:proxyLockingContext	file:
lockTrace	utilities/sqlite3/sqlite3.c	/^static int lockTrace(int fd, int op, struct flock *p){$/;"	f	file:
locked	utilities/sqlite3/sqlite3.c	/^  u8 locked;         \/* True if db currently has pBt locked *\/$/;"	m	struct:Btree	file:
lockingContext	utilities/sqlite3/sqlite3.c	/^  void *lockingContext;               \/* Locking style specific state *\/$/;"	m	struct:unixFile	file:
locktype	utilities/sqlite3/sqlite3.c	/^  int locktype;             \/* Type of lock currently held on this file *\/$/;"	m	struct:os2File	file:
locktype	utilities/sqlite3/sqlite3.c	/^  u8 locktype;            \/* Type of lock currently held on this file *\/$/;"	m	struct:winFile	file:
log	utilities/sqlite3/sqlite3.c	/^  void (*log)(int,const char*,...);$/;"	m	struct:sqlite3_api_routines	file:
logBadConnection	utilities/sqlite3/sqlite3.c	/^static void logBadConnection(const char *zType){$/;"	f	file:
logIoerr	utilities/sqlite3/sqlite3.c	/^static void logIoerr(int nRetry){$/;"	f	file:
lookaside	utilities/sqlite3/sqlite3.c	/^  Lookaside lookaside;          \/* Lookaside malloc configuration *\/$/;"	m	struct:sqlite3	file:
lookupName	utilities/sqlite3/sqlite3.c	/^static int lookupName($/;"	f	file:
lowerFunc	utilities/sqlite3/sqlite3.c	/^static void lowerFunc(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
lparam	include/def.h	/^	LPARAM lparam;$/;"	m	struct:msg
lru	utilities/sqlite3/sqlite3.c	/^    int lru;              \/* Least recently used entry has the smallest value *\/$/;"	m	struct:Parse::yColCache	file:
m	utilities/sqlite3/sqlite3.c	/^  int h, m;          \/* Hour and minutes *\/$/;"	m	struct:DateTime	file:
m	utilities/sqlite3/sqlite3.c	/^  sqlite3_mem_methods m;            \/* Low-level memory allocation interface *\/$/;"	m	struct:Sqlite3Config	file:
mUsed	utilities/sqlite3/sqlite3.c	/^  Bitmask mUsed;                 \/* Mask of used slots *\/$/;"	m	struct:PGroupBlock	file:
m_eq_1	utilities/sqlite3/sqlite3.c	/^static int m_eq_1(const char *z){$/;"	f	file:
m_gt_0	utilities/sqlite3/sqlite3.c	/^static int m_gt_0(const char *z){$/;"	f	file:
m_gt_1	utilities/sqlite3/sqlite3.c	/^static int m_gt_1(const char *z){$/;"	f	file:
magic	utilities/sqlite3/sqlite3.c	/^  u32 magic;                      \/* Always RTREE_GEOMETRY_MAGIC *\/$/;"	m	struct:RtreeMatchArg	file:
magic	utilities/sqlite3/sqlite3.c	/^  u32 magic;                    \/* Magic number for detect library misuse *\/$/;"	m	struct:sqlite3	file:
magic	utilities/sqlite3/sqlite3.c	/^  u32 magic;              \/* Magic number for sanity checking *\/$/;"	m	struct:Vdbe	file:
magic	utilities/sqlite3/sqlite3.c	/^  u32 magic;    \/* Magic number to detect structure corruption. *\/$/;"	m	struct:winMemData	file:
main	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	/^int main(int argc, char* argv[])$/;"	f
main	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	/^void main() {}$/;"	f
main	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f
main	src/application/main.c	/^int main(int argc, char **argv)$/;"	f
major	utilities/sqlite3/sqlite3.c	/^  YYCODETYPE major;      \/* The major token value.  This is the code$/;"	m	struct:yyStackEntry	file:
malloc	utilities/sqlite3/sqlite3.c	/^  void *(*malloc)(int);$/;"	m	struct:sqlite3_api_routines	file:
mallocFailed	utilities/sqlite3/sqlite3.c	/^  int mallocFailed; \/* A memory allocation error has occurred *\/$/;"	m	struct:IntegrityCk	file:
mallocFailed	utilities/sqlite3/sqlite3.c	/^  u8   mallocFailed;   \/* Becomes true if any memory allocation fails *\/$/;"	m	struct:StrAccum	file:
mallocFailed	utilities/sqlite3/sqlite3.c	/^  u8 mallocFailed;              \/* True if we have seen a malloc failure *\/$/;"	m	struct:sqlite3	file:
mallocWithAlarm	utilities/sqlite3/sqlite3.c	/^static int mallocWithAlarm(int n, void **pp){$/;"	f	file:
mask	utilities/sqlite3/sqlite3.c	/^  struct {int value; int mask;} yy215;$/;"	m	struct:__anon24::__anon25	file:
maskPage	utilities/sqlite3/sqlite3.c	/^  u16 maskPage;        \/* Mask for page offset *\/$/;"	m	struct:MemPage	file:
matchAll	utilities/sqlite3/sqlite3.c	/^  u8 matchAll;$/;"	m	struct:compareInfo	file:
matchOne	utilities/sqlite3/sqlite3.c	/^  u8 matchOne;$/;"	m	struct:compareInfo	file:
matchQuality	utilities/sqlite3/sqlite3.c	/^static int matchQuality(FuncDef *p, int nArg, u8 enc){$/;"	f	file:
matchSet	utilities/sqlite3/sqlite3.c	/^  u8 matchSet;$/;"	m	struct:compareInfo	file:
maxCount	utilities/sqlite3/sqlite3.c	/^  u32 maxCount;       \/* Maximum instantaneous currentCount *\/$/;"	m	struct:Mem5Global	file:
maxLeaf	utilities/sqlite3/sqlite3.c	/^  u16 maxLeaf;          \/* Maximum local payload in a LEAFDATA table *\/$/;"	m	struct:BtShared	file:
maxLocal	utilities/sqlite3/sqlite3.c	/^  u16 maxLocal;         \/* Maximum local payload in non-LEAFDATA tables *\/$/;"	m	struct:BtShared	file:
maxLocal	utilities/sqlite3/sqlite3.c	/^  u16 maxLocal;        \/* Copy of BtShared.maxLocal or BtShared.maxLeaf *\/$/;"	m	struct:MemPage	file:
maxOut	utilities/sqlite3/sqlite3.c	/^  u32 maxOut;         \/* Maximum instantaneous currentOut *\/$/;"	m	struct:Mem5Global	file:
maxRequest	utilities/sqlite3/sqlite3.c	/^  u32 maxRequest;     \/* Largest allocation (exclusive of internal frag) *\/$/;"	m	struct:Mem5Global	file:
max_adu_length	utilities/modbus/modbus-private.h	/^    unsigned int max_adu_length;$/;"	m	struct:_modbus_backend
mayAbort	utilities/sqlite3/sqlite3.c	/^  u8 mayAbort;         \/* True if statement may throw an ABORT exception *\/$/;"	m	struct:Parse	file:
mbcsToUnicode	utilities/sqlite3/sqlite3.c	/^static WCHAR *mbcsToUnicode(const char *zFilename){$/;"	f	file:
mem	utilities/sqlite3/sqlite3.c	/^} mem;$/;"	v	typeref:struct:__anon18	file:
mem0	utilities/sqlite3/sqlite3.c	/^} mem0 = { 0, 0, 0, 0, 0, 0, 0, 0 };$/;"	v	typeref:struct:Mem0Global	file:
mem0	utilities/sqlite3/sqlite3.c	18169;"	d	file:
mem3	utilities/sqlite3/sqlite3.c	/^} mem3 = { 97535575 };$/;"	v	typeref:struct:Mem3Global	file:
mem3	utilities/sqlite3/sqlite3.c	15636;"	d	file:
mem5	utilities/sqlite3/sqlite3.c	/^} mem5;$/;"	v	typeref:struct:Mem5Global	file:
mem5	utilities/sqlite3/sqlite3.c	16319;"	d	file:
memAboutToChange	utilities/sqlite3/sqlite3.c	63057;"	d	file:
memAboutToChange	utilities/sqlite3/sqlite3.c	63059;"	d	file:
memDb	utilities/sqlite3/sqlite3.c	/^  u8 memDb;                   \/* True to inhibit all file I\/O *\/$/;"	m	struct:Pager	file:
memIsValid	utilities/sqlite3/sqlite3.c	12754;"	d	file:
memTracePrint	utilities/sqlite3/sqlite3.c	/^static void memTracePrint(FILE *out, Mem *p){$/;"	f	file:
memjrnlClose	utilities/sqlite3/sqlite3.c	/^static int memjrnlClose(sqlite3_file *pJfd){$/;"	f	file:
memjrnlFileSize	utilities/sqlite3/sqlite3.c	/^static int memjrnlFileSize(sqlite3_file *pJfd, sqlite_int64 *pSize){$/;"	f	file:
memjrnlRead	utilities/sqlite3/sqlite3.c	/^static int memjrnlRead($/;"	f	file:
memjrnlSync	utilities/sqlite3/sqlite3.c	/^static int memjrnlSync(sqlite3_file *NotUsed, int NotUsed2){$/;"	f	file:
memjrnlTruncate	utilities/sqlite3/sqlite3.c	/^static int memjrnlTruncate(sqlite3_file *pJfd, sqlite_int64 size){$/;"	f	file:
memjrnlWrite	utilities/sqlite3/sqlite3.c	/^static int memjrnlWrite($/;"	f	file:
memory_highwater	utilities/sqlite3/sqlite3.c	/^  sqlite3_int64 (*memory_highwater)(int);$/;"	m	struct:sqlite3_api_routines	file:
memory_used	utilities/sqlite3/sqlite3.c	/^  sqlite3_int64 (*memory_used)(void);$/;"	m	struct:sqlite3_api_routines	file:
memsys3Checkout	utilities/sqlite3/sqlite3.c	/^static void *memsys3Checkout(u32 i, u32 nBlock){$/;"	f	file:
memsys3Enter	utilities/sqlite3/sqlite3.c	/^static void memsys3Enter(void){$/;"	f	file:
memsys3Free	utilities/sqlite3/sqlite3.c	/^static void memsys3Free(void *pPrior){$/;"	f	file:
memsys3FreeUnsafe	utilities/sqlite3/sqlite3.c	/^static void memsys3FreeUnsafe(void *pOld){$/;"	f	file:
memsys3FromMaster	utilities/sqlite3/sqlite3.c	/^static void *memsys3FromMaster(u32 nBlock){$/;"	f	file:
memsys3Init	utilities/sqlite3/sqlite3.c	/^static int memsys3Init(void *NotUsed){$/;"	f	file:
memsys3Leave	utilities/sqlite3/sqlite3.c	/^static void memsys3Leave(void){$/;"	f	file:
memsys3Link	utilities/sqlite3/sqlite3.c	/^static void memsys3Link(u32 i){$/;"	f	file:
memsys3LinkIntoList	utilities/sqlite3/sqlite3.c	/^static void memsys3LinkIntoList(u32 i, u32 *pRoot){$/;"	f	file:
memsys3Malloc	utilities/sqlite3/sqlite3.c	/^static void *memsys3Malloc(int nBytes){$/;"	f	file:
memsys3MallocUnsafe	utilities/sqlite3/sqlite3.c	/^static void *memsys3MallocUnsafe(int nByte){$/;"	f	file:
memsys3Merge	utilities/sqlite3/sqlite3.c	/^static void memsys3Merge(u32 *pRoot){$/;"	f	file:
memsys3OutOfMemory	utilities/sqlite3/sqlite3.c	/^static void memsys3OutOfMemory(int nByte){$/;"	f	file:
memsys3Realloc	utilities/sqlite3/sqlite3.c	/^static void *memsys3Realloc(void *pPrior, int nBytes){$/;"	f	file:
memsys3Roundup	utilities/sqlite3/sqlite3.c	/^static int memsys3Roundup(int n){$/;"	f	file:
memsys3Shutdown	utilities/sqlite3/sqlite3.c	/^static void memsys3Shutdown(void *NotUsed){$/;"	f	file:
memsys3Size	utilities/sqlite3/sqlite3.c	/^static int memsys3Size(void *p){$/;"	f	file:
memsys3Unlink	utilities/sqlite3/sqlite3.c	/^static void memsys3Unlink(u32 i){$/;"	f	file:
memsys3UnlinkFromList	utilities/sqlite3/sqlite3.c	/^static void memsys3UnlinkFromList(u32 i, u32 *pRoot){$/;"	f	file:
memsys5Enter	utilities/sqlite3/sqlite3.c	/^static void memsys5Enter(void){$/;"	f	file:
memsys5Free	utilities/sqlite3/sqlite3.c	/^static void memsys5Free(void *pPrior){$/;"	f	file:
memsys5FreeUnsafe	utilities/sqlite3/sqlite3.c	/^static void memsys5FreeUnsafe(void *pOld){$/;"	f	file:
memsys5Init	utilities/sqlite3/sqlite3.c	/^static int memsys5Init(void *NotUsed){$/;"	f	file:
memsys5Leave	utilities/sqlite3/sqlite3.c	/^static void memsys5Leave(void){$/;"	f	file:
memsys5Link	utilities/sqlite3/sqlite3.c	/^static void memsys5Link(int i, int iLogsize){$/;"	f	file:
memsys5Log	utilities/sqlite3/sqlite3.c	/^static int memsys5Log(int iValue){$/;"	f	file:
memsys5Malloc	utilities/sqlite3/sqlite3.c	/^static void *memsys5Malloc(int nBytes){$/;"	f	file:
memsys5MallocUnsafe	utilities/sqlite3/sqlite3.c	/^static void *memsys5MallocUnsafe(int nByte){$/;"	f	file:
memsys5Realloc	utilities/sqlite3/sqlite3.c	/^static void *memsys5Realloc(void *pPrior, int nBytes){$/;"	f	file:
memsys5Roundup	utilities/sqlite3/sqlite3.c	/^static int memsys5Roundup(int n){$/;"	f	file:
memsys5Shutdown	utilities/sqlite3/sqlite3.c	/^static void memsys5Shutdown(void *NotUsed){$/;"	f	file:
memsys5Size	utilities/sqlite3/sqlite3.c	/^static int memsys5Size(void *p){$/;"	f	file:
memsys5Unlink	utilities/sqlite3/sqlite3.c	/^static void memsys5Unlink(int i, int iLogsize){$/;"	f	file:
memsys5UnlinkFirst	utilities/sqlite3/sqlite3.c	/^static int memsys5UnlinkFirst(int iLogsize){$/;"	f	file:
message	include/def.h	/^	int message;$/;"	m	struct:msg
minLeaf	utilities/sqlite3/sqlite3.c	/^  u16 minLeaf;          \/* Minimum local payload in a LEAFDATA table *\/$/;"	m	struct:BtShared	file:
minLocal	utilities/sqlite3/sqlite3.c	/^  u16 minLocal;         \/* Minimum local payload in non-LEAFDATA tables *\/$/;"	m	struct:BtShared	file:
minLocal	utilities/sqlite3/sqlite3.c	/^  u16 minLocal;        \/* Copy of BtShared.minLocal or BtShared.minLeaf *\/$/;"	m	struct:MemPage	file:
minMaxFinalize	utilities/sqlite3/sqlite3.c	/^static void minMaxFinalize(sqlite3_context *context){$/;"	f	file:
minMaxQuery	utilities/sqlite3/sqlite3.c	/^static u8 minMaxQuery(Select *p){$/;"	f	file:
minWriteFileFormat	utilities/sqlite3/sqlite3.c	/^  u8 minWriteFileFormat;  \/* Minimum file format for writable database files *\/$/;"	m	struct:Vdbe	file:
minmaxFunc	utilities/sqlite3/sqlite3.c	/^static void minmaxFunc($/;"	f	file:
minmaxStep	utilities/sqlite3/sqlite3.c	/^static void minmaxStep($/;"	f	file:
minor	utilities/sqlite3/sqlite3.c	/^  YYMINORTYPE minor;     \/* The user-supplied minor token value.  This$/;"	m	struct:yyStackEntry	file:
mnMaster	utilities/sqlite3/sqlite3.c	/^  u32 mnMaster;$/;"	m	struct:Mem3Global	file:
mnPmaSize	utilities/sqlite3/sqlite3.c	/^  int mnPmaSize;                  \/* Minimum PMA size, in bytes *\/$/;"	m	struct:VdbeSorter	file:
mnReq	utilities/sqlite3/sqlite3.c	/^  int mnReq, mxReq;                 \/* Min and max heap requests sizes *\/$/;"	m	struct:Sqlite3Config	file:
modbus_backend_t	utilities/modbus/modbus-private.h	/^} modbus_backend_t;$/;"	t	typeref:struct:_modbus_backend
modbus_bakend_type_t	utilities/modbus/modbus-private.h	/^} modbus_bakend_type_t;$/;"	t	typeref:enum:__anon1
modbus_close	utilities/modbus/modbus.c	/^void modbus_close(modbus_t *ctx)$/;"	f
modbus_connect	utilities/modbus/modbus.c	/^int modbus_connect(modbus_t *ctx)$/;"	f
modbus_crc	utilities/common/tools.c	/^unsigned short modbus_crc(char *puchMsg, int usDataLen)$/;"	f
modbus_error_recovery_mode	utilities/modbus/modbus.h	/^} modbus_error_recovery_mode;$/;"	t	typeref:enum:__anon4
modbus_flush	utilities/modbus/modbus.c	/^int modbus_flush(modbus_t *ctx)$/;"	f
modbus_free	utilities/modbus/modbus.c	/^void modbus_free(modbus_t *ctx)$/;"	f
modbus_get_byte_from_bits	utilities/modbus/modbus-data.c	/^uint8_t modbus_get_byte_from_bits(const uint8_t *src, int index,$/;"	f
modbus_get_byte_timeout	utilities/modbus/modbus.c	/^void modbus_get_byte_timeout(modbus_t *ctx, struct timeval *timeout)$/;"	f
modbus_get_float	utilities/modbus/modbus-data.c	/^float modbus_get_float(const uint16_t *src)$/;"	f
modbus_get_header_length	utilities/modbus/modbus.c	/^int modbus_get_header_length(modbus_t *ctx)$/;"	f
modbus_get_response_timeout	utilities/modbus/modbus.c	/^void modbus_get_response_timeout(modbus_t *ctx, struct timeval *timeout)$/;"	f
modbus_get_socket	utilities/modbus/modbus.c	/^int modbus_get_socket(modbus_t *ctx)$/;"	f
modbus_mapping_free	utilities/modbus/modbus.c	/^void modbus_mapping_free(modbus_mapping_t *mb_mapping)$/;"	f
modbus_mapping_new	utilities/modbus/modbus.c	/^modbus_mapping_t* modbus_mapping_new(int nb_bits, int nb_input_bits,$/;"	f
modbus_mapping_t	utilities/modbus/modbus.h	/^} modbus_mapping_t;$/;"	t	typeref:struct:__anon3
modbus_new_rtu	utilities/modbus/modbus-rtu.c	/^modbus_t* modbus_new_rtu(const char *device,$/;"	f
modbus_new_tcp	utilities/modbus/modbus-tcp.c	/^modbus_t* modbus_new_tcp(const char *ip, int port)$/;"	f
modbus_new_tcp_pi	utilities/modbus/modbus-tcp.c	/^modbus_t* modbus_new_tcp_pi(const char *node, const char *service)$/;"	f
modbus_read_bits	utilities/modbus/modbus.c	/^int modbus_read_bits(modbus_t *ctx, int addr, int nb, uint8_t *dest)$/;"	f
modbus_read_input_bits	utilities/modbus/modbus.c	/^int modbus_read_input_bits(modbus_t *ctx, int addr, int nb, uint8_t *dest)$/;"	f
modbus_read_input_registers	utilities/modbus/modbus.c	/^int modbus_read_input_registers(modbus_t *ctx, int addr, int nb,$/;"	f
modbus_read_registers	utilities/modbus/modbus.c	/^int modbus_read_registers(modbus_t *ctx, int addr, int nb, uint16_t *dest)$/;"	f
modbus_receive	utilities/modbus/modbus.c	/^int modbus_receive(modbus_t *ctx, uint8_t *req)$/;"	f
modbus_receive_confirmation	utilities/modbus/modbus.c	/^int modbus_receive_confirmation(modbus_t *ctx, uint8_t *rsp)$/;"	f
modbus_reply	utilities/modbus/modbus.c	/^int modbus_reply(modbus_t *ctx, const uint8_t *req,$/;"	f
modbus_reply_exception	utilities/modbus/modbus.c	/^int modbus_reply_exception(modbus_t *ctx, const uint8_t *req,$/;"	f
modbus_report_slave_id	utilities/modbus/modbus.c	/^int modbus_report_slave_id(modbus_t *ctx, uint8_t *dest)$/;"	f
modbus_rtu_get_serial_mode	utilities/modbus/modbus-rtu.c	/^int modbus_rtu_get_serial_mode(modbus_t *ctx) {$/;"	f
modbus_rtu_set_serial_mode	utilities/modbus/modbus-rtu.c	/^int modbus_rtu_set_serial_mode(modbus_t *ctx, int mode)$/;"	f
modbus_rtu_t	utilities/modbus/modbus-rtu-private.h	/^} modbus_rtu_t;$/;"	t	typeref:struct:_modbus_rtu
modbus_send_raw_request	utilities/modbus/modbus.c	/^int modbus_send_raw_request(modbus_t *ctx, uint8_t *raw_req, int raw_req_length)$/;"	f
modbus_set_bits_from_byte	utilities/modbus/modbus-data.c	/^void modbus_set_bits_from_byte(uint8_t *dest, int index, const uint8_t value)$/;"	f
modbus_set_bits_from_bytes	utilities/modbus/modbus-data.c	/^void modbus_set_bits_from_bytes(uint8_t *dest, int index, unsigned int nb_bits,$/;"	f
modbus_set_byte_timeout	utilities/modbus/modbus.c	/^void modbus_set_byte_timeout(modbus_t *ctx, const struct timeval *timeout)$/;"	f
modbus_set_debug	utilities/modbus/modbus.c	/^void modbus_set_debug(modbus_t *ctx, int boolean)$/;"	f
modbus_set_error_recovery	utilities/modbus/modbus.c	/^int modbus_set_error_recovery(modbus_t *ctx,$/;"	f
modbus_set_float	utilities/modbus/modbus-data.c	/^void modbus_set_float(float f, uint16_t *dest)$/;"	f
modbus_set_response_timeout	utilities/modbus/modbus.c	/^void modbus_set_response_timeout(modbus_t *ctx, const struct timeval *timeout)$/;"	f
modbus_set_slave	utilities/modbus/modbus.c	/^int modbus_set_slave(modbus_t *ctx, int slave)$/;"	f
modbus_set_socket	utilities/modbus/modbus.c	/^void modbus_set_socket(modbus_t *ctx, int socket)$/;"	f
modbus_strerror	utilities/modbus/modbus.c	/^const char *modbus_strerror(int errnum) {$/;"	f
modbus_t	utilities/modbus/modbus.h	/^typedef struct _modbus modbus_t;$/;"	t	typeref:struct:_modbus
modbus_tcp_accept	utilities/modbus/modbus-tcp.c	/^int modbus_tcp_accept(modbus_t *ctx, int *socket)$/;"	f
modbus_tcp_listen	utilities/modbus/modbus-tcp.c	/^int modbus_tcp_listen(modbus_t *ctx, int nb_connection)$/;"	f
modbus_tcp_pi_accept	utilities/modbus/modbus-tcp.c	/^int modbus_tcp_pi_accept(modbus_t *ctx, int *socket)$/;"	f
modbus_tcp_pi_listen	utilities/modbus/modbus-tcp.c	/^int modbus_tcp_pi_listen(modbus_t *ctx, int nb_connection)$/;"	f
modbus_tcp_pi_t	utilities/modbus/modbus-tcp-private.h	/^} modbus_tcp_pi_t;$/;"	t	typeref:struct:_modbus_tcp_pi
modbus_tcp_t	utilities/modbus/modbus-tcp-private.h	/^} modbus_tcp_t;$/;"	t	typeref:struct:_modbus_tcp
modbus_write_and_read_registers	utilities/modbus/modbus.c	/^int modbus_write_and_read_registers(modbus_t *ctx,$/;"	f
modbus_write_bit	utilities/modbus/modbus.c	/^int modbus_write_bit(modbus_t *ctx, int addr, int status)$/;"	f
modbus_write_bits	utilities/modbus/modbus.c	/^int modbus_write_bits(modbus_t *ctx, int addr, int nb, const uint8_t *src)$/;"	f
modbus_write_register	utilities/modbus/modbus.c	/^int modbus_write_register(modbus_t *ctx, int addr, int value)$/;"	f
modbus_write_registers	utilities/modbus/modbus.c	/^int modbus_write_registers(modbus_t *ctx, int addr, int nb, const uint16_t *src)$/;"	f
modifyPagePointer	utilities/sqlite3/sqlite3.c	/^static int modifyPagePointer(MemPage *pPage, Pgno iFrom, Pgno iTo, u8 eType){$/;"	f	file:
moveToChild	utilities/sqlite3/sqlite3.c	/^static int moveToChild(BtCursor *pCur, u32 newPgno){$/;"	f	file:
moveToLeftmost	utilities/sqlite3/sqlite3.c	/^static int moveToLeftmost(BtCursor *pCur){$/;"	f	file:
moveToParent	utilities/sqlite3/sqlite3.c	/^static void moveToParent(BtCursor *pCur){$/;"	f	file:
moveToRightmost	utilities/sqlite3/sqlite3.c	/^static int moveToRightmost(BtCursor *pCur){$/;"	f	file:
moveToRoot	utilities/sqlite3/sqlite3.c	/^static int moveToRoot(BtCursor *pCur){$/;"	f	file:
movetoTarget	utilities/sqlite3/sqlite3.c	/^  i64 movetoTarget;     \/* Argument to the deferred sqlite3BtreeMoveto() *\/$/;"	m	struct:VdbeCursor	file:
mprintf	utilities/sqlite3/sqlite3.c	/^  char * (*mprintf)(const char*,...);$/;"	m	struct:sqlite3_api_routines	file:
msg	include/def.h	/^	struct msg msg[MSGQUEUE_MAX];$/;"	m	struct:msgqueue	typeref:struct:msgqueue::msg
msg	include/def.h	/^typedef struct msg$/;"	s
msg_t	include/def.h	/^}*msg_t;$/;"	t	typeref:struct:msg
msg_type_t	utilities/modbus/modbus.c	/^} msg_type_t;$/;"	t	typeref:enum:__anon6	file:
msgqueue	include/def.h	/^	struct msgqueue msgqueue;	\/\/\/<消息队列$/;"	m	struct:object_thread	typeref:struct:object_thread::msgqueue
msgqueue	include/def.h	/^typedef struct msgqueue$/;"	s
msgqueue_t	include/def.h	/^}*msgqueue_t;$/;"	t	typeref:struct:msgqueue
multiSelect	utilities/sqlite3/sqlite3.c	/^static int multiSelect($/;"	f	file:
multiSelectCollSeq	utilities/sqlite3/sqlite3.c	/^static CollSeq *multiSelectCollSeq(Parse *pParse, Select *p, int iCol){$/;"	f	file:
multiSelectOrderBy	utilities/sqlite3/sqlite3.c	/^static int multiSelectOrderBy($/;"	f	file:
mutex	utilities/sqlite3/sqlite3.c	/^  CRITICAL_SECTION mutex;    \/* Mutex controlling the lock *\/$/;"	m	struct:sqlite3_mutex	file:
mutex	utilities/sqlite3/sqlite3.c	/^  HMTX mutex;       \/* Mutex controlling the lock *\/$/;"	m	struct:sqlite3_mutex	file:
mutex	utilities/sqlite3/sqlite3.c	/^  pthread_mutex_t mutex;     \/* Mutex controlling the lock *\/$/;"	m	struct:sqlite3_mutex	file:
mutex	utilities/sqlite3/sqlite3.c	/^  sqlite3_mutex *mutex;          \/* MUTEX_STATIC_LRU or NULL *\/$/;"	m	struct:PGroup	file:
mutex	utilities/sqlite3/sqlite3.c	/^  sqlite3_mutex *mutex;          \/* Mutex for accessing the following: *\/$/;"	m	struct:PCacheGlobal	file:
mutex	utilities/sqlite3/sqlite3.c	/^  sqlite3_mutex *mutex;         \/* Connection mutex *\/$/;"	m	struct:sqlite3	file:
mutex	utilities/sqlite3/sqlite3.c	/^  sqlite3_mutex *mutex;         \/* Mutex to serialize access *\/$/;"	m	struct:Mem0Global	file:
mutex	utilities/sqlite3/sqlite3.c	/^  sqlite3_mutex *mutex;      \/* Mutex to access this object *\/$/;"	m	struct:os2ShmNode	file:
mutex	utilities/sqlite3/sqlite3.c	/^  sqlite3_mutex *mutex;      \/* Mutex to access this object *\/$/;"	m	struct:unixShmNode	file:
mutex	utilities/sqlite3/sqlite3.c	/^  sqlite3_mutex *mutex;      \/* Mutex to access this object *\/$/;"	m	struct:winShmNode	file:
mutex	utilities/sqlite3/sqlite3.c	/^  sqlite3_mutex *mutex; \/* Non-recursive mutex required to access this object *\/$/;"	m	struct:BtShared	file:
mutex	utilities/sqlite3/sqlite3.c	/^  sqlite3_mutex *mutex;$/;"	m	struct:Mem3Global	file:
mutex	utilities/sqlite3/sqlite3.c	/^  sqlite3_mutex *mutex;$/;"	m	struct:Mem5Global	file:
mutex	utilities/sqlite3/sqlite3.c	/^  sqlite3_mutex *mutex;$/;"	m	struct:__anon18	file:
mutex	utilities/sqlite3/sqlite3.c	/^  sqlite3_mutex_methods mutex;      \/* Low-level mutex interface *\/$/;"	m	struct:Sqlite3Config	file:
mutexIsInit	utilities/sqlite3/sqlite3.c	/^static SQLITE_WSD int mutexIsInit = 0;$/;"	v	file:
mutex_alloc	utilities/sqlite3/sqlite3.c	/^  sqlite3_mutex *(*mutex_alloc)(int);$/;"	m	struct:sqlite3_api_routines	file:
mutex_enter	utilities/sqlite3/sqlite3.c	/^  void (*mutex_enter)(sqlite3_mutex*);$/;"	m	struct:sqlite3_api_routines	file:
mutex_free	utilities/sqlite3/sqlite3.c	/^  void (*mutex_free)(sqlite3_mutex*);$/;"	m	struct:sqlite3_api_routines	file:
mutex_leave	utilities/sqlite3/sqlite3.c	/^  void (*mutex_leave)(sqlite3_mutex*);$/;"	m	struct:sqlite3_api_routines	file:
mutex_try	utilities/sqlite3/sqlite3.c	/^  int (*mutex_try)(sqlite3_mutex*);$/;"	m	struct:sqlite3_api_routines	file:
mxAlloc	utilities/sqlite3/sqlite3.c	/^  int  mxAlloc;        \/* Maximum allowed string length *\/$/;"	m	struct:StrAccum	file:
mxCurrent	utilities/sqlite3/sqlite3.c	/^  int mxCurrent[NCSIZE];   \/* Highwater mark for nCurrent *\/$/;"	m	struct:__anon18	file:
mxErr	utilities/sqlite3/sqlite3.c	/^  int mxErr;        \/* Stop accumulating errors when this reaches zero *\/$/;"	m	struct:IntegrityCk	file:
mxFrame	utilities/sqlite3/sqlite3.c	/^  u32 mxFrame;                    \/* Index of last valid frame in the WAL *\/$/;"	m	struct:WalIndexHdr	file:
mxOut	utilities/sqlite3/sqlite3.c	/^  int mxOut;              \/* Highwater mark for nOut *\/$/;"	m	struct:Lookaside	file:
mxParserStack	utilities/sqlite3/sqlite3.c	/^  int mxParserStack;                \/* maximum depth of the parser stack *\/$/;"	m	struct:Sqlite3Config	file:
mxPathname	utilities/sqlite3/sqlite3.c	/^  int mxPathname;          \/* Maximum file pathname length *\/$/;"	m	struct:sqlite3_vfs	file:
mxPathname	utilities/sqlite3/sqlite3.h	/^  int mxPathname;          \/* Maximum file pathname length *\/$/;"	m	struct:sqlite3_vfs
mxPgno	utilities/sqlite3/sqlite3.c	/^  Pgno mxPgno;                \/* Maximum allowed size of the database *\/$/;"	m	struct:Pager	file:
mxPinned	utilities/sqlite3/sqlite3.c	/^  int mxPinned;                  \/* nMaxpage + 10 - nMinPage *\/$/;"	m	struct:PGroup	file:
mxPmaSize	utilities/sqlite3/sqlite3.c	/^  int mxPmaSize;                  \/* Maximum PMA size, in bytes.  0==no limit *\/$/;"	m	struct:VdbeSorter	file:
mxReq	utilities/sqlite3/sqlite3.c	/^  int mnReq, mxReq;                 \/* Min and max heap requests sizes *\/$/;"	m	struct:Sqlite3Config	file:
mxSavepoint	utilities/sqlite3/sqlite3.c	/^  int mxSavepoint;       \/* Largest valid xSavepoint integer *\/$/;"	m	struct:Fts3Table	file:
mxStrlen	utilities/sqlite3/sqlite3.c	/^  int mxStrlen;                     \/* Maximum string length *\/$/;"	m	struct:Sqlite3Config	file:
mxValue	utilities/sqlite3/sqlite3.c	/^  int mxValue[10];          \/* Maximum value *\/$/;"	m	struct:sqlite3StatType	file:
mxWalSize	utilities/sqlite3/sqlite3.c	/^  i64 mxWalSize;             \/* Truncate WAL to this size upon reset *\/$/;"	m	struct:Wal	file:
my_read	utilities/common/tools.c	/^ssize_t my_read(int fd, char *ptr)$/;"	f
n	utilities/sqlite3/sqlite3.c	/^  i64 n;$/;"	m	struct:CountCtx	file:
n	utilities/sqlite3/sqlite3.c	/^  int n;                          \/* Length of z in bytes (excl. nul-term) *\/$/;"	m	struct:StrBuffer	file:
n	utilities/sqlite3/sqlite3.c	/^  int n;                          \/* Number of bytes in buffer z *\/$/;"	m	struct:Fts3PhraseToken	file:
n	utilities/sqlite3/sqlite3.c	/^  int n;                        \/* Number of assigned cursor values *\/$/;"	m	struct:WhereMaskSet	file:
n	utilities/sqlite3/sqlite3.c	/^  int n;              \/* Number of characters in string value, excluding '\\0' *\/$/;"	m	struct:Mem	file:
n	utilities/sqlite3/sqlite3.c	/^  unsigned int n;    \/* Number of characters in this token *\/$/;"	m	struct:Token	file:
n90pct	utilities/sqlite3/sqlite3.c	/^  unsigned int n90pct;                \/* nMax*9\/10 *\/$/;"	m	struct:PCache1	file:
nAccumulator	utilities/sqlite3/sqlite3.c	/^  int nAccumulator;       \/* Number of columns that show through to the output.$/;"	m	struct:AggInfo	file:
nAdvance	utilities/sqlite3/sqlite3.c	/^  int nAdvance;                   \/* How many seg-readers to advance *\/$/;"	m	struct:Fts3MultiSegReader	file:
nAlias	utilities/sqlite3/sqlite3.c	/^  int nAlias;          \/* Number of aliased result set columns *\/$/;"	m	struct:Parse	file:
nAliasAlloc	utilities/sqlite3/sqlite3.c	/^  int nAliasAlloc;     \/* Number of allocated slots for aAlias[] *\/$/;"	m	struct:Parse	file:
nAll	utilities/sqlite3/sqlite3.c	/^  int nAll;                      \/* Size of a[] in bytes *\/$/;"	m	struct:Fts3Doclist	file:
nAlloc	utilities/sqlite3/sqlite3.c	/^  i16 nAlloc;      \/* Number of entries allocated in a[] below *\/$/;"	m	struct:SrcList	file:
nAlloc	utilities/sqlite3/sqlite3.c	/^  int  nAlloc;         \/* Amount of space allocated in zText *\/$/;"	m	struct:StrAccum	file:
nAlloc	utilities/sqlite3/sqlite3.c	/^  int nAlloc;                     \/* Allocated size of buffer z in bytes *\/$/;"	m	struct:StrBuffer	file:
nAlloc	utilities/sqlite3/sqlite3.c	/^  int nAlloc;                     \/* Bytes of space at aAlloc *\/$/;"	m	struct:VdbeSorterIter	file:
nAlloc	utilities/sqlite3/sqlite3.c	/^  int nAlloc;            \/* Number of entries allocated below *\/$/;"	m	struct:ExprList	file:
nAlloc	utilities/sqlite3/sqlite3.c	/^  int nAlloc;        \/* Slots allocated for azResult[] *\/$/;"	m	struct:TabResult	file:
nAlloc	utilities/sqlite3/sqlite3.c	/^  int nAlloc;      \/* Number of entries allocated for a[] below *\/$/;"	m	struct:IdList	file:
nAlloc	utilities/sqlite3/sqlite3.c	/^  int nAlloc[NCSIZE];      \/* Total number of allocations *\/$/;"	m	struct:__anon18	file:
nAlloc	utilities/sqlite3/sqlite3.c	/^  u64 nAlloc;         \/* Total number of calls to malloc *\/$/;"	m	struct:Mem5Global	file:
nAllocated	utilities/sqlite3/sqlite3.c	/^  int nAllocated;              \/* space allocated to zToken buffer *\/$/;"	m	struct:porter_tokenizer_cursor	file:
nArg	utilities/sqlite3/sqlite3.c	/^  i16 nArg;            \/* Number of arguments.  -1 means unlimited *\/$/;"	m	struct:FuncDef	file:
nAux	utilities/sqlite3/sqlite3.c	/^  int nAux;                     \/* Number of entries allocated for apAux[] *\/$/;"	m	struct:VdbeFunc	file:
nBackfill	utilities/sqlite3/sqlite3.c	/^  u32 nBackfill;                  \/* Number of WAL frames backfilled into DB *\/$/;"	m	struct:WalCkptInfo	file:
nBacktrace	utilities/sqlite3/sqlite3.c	/^  char nBacktrace;                    \/* Number of backtraces on this alloc *\/$/;"	m	struct:MemBlockHdr	file:
nBacktrace	utilities/sqlite3/sqlite3.c	/^  int nBacktrace;$/;"	m	struct:__anon18	file:
nBacktraceSlots	utilities/sqlite3/sqlite3.c	/^  char nBacktraceSlots;               \/* Available backtrace slots *\/$/;"	m	struct:MemBlockHdr	file:
nBackup	utilities/sqlite3/sqlite3.c	/^  int nBackup;       \/* Number of backup operations reading this btree *\/$/;"	m	struct:Btree	file:
nBlock	utilities/sqlite3/sqlite3.c	/^  int nBlock;      \/* Number of szAtom sized blocks in zPool *\/$/;"	m	struct:Mem5Global	file:
nBuf	utilities/sqlite3/sqlite3.c	/^  int nBuf;                       \/* Size of zBuf[] in bytes *\/$/;"	m	struct:JournalFile	file:
nBuffer	utilities/sqlite3/sqlite3.c	/^  int nBuffer;                    \/* Allocated size of aBuffer[] in bytes *\/$/;"	m	struct:Fts3MultiSegReader	file:
nBuffer	utilities/sqlite3/sqlite3.c	/^  int nBuffer;$/;"	m	struct:IcuCursor	file:
nBusy	utilities/sqlite3/sqlite3.c	/^  int nBusy;                  \/* Current number of users of this structure *\/$/;"	m	struct:Rtree	file:
nBusy	utilities/sqlite3/sqlite3.c	/^  int nBusy;                 \/* Incremented with each busy call *\/$/;"	m	struct:BusyHandler	file:
nByte	utilities/sqlite3/sqlite3.c	/^  int nByte;                     \/* Size of each allocation in bytes *\/$/;"	m	struct:PGroupBlockList	file:
nByte	utilities/sqlite3/sqlite3.c	/^  int nByte;              \/* Size of open blob, in bytes *\/$/;"	m	struct:Incrblob	file:
nByte	utilities/sqlite3/sqlite3.c	/^  u8 nByte;         \/* Size in byte of text or blob. *\/$/;"	m	struct:IndexSample	file:
nBytes	utilities/sqlite3/sqlite3.c	/^  int nBytes;                  \/* size of the input *\/$/;"	m	struct:simple_tokenizer_cursor	file:
nBytesPerCell	utilities/sqlite3/sqlite3.c	/^  int nBytesPerCell;          \/* Bytes consumed per cell *\/$/;"	m	struct:Rtree	file:
nCell	utilities/sqlite3/sqlite3.c	/^  u16 nCell;           \/* Number of cells on this page, local and ovfl *\/$/;"	m	struct:MemPage	file:
nChange	utilities/sqlite3/sqlite3.c	/^  int nChange;                  \/* Value returned by sqlite3_changes() *\/$/;"	m	struct:sqlite3	file:
nChange	utilities/sqlite3/sqlite3.c	/^  int nChange;            \/* Number of db changes made since last reset *\/$/;"	m	struct:Vdbe	file:
nChange	utilities/sqlite3/sqlite3.c	/^  int nChange;            \/* Statement changes (Vdbe.nChanges)     *\/$/;"	m	struct:VdbeFrame	file:
nChar	utilities/sqlite3/sqlite3.c	/^  int  nChar;          \/* Length of the string so far *\/$/;"	m	struct:StrAccum	file:
nChar	utilities/sqlite3/sqlite3.c	/^  int nChar;                  \/* Number of UChar elements in pInput *\/$/;"	m	struct:IcuCursor	file:
nChild	utilities/sqlite3/sqlite3.c	/^  u8 nChild;              \/* Number of children that must disable us *\/$/;"	m	struct:WhereTerm	file:
nChildCsr	utilities/sqlite3/sqlite3.c	/^  int nChildCsr;          \/* Number of cursors for child frame *\/$/;"	m	struct:VdbeFrame	file:
nChildMem	utilities/sqlite3/sqlite3.c	/^  int nChildMem;          \/* Number of memory cells for child frame *\/$/;"	m	struct:VdbeFrame	file:
nCkpt	utilities/sqlite3/sqlite3.c	/^  u32 nCkpt;                 \/* Checkpoint sequence counter in the wal-header *\/$/;"	m	struct:Wal	file:
nCol	utilities/sqlite3/sqlite3.c	/^  int nCol;                           \/* Number of entries in azCol[] *\/$/;"	m	struct:ParseContext	file:
nCol	utilities/sqlite3/sqlite3.c	/^  int nCol;                       \/* Number of columns in table *\/$/;"	m	struct:MatchInfo	file:
nCol	utilities/sqlite3/sqlite3.c	/^  int nCol;            \/* Number of columns in this table *\/$/;"	m	struct:Table	file:
nCol	utilities/sqlite3/sqlite3.c	/^  int nCol;         \/* Number of columns in this key *\/$/;"	m	struct:FKey	file:
nColCache	utilities/sqlite3/sqlite3.c	/^  u8 nColCache;        \/* Number of entries in the column cache *\/$/;"	m	struct:Parse	file:
nColumn	utilities/sqlite3/sqlite3.c	/^  int nColumn;                    \/* number of named columns in virtual table *\/$/;"	m	struct:Fts3Table	file:
nColumn	utilities/sqlite3/sqlite3.c	/^  int nColumn;            \/* Number of used entries in aCol[] *\/$/;"	m	struct:AggInfo	file:
nColumn	utilities/sqlite3/sqlite3.c	/^  int nColumn;       \/* Number of columns in the result *\/$/;"	m	struct:TabResult	file:
nColumn	utilities/sqlite3/sqlite3.c	/^  int nColumn;     \/* Number of columns in the table used by this index *\/$/;"	m	struct:Index	file:
nColumnAlloc	utilities/sqlite3/sqlite3.c	/^  int nColumnAlloc;       \/* Number of slots allocated for aCol[] *\/$/;"	m	struct:AggInfo	file:
nConstraint	utilities/sqlite3/sqlite3.c	/^  int nConstraint;                  \/* Number of entries in aConstraint *\/$/;"	m	struct:RtreeCursor	file:
nConstraint	utilities/sqlite3/sqlite3.c	/^  int nConstraint;           \/* Number of entries in aConstraint *\/$/;"	m	struct:sqlite3_index_info	file:
nConstraint	utilities/sqlite3/sqlite3.h	/^  int nConstraint;           \/* Number of entries in aConstraint *\/$/;"	m	struct:sqlite3_index_info
nCost	utilities/sqlite3/sqlite3.c	/^  int nCost;                      \/* Cost of running iterator *\/$/;"	m	struct:Fts3MultiSegReader	file:
nCsr	utilities/sqlite3/sqlite3.c	/^  int nCsr;                     \/* Number of cursors required *\/$/;"	m	struct:SubProgram	file:
nCurrent	utilities/sqlite3/sqlite3.c	/^  int nCurrent[NCSIZE];    \/* Current number of allocations *\/$/;"	m	struct:__anon18	file:
nCurrentPage	utilities/sqlite3/sqlite3.c	/^  int nCurrentPage;              \/* Number of purgeable pages allocated *\/$/;"	m	struct:PGroup	file:
nCursor	utilities/sqlite3/sqlite3.c	/^  u16 nCursor;            \/* Number of entries in apCsr *\/$/;"	m	struct:VdbeFrame	file:
nCursor	utilities/sqlite3/sqlite3.c	/^  u16 nCursor;            \/* Number of slots in apCsr[] *\/$/;"	m	struct:Vdbe	file:
nData	utilities/sqlite3/sqlite3.c	/^  int nData;                      \/* Bytes of data in aData *\/$/;"	m	struct:SegmentWriter	file:
nData	utilities/sqlite3/sqlite3.c	/^  int nData;                      \/* Bytes of valid data so far *\/$/;"	m	struct:SegmentNode	file:
nData	utilities/sqlite3/sqlite3.c	/^  int nData;         \/* Slots used in azResult[].  (nRow+1)*nColumn *\/$/;"	m	struct:TabResult	file:
nData	utilities/sqlite3/sqlite3.c	/^  int nData;$/;"	m	struct:PendingList	file:
nData	utilities/sqlite3/sqlite3.c	/^  u32 nData;     \/* Number of bytes of data *\/$/;"	m	struct:CellInfo	file:
nDb	utilities/sqlite3/sqlite3.c	/^  int nDb;                      \/* Number of backends currently in use *\/$/;"	m	struct:sqlite3	file:
nDeferredCons	utilities/sqlite3/sqlite3.c	/^  i64 nDeferredCons;                  \/* Number of deferred fk violations *\/$/;"	m	struct:Savepoint	file:
nDeferredCons	utilities/sqlite3/sqlite3.c	/^  i64 nDeferredCons;            \/* Net deferred constraints this transaction. *\/$/;"	m	struct:sqlite3	file:
nDepth	utilities/sqlite3/sqlite3.c	/^  int nDepth;          \/* Depth of subquery recursion. 1 for no recursion *\/$/;"	m	struct:NameContext	file:
nDim	utilities/sqlite3/sqlite3.c	/^  int nDim;                   \/* Number of dimensions *\/$/;"	m	struct:Rtree	file:
nDoc	utilities/sqlite3/sqlite3.c	/^    sqlite3_int64 nDoc;           \/* 'documents' values for current csr row *\/$/;"	m	struct:Fts3auxCursor::Fts3auxColstats	file:
nDoc	utilities/sqlite3/sqlite3.c	/^  sqlite3_int64 nDoc;             \/* Documents in table *\/$/;"	m	struct:Fts3Cursor	file:
nDoc	utilities/sqlite3/sqlite3.c	/^  sqlite3_int64 nDoc;             \/* Number of docs in database *\/$/;"	m	struct:MatchInfo	file:
nDoclist	utilities/sqlite3/sqlite3.c	/^  int nDoclist;                   \/* Size of aDoclist[] in bytes *\/$/;"	m	struct:Fts3MultiSegReader	file:
nDoclist	utilities/sqlite3/sqlite3.c	/^  int nDoclist;                   \/* Size of buffer at aDoclist *\/$/;"	m	struct:Fts3Cursor	file:
nDoclist	utilities/sqlite3/sqlite3.c	/^  int nDoclist;                   \/* Size of doclist in current entry *\/$/;"	m	struct:Fts3SegReader	file:
nEntry	utilities/sqlite3/sqlite3.c	/^    int nEntry;                   \/* Nr. of entries in aPgno[] and aIndex[] *\/$/;"	m	struct:WalIterator::WalSegment	file:
nEntry	utilities/sqlite3/sqlite3.c	/^  int nEntry;                     \/* Number of terms written to node so far *\/$/;"	m	struct:SegmentNode	file:
nEntry	utilities/sqlite3/sqlite3.c	/^  int nEntry;                    \/* Maximum number of allocations in aData[] *\/$/;"	m	struct:PGroupBlock	file:
nEq	utilities/sqlite3/sqlite3.c	/^  u32 nEq;                       \/* Number of == constraints *\/$/;"	m	struct:WherePlan	file:
nErr	utilities/sqlite3/sqlite3.c	/^  int nErr;            \/* Number of errors encountered while resolving names *\/$/;"	m	struct:NameContext	file:
nErr	utilities/sqlite3/sqlite3.c	/^  int nErr;            \/* Number of errors seen *\/$/;"	m	struct:Parse	file:
nErr	utilities/sqlite3/sqlite3.c	/^  int nErr;         \/* Number of messages written to zErrMsg so far *\/$/;"	m	struct:IntegrityCk	file:
nExpr	utilities/sqlite3/sqlite3.c	/^  int nExpr;             \/* Number of expressions on the list *\/$/;"	m	struct:ExprList	file:
nExt	utilities/sqlite3/sqlite3.c	/^  int nExt;              \/* Number of entries in aExt[] *\/          $/;"	m	struct:sqlite3AutoExtList	file:
nExtension	utilities/sqlite3/sqlite3.c	/^  int nExtension;               \/* Number of loaded extensions *\/$/;"	m	struct:sqlite3	file:
nExtra	utilities/sqlite3/sqlite3.c	/^  u16 nExtra;                 \/* Add this many bytes to each in-memory page *\/$/;"	m	struct:Pager	file:
nField	utilities/sqlite3/sqlite3.c	/^  int nField;           \/* Number of fields in the header *\/$/;"	m	struct:VdbeCursor	file:
nField	utilities/sqlite3/sqlite3.c	/^  u16 nField;         \/* Number of entries in aColl[] *\/$/;"	m	struct:KeyInfo	file:
nField	utilities/sqlite3/sqlite3.c	/^  u16 nField;         \/* Number of entries in apMem[] *\/$/;"	m	struct:UnpackedRecord	file:
nFkConstraint	utilities/sqlite3/sqlite3.c	/^  i64 nFkConstraint;      \/* Number of imm. FK constraints this VM *\/$/;"	m	struct:Vdbe	file:
nFrame	utilities/sqlite3/sqlite3.c	/^  int nFrame;             \/* Number of frames in pFrame list *\/$/;"	m	struct:Vdbe	file:
nFree	utilities/sqlite3/sqlite3.c	/^  u16 nFree;           \/* Number of free bytes on the page *\/$/;"	m	struct:MemPage	file:
nFreeSlot	utilities/sqlite3/sqlite3.c	/^  int nFreeSlot;                 \/* Number of unused pcache slots *\/$/;"	m	struct:PCacheGlobal	file:
nFresh	utilities/sqlite3/sqlite3.c	/^  u16 nFresh;                    \/* Number of objects on pFresh *\/$/;"	m	struct:RowSet	file:
nFunc	utilities/sqlite3/sqlite3.c	/^  int nFunc;              \/* Number of entries in aFunc[] *\/$/;"	m	struct:AggInfo	file:
nFuncAlloc	utilities/sqlite3/sqlite3.c	/^  int nFuncAlloc;         \/* Number of slots allocated for aFunc[] *\/$/;"	m	struct:AggInfo	file:
nHash	utilities/sqlite3/sqlite3.c	/^  unsigned int nHash;                 \/* Number of slots in apHash[] *\/$/;"	m	struct:PCache1	file:
nHeader	utilities/sqlite3/sqlite3.c	/^  u16 nHeader;   \/* Size of the cell content header in bytes *\/$/;"	m	struct:CellInfo	file:
nHeap	utilities/sqlite3/sqlite3.c	/^  int nHeap;                        \/* Size of pHeap[] *\/$/;"	m	struct:Sqlite3Config	file:
nHeight	utilities/sqlite3/sqlite3.c	/^  int nHeight;            \/* Expression tree height of current sub-select *\/$/;"	m	struct:Parse	file:
nHeight	utilities/sqlite3/sqlite3.c	/^  int nHeight;           \/* Height of the tree headed by this node *\/$/;"	m	struct:Expr	file:
nHit	utilities/sqlite3/sqlite3.c	/^  int nHit, nMiss;            \/* Cache hits and missing *\/$/;"	m	struct:Pager	file:
nId	utilities/sqlite3/sqlite3.c	/^  int nId;         \/* Number of identifiers on the list *\/$/;"	m	struct:IdList	file:
nIn	utilities/sqlite3/sqlite3.c	/^      int nIn;              \/* Number of entries in aInLoop[] *\/$/;"	m	struct:WhereLevel::__anon13::__anon14	file:
nInMemory	utilities/sqlite3/sqlite3.c	/^  int nInMemory;                  \/* Current size of pRecord list as PMA *\/$/;"	m	struct:VdbeSorter	file:
nIndex	utilities/sqlite3/sqlite3.c	/^  int nIndex;                     \/* Size of aIndex[] *\/$/;"	m	struct:Fts3Table	file:
nInput	utilities/sqlite3/sqlite3.c	/^  int nInput;                  \/* size of the input *\/$/;"	m	struct:porter_tokenizer_cursor	file:
nKey	utilities/sqlite3/sqlite3.c	/^  const char *pKey; int nKey;  \/* Key associated with this element *\/$/;"	m	struct:HashElem	file:
nKey	utilities/sqlite3/sqlite3.c	/^  i64 nKey;        \/* Size of pKey, or last integer key *\/$/;"	m	struct:BtCursor	file:
nKey	utilities/sqlite3/sqlite3.c	/^  i64 nKey;      \/* The key for INTKEY tables, or number of bytes in key *\/$/;"	m	struct:CellInfo	file:
nKey	utilities/sqlite3/sqlite3.c	/^  int nKey;                       \/* Number of bytes in key *\/$/;"	m	struct:VdbeSorterIter	file:
nKey	utilities/sqlite3/sqlite3.c	/^  void *pKey; int nKey;      \/* Key associated with this element *\/$/;"	m	struct:Fts3HashElem	file:
nLabel	utilities/sqlite3/sqlite3.c	/^  int nLabel;             \/* Number of labels used *\/$/;"	m	struct:Vdbe	file:
nLabelAlloc	utilities/sqlite3/sqlite3.c	/^  int nLabelAlloc;        \/* Number of slots allocated in aLabel[] *\/$/;"	m	struct:Vdbe	file:
nLevel	utilities/sqlite3/sqlite3.c	/^  int nLevel;                    \/* Number of nested loop *\/$/;"	m	struct:WhereInfo	file:
nList	utilities/sqlite3/sqlite3.c	/^  int nList;                     \/* Length of position list *\/$/;"	m	struct:Fts3Doclist	file:
nLocal	utilities/sqlite3/sqlite3.c	/^  u16 nLocal;    \/* Amount of payload held locally *\/$/;"	m	struct:CellInfo	file:
nLock	utilities/sqlite3/sqlite3.c	/^  int nLock;                      \/* Number of outstanding file locks *\/$/;"	m	struct:unixInodeInfo	file:
nLookaside	utilities/sqlite3/sqlite3.c	/^  int nLookaside;                   \/* Default lookaside buffer count *\/$/;"	m	struct:Sqlite3Config	file:
nMalloc	utilities/sqlite3/sqlite3.c	/^  int nMalloc;                    \/* Size of malloc'd buffer at zMalloc *\/$/;"	m	struct:SegmentNode	file:
nMalloc	utilities/sqlite3/sqlite3.c	/^  int nMalloc;                    \/* Size of malloc'd buffer at zMalloc *\/$/;"	m	struct:SegmentWriter	file:
nMatchinfo	utilities/sqlite3/sqlite3.c	/^  int nMatchinfo;                 \/* Number of elements in aMatchinfo[] *\/$/;"	m	struct:Fts3Cursor	file:
nMax	utilities/sqlite3/sqlite3.c	/^  int nMax;                           \/* Configured cache size *\/$/;"	m	struct:PCache	file:
nMax	utilities/sqlite3/sqlite3.c	/^  unsigned int nMax;                  \/* Configured "cache_size" value *\/$/;"	m	struct:PCache1	file:
nMaxArg	utilities/sqlite3/sqlite3.c	/^  int nMaxArg;         \/* Max args passed to user function by sub-program *\/$/;"	m	struct:Parse	file:
nMaxPage	utilities/sqlite3/sqlite3.c	/^  int nMaxPage;                  \/* Sum of nMax for purgeable caches *\/$/;"	m	struct:PGroup	file:
nMaxPendingData	utilities/sqlite3/sqlite3.c	/^  int nMaxPendingData;            \/* Max pending data before flush to disk *\/$/;"	m	struct:Fts3Table	file:
nMem	utilities/sqlite3/sqlite3.c	/^  int nMem;                     \/* Number of memory cells required *\/$/;"	m	struct:SubProgram	file:
nMem	utilities/sqlite3/sqlite3.c	/^  int nMem;               \/* Number of entries in aMem *\/$/;"	m	struct:VdbeFrame	file:
nMem	utilities/sqlite3/sqlite3.c	/^  int nMem;               \/* Number of memory locations currently allocated *\/$/;"	m	struct:Vdbe	file:
nMem	utilities/sqlite3/sqlite3.c	/^  int nMem;            \/* Number of memory cells used so far *\/$/;"	m	struct:Parse	file:
nMem	utilities/sqlite3/sqlite3.c	/^  int nMem;         \/* Number of registers allocated *\/$/;"	m	struct:SelectDest	file:
nMin	utilities/sqlite3/sqlite3.c	/^  unsigned int nMin;                  \/* Minimum number of pages reserved *\/$/;"	m	struct:PCache1	file:
nMinPage	utilities/sqlite3/sqlite3.c	/^  int nMinPage;                  \/* Sum of nMin for purgeable caches *\/$/;"	m	struct:PGroup	file:
nMiss	utilities/sqlite3/sqlite3.c	/^  int nHit, nMiss;            \/* Cache hits and missing *\/$/;"	m	struct:Pager	file:
nModuleArg	utilities/sqlite3/sqlite3.c	/^  int nModuleArg;      \/* Number of arguments to the module *\/$/;"	m	struct:Table	file:
nName	utilities/sqlite3/sqlite3.c	/^  int nName;                    \/* Length of the zCanonicalName[] string *\/$/;"	m	struct:vxworksFileId	file:
nNear	utilities/sqlite3/sqlite3.c	/^  int nNear;                 \/* Valid if eType==FTSQUERY_NEAR *\/$/;"	m	struct:Fts3Expr	file:
nNest	utilities/sqlite3/sqlite3.c	/^  int nNest;                          \/* Number of nested brackets *\/$/;"	m	struct:ParseContext	file:
nNode	utilities/sqlite3/sqlite3.c	/^  int nNode;                      \/* Size of buffer at aNode (or 0) *\/$/;"	m	struct:Fts3SegReader	file:
nNodeSize	utilities/sqlite3/sqlite3.c	/^  int nNodeSize;                  \/* Soft limit for node size *\/$/;"	m	struct:Fts3Table	file:
nOcc	utilities/sqlite3/sqlite3.c	/^    sqlite3_int64 nOcc;           \/* 'occurrences' values for current csr row *\/$/;"	m	struct:Fts3auxCursor::Fts3auxColstats	file:
nOffsetList	utilities/sqlite3/sqlite3.c	/^  int nOffsetList;                \/* For descending pending seg-readers only *\/$/;"	m	struct:Fts3SegReader	file:
nOp	utilities/sqlite3/sqlite3.c	/^  int nOp;                      \/* Elements in aOp[] *\/$/;"	m	struct:SubProgram	file:
nOp	utilities/sqlite3/sqlite3.c	/^  int nOp;                \/* Number of instructions in the program *\/$/;"	m	struct:Vdbe	file:
nOp	utilities/sqlite3/sqlite3.c	/^  int nOp;                \/* Size of aOp array *\/$/;"	m	struct:VdbeFrame	file:
nOpAlloc	utilities/sqlite3/sqlite3.c	/^  int nOpAlloc;           \/* Number of slots allocated for aOp[] *\/$/;"	m	struct:Vdbe	file:
nOrderBy	utilities/sqlite3/sqlite3.c	/^  int nOrderBy;              \/* Number of terms in the ORDER BY clause *\/$/;"	m	struct:sqlite3_index_info	file:
nOrderBy	utilities/sqlite3/sqlite3.h	/^  int nOrderBy;              \/* Number of terms in the ORDER BY clause *\/$/;"	m	struct:sqlite3_index_info
nOrig	utilities/sqlite3/sqlite3.c	/^  Pgno nOrig;                  \/* Original number of pages in file *\/$/;"	m	struct:PagerSavepoint	file:
nOut	utilities/sqlite3/sqlite3.c	/^  int nOut;               \/* Number of buffers currently checked out *\/$/;"	m	struct:Lookaside	file:
nOverflow	utilities/sqlite3/sqlite3.c	/^  u8 nOverflow;        \/* Number of overflow cell bodies in aCell[] *\/$/;"	m	struct:MemPage	file:
nOvfl	utilities/sqlite3/sqlite3.c	/^  int nOvfl;                      \/* Number of overflow pages to load doclist *\/$/;"	m	struct:Fts3TokenAndCost	file:
nPMA	utilities/sqlite3/sqlite3.c	/^  int nPMA;                       \/* Number of PMAs stored in pTemp1 *\/$/;"	m	struct:VdbeSorter	file:
nPage	utilities/sqlite3/sqlite3.c	/^  Pgno nPage;       \/* Number of pages in the database *\/$/;"	m	struct:IntegrityCk	file:
nPage	utilities/sqlite3/sqlite3.c	/^  int nPage;                        \/* Number of pages in pPage[] *\/$/;"	m	struct:Sqlite3Config	file:
nPage	utilities/sqlite3/sqlite3.c	/^  u32 nPage;                      \/* Size of database in pages *\/$/;"	m	struct:WalIndexHdr	file:
nPage	utilities/sqlite3/sqlite3.c	/^  u32 nPage;            \/* Number of pages in the database *\/$/;"	m	struct:BtShared	file:
nPage	utilities/sqlite3/sqlite3.c	/^  unsigned int nPage;                 \/* Total number of pages in apHash *\/$/;"	m	struct:PCache1	file:
nPagecount	utilities/sqlite3/sqlite3.c	/^  Pgno nPagecount;         \/* Total number of pages to copy *\/$/;"	m	struct:sqlite3_backup	file:
nParam	utilities/sqlite3/sqlite3.c	/^  int nParam;                     \/* Size of array aParam[] *\/$/;"	m	struct:sqlite3_rtree_geometry	file:
nParam	utilities/sqlite3/sqlite3.c	/^  int nParam;$/;"	m	struct:RtreeMatchArg	file:
nParam	utilities/sqlite3/sqlite3.h	/^  int nParam;                     \/* Size of array aParam[] *\/$/;"	m	struct:sqlite3_rtree_geometry
nPayload	utilities/sqlite3/sqlite3.c	/^  u32 nPayload;  \/* Total amount of payload *\/$/;"	m	struct:CellInfo	file:
nPendingData	utilities/sqlite3/sqlite3.c	/^  int nPendingData;               \/* Current bytes of pending data *\/$/;"	m	struct:Fts3Table	file:
nPgsz	utilities/sqlite3/sqlite3.c	/^  int nPgsz;                      \/* Page size for host database *\/$/;"	m	struct:Fts3Table	file:
nPhrase	utilities/sqlite3/sqlite3.c	/^  int nPhrase;                    \/* Number of matchable phrases in query *\/$/;"	m	struct:Fts3Cursor	file:
nPhrase	utilities/sqlite3/sqlite3.c	/^  int nPhrase;                    \/* Number of matchable phrases in query *\/$/;"	m	struct:MatchInfo	file:
nPhrase	utilities/sqlite3/sqlite3.c	/^  int nPhrase;                    \/* Number of phrases in query *\/$/;"	m	struct:SnippetIter	file:
nPhrase	utilities/sqlite3/sqlite3.c	/^  int nPhrase;                    \/* Number of phrases seen so far *\/$/;"	m	struct:LoadDoclistCtx	file:
nPool	utilities/sqlite3/sqlite3.c	/^  u32 nPool;$/;"	m	struct:Mem3Global	file:
nPopulate	utilities/sqlite3/sqlite3.c	/^  int nPopulate;                  \/* If >0, bytes of buffer aNode[] loaded *\/$/;"	m	struct:Fts3SegReader	file:
nPrefix	utilities/sqlite3/sqlite3.c	/^    int nPrefix;                  \/* Prefix length (0 for main terms index) *\/$/;"	m	struct:Fts3Table::Fts3Index	file:
nProgressOps	utilities/sqlite3/sqlite3.c	/^  int nProgressOps;             \/* Number of opcodes for progress callback *\/$/;"	m	struct:sqlite3	file:
nQPlan	utilities/sqlite3/sqlite3.c	/^static int nQPlan = 0;              \/* Next free slow in _query_plan[] *\/$/;"	v	file:
nQueryLoop	utilities/sqlite3/sqlite3.c	/^  double nQueryLoop;   \/* Estimated number of iterations of a query *\/$/;"	m	struct:Parse	file:
nRangeReg	utilities/sqlite3/sqlite3.c	/^  int nRangeReg;       \/* Size of the temporary register block *\/$/;"	m	struct:Parse	file:
nRead	utilities/sqlite3/sqlite3.c	/^  int nRead, nWrite;          \/* Database pages read\/written *\/$/;"	m	struct:Pager	file:
nReaders	utilities/sqlite3/sqlite3.c	/^  int nReaders;       \/* Number of reader locks obtained *\/$/;"	m	struct:winceLock	file:
nRec	utilities/sqlite3/sqlite3.c	/^  int nRec;                   \/* Pages journalled since last j-header written *\/$/;"	m	struct:Pager	file:
nRecyclable	utilities/sqlite3/sqlite3.c	/^  unsigned int nRecyclable;           \/* Number of pages in the LRU list *\/$/;"	m	struct:PCache1	file:
nRef	utilities/sqlite3/sqlite3.c	/^  i16 nRef;                      \/* Number of users of this page *\/$/;"	m	struct:PgHdr	file:
nRef	utilities/sqlite3/sqlite3.c	/^  int nRef;                           \/* Number of referenced pages *\/$/;"	m	struct:PCache	file:
nRef	utilities/sqlite3/sqlite3.c	/^  int nRef;                       \/* NO LONGER USED *\/$/;"	m	struct:sqlite3_vtab	file:
nRef	utilities/sqlite3/sqlite3.c	/^  int nRef;                       \/* Number of pointers to this structure *\/$/;"	m	struct:unixInodeInfo	file:
nRef	utilities/sqlite3/sqlite3.c	/^  int nRef;                     \/* Number of references to this one *\/$/;"	m	struct:vxworksFileId	file:
nRef	utilities/sqlite3/sqlite3.c	/^  int nRef;                  \/* Number of os2ShmLink objects pointing to this *\/$/;"	m	struct:os2ShmNode	file:
nRef	utilities/sqlite3/sqlite3.c	/^  int nRef;                  \/* Number of unixShm objects pointing to this *\/$/;"	m	struct:unixShmNode	file:
nRef	utilities/sqlite3/sqlite3.c	/^  int nRef;                  \/* Number of winShm objects pointing to this *\/$/;"	m	struct:winShmNode	file:
nRef	utilities/sqlite3/sqlite3.c	/^  int nRef;                 \/* Number of pointers to this structure *\/$/;"	m	struct:VTable	file:
nRef	utilities/sqlite3/sqlite3.c	/^  int nRef;             \/* Number of references to this structure *\/$/;"	m	struct:BtShared	file:
nRef	utilities/sqlite3/sqlite3.c	/^  int nRef;            \/* Number of names resolved by this context *\/$/;"	m	struct:NameContext	file:
nRef	utilities/sqlite3/sqlite3.c	/^  int nRef;$/;"	m	struct:FuncDestructor	file:
nRef	utilities/sqlite3/sqlite3.c	/^  int nRef;$/;"	m	struct:RtreeNode	file:
nRef	utilities/sqlite3/sqlite3.c	/^  u16 nRef;            \/* Number of pointers to this Table *\/$/;"	m	struct:Table	file:
nRef	utilities/sqlite3/sqlite3.c	/^  volatile int nRef;         \/* Number of enterances *\/$/;"	m	struct:sqlite3_mutex	file:
nRef	utilities/sqlite3/sqlite3.c	/^  volatile int nRef;         \/* Number of entrances *\/$/;"	m	struct:sqlite3_mutex	file:
nRef	utilities/sqlite3/sqlite3.h	/^  int nRef;                       \/* NO LONGER USED *\/$/;"	m	struct:sqlite3_vtab
nRefInitMutex	utilities/sqlite3/sqlite3.c	/^  int nRefInitMutex;                \/* Number of users of pInitMutex *\/$/;"	m	struct:Sqlite3Config	file:
nRegion	utilities/sqlite3/sqlite3.c	/^  int nRegion;               \/* Size of array apRegion *\/$/;"	m	struct:os2ShmNode	file:
nRegion	utilities/sqlite3/sqlite3.c	/^  int nRegion;               \/* Size of array apRegion *\/$/;"	m	struct:winShmNode	file:
nRegion	utilities/sqlite3/sqlite3.c	/^  u16 nRegion;               \/* Size of array apRegion *\/$/;"	m	struct:unixShmNode	file:
nRemaining	utilities/sqlite3/sqlite3.c	/^  Pgno nRemaining;         \/* Number of pages left to copy *\/$/;"	m	struct:sqlite3_backup	file:
nResColumn	utilities/sqlite3/sqlite3.c	/^  u16 nResColumn;         \/* Number of columns in one row of the result set *\/$/;"	m	struct:Vdbe	file:
nReserve	utilities/sqlite3/sqlite3.c	/^  i16 nReserve;               \/* Number of unused bytes at end of each page *\/$/;"	m	struct:Pager	file:
nReserve	utilities/sqlite3/sqlite3.c	/^  int nReserve;                  \/* Try to keep nFreeSlot above this *\/$/;"	m	struct:PCacheGlobal	file:
nRow	utilities/sqlite3/sqlite3.c	/^  double nRow;                   \/* Estimated number of rows (for EQP) *\/$/;"	m	struct:WherePlan	file:
nRow	utilities/sqlite3/sqlite3.c	/^  int nRow;          \/* Number of rows in the result *\/$/;"	m	struct:TabResult	file:
nRowAvg	utilities/sqlite3/sqlite3.c	/^  int nRowAvg;                    \/* Average size of database rows, in pages *\/$/;"	m	struct:Fts3Cursor	file:
nRowEst	utilities/sqlite3/sqlite3.c	/^  unsigned nRowEst;    \/* Estimated rows in table - from sqlite_stat1 table *\/$/;"	m	struct:Table	file:
nRowOut	utilities/sqlite3/sqlite3.c	/^  double nRowOut;                \/* Estimated number of output rows *\/$/;"	m	struct:WhereInfo	file:
nSavepoint	utilities/sqlite3/sqlite3.c	/^  int nSavepoint;               \/* Number of non-transaction savepoints *\/$/;"	m	struct:sqlite3	file:
nSavepoint	utilities/sqlite3/sqlite3.c	/^  int nSavepoint;             \/* Number of elements in aSavepoint[] *\/$/;"	m	struct:Pager	file:
nScratch	utilities/sqlite3/sqlite3.c	/^  int nScratch;                     \/* Number of scratch buffers *\/$/;"	m	struct:Sqlite3Config	file:
nScratchFree	utilities/sqlite3/sqlite3.c	/^  u32 nScratchFree;$/;"	m	struct:Mem0Global	file:
nSegment	utilities/sqlite3/sqlite3.c	/^  int nSegment;                   \/* Number of entries in aSegment[] *\/$/;"	m	struct:WalIterator	file:
nSegment	utilities/sqlite3/sqlite3.c	/^  int nSegment;                   \/* Size of apSegment array *\/$/;"	m	struct:Fts3MultiSegReader	file:
nSelectRow	utilities/sqlite3/sqlite3.c	/^  double nSelectRow;     \/* Estimated number of result rows *\/$/;"	m	struct:Select	file:
nSet	utilities/sqlite3/sqlite3.c	/^  int nSet;            \/* Number of sets used so far *\/$/;"	m	struct:Parse	file:
nSet	utilities/sqlite3/sqlite3.c	/^  u32 nSet;       \/* Number of bits that are set - only valid for aHash$/;"	m	struct:Bitvec	file:
nShared	utilities/sqlite3/sqlite3.c	/^  int nShared;                    \/* Number of SHARED locks held *\/$/;"	m	struct:unixInodeInfo	file:
nSize	utilities/sqlite3/sqlite3.c	/^  int nSize;                      \/* Size of allocation at aData *\/$/;"	m	struct:SegmentWriter	file:
nSize	utilities/sqlite3/sqlite3.c	/^  u16 nSize;     \/* Size of the cell content on the main b-tree page *\/$/;"	m	struct:CellInfo	file:
nSlot	utilities/sqlite3/sqlite3.c	/^  int nSlot;                     \/* The number of pcache slots *\/$/;"	m	struct:PCacheGlobal	file:
nSlot	utilities/sqlite3/sqlite3.c	/^  int nSlot;               \/* Number of entries in a[] *\/$/;"	m	struct:WhereClause	file:
nSnippet	utilities/sqlite3/sqlite3.c	/^  int nSnippet;                   \/* Requested snippet length (in tokens) *\/$/;"	m	struct:SnippetIter	file:
nSortingColumn	utilities/sqlite3/sqlite3.c	/^  int nSortingColumn;     \/* Number of columns in the sorting index *\/$/;"	m	struct:AggInfo	file:
nSpace	utilities/sqlite3/sqlite3.c	/^  int nSpace;$/;"	m	struct:PendingList	file:
nSrc	utilities/sqlite3/sqlite3.c	/^  i16 nSrc;        \/* Number of tables or subqueries in the FROM clause *\/$/;"	m	struct:SrcList	file:
nStat	utilities/sqlite3/sqlite3.c	/^  int nStat;                      \/* Size of aStat[] array *\/$/;"	m	struct:Fts3auxCursor	file:
nStatement	utilities/sqlite3/sqlite3.c	/^  int nStatement;               \/* Number of nested statement-transactions  *\/$/;"	m	struct:sqlite3	file:
nStmtDefCons	utilities/sqlite3/sqlite3.c	/^  i64 nStmtDefCons;       \/* Number of def. constraints when stmt started *\/$/;"	m	struct:Vdbe	file:
nStop	utilities/sqlite3/sqlite3.c	/^  int nStop;                      \/* Byte-length of string zStop *\/$/;"	m	struct:Fts3auxCursor	file:
nSub	utilities/sqlite3/sqlite3.c	/^  int nSub;                  \/* Number of entries in apSub *\/$/;"	m	struct:VdbeOpIter	file:
nSubRec	utilities/sqlite3/sqlite3.c	/^  u32 nSubRec;                \/* Number of records written to sub-journal *\/$/;"	m	struct:Pager	file:
nTab	utilities/sqlite3/sqlite3.c	/^  int nTab;            \/* Number of previously allocated VDBE cursors *\/$/;"	m	struct:Parse	file:
nTable	utilities/sqlite3/sqlite3.c	/^  int nTable;                   \/* Number of tables in the database *\/$/;"	m	struct:sqlite3	file:
nTableLock	utilities/sqlite3/sqlite3.c	/^  int nTableLock;        \/* Number of locks in aTableLock *\/$/;"	m	struct:Parse	file:
nTempInUse	utilities/sqlite3/sqlite3.c	/^  u8 nTempInUse;       \/* Number of aTempReg[] currently checked out *\/$/;"	m	struct:Parse	file:
nTempReg	utilities/sqlite3/sqlite3.c	/^  u8 nTempReg;         \/* Number of temporary registers in aTempReg[] *\/$/;"	m	struct:Parse	file:
nTerm	utilities/sqlite3/sqlite3.c	/^  int nTerm;                      \/* Number of bytes in current term *\/$/;"	m	struct:Fts3SegReader	file:
nTerm	utilities/sqlite3/sqlite3.c	/^  int nTerm;                      \/* Number of bytes in zTerm *\/$/;"	m	struct:SegmentNode	file:
nTerm	utilities/sqlite3/sqlite3.c	/^  int nTerm;                      \/* Number of bytes in zTerm *\/$/;"	m	struct:SegmentWriter	file:
nTerm	utilities/sqlite3/sqlite3.c	/^  int nTerm;                      \/* Size of zTerm in bytes *\/$/;"	m	struct:Fts3MultiSegReader	file:
nTerm	utilities/sqlite3/sqlite3.c	/^  int nTerm;               \/* Number of terms *\/$/;"	m	struct:WhereClause	file:
nTerm	utilities/sqlite3/sqlite3.c	/^  int nTerm;$/;"	m	struct:Fts3SegFilter	file:
nTermAlloc	utilities/sqlite3/sqlite3.c	/^  int nTermAlloc;                 \/* Allocated size of zTerm buffer *\/$/;"	m	struct:Fts3SegReader	file:
nTitle	utilities/sqlite3/sqlite3.c	/^  int nTitle;        \/* Bytes of zTitle to save.  Includes '\\0' and padding *\/$/;"	m	struct:__anon18	file:
nTitle	utilities/sqlite3/sqlite3.c	/^  u8 nTitle;                          \/* Bytes of title; includes '\\0' *\/$/;"	m	struct:MemBlockHdr	file:
nToken	utilities/sqlite3/sqlite3.c	/^  int nToken;                     \/* Number of tokens in phrase *\/$/;"	m	struct:SnippetPhrase	file:
nToken	utilities/sqlite3/sqlite3.c	/^  int nToken;                     \/* Number of tokens seen so far *\/$/;"	m	struct:LoadDoclistCtx	file:
nToken	utilities/sqlite3/sqlite3.c	/^  int nToken;                \/* Number of tokens in the phrase *\/$/;"	m	struct:Fts3Phrase	file:
nTokenAllocated	utilities/sqlite3/sqlite3.c	/^  int nTokenAllocated;         \/* space allocated to zToken buffer *\/$/;"	m	struct:simple_tokenizer_cursor	file:
nTotalChange	utilities/sqlite3/sqlite3.c	/^  int nTotalChange;             \/* Value returned by sqlite3_total_changes() *\/$/;"	m	struct:sqlite3	file:
nTransaction	utilities/sqlite3/sqlite3.c	/^  int nTransaction;     \/* Number of open transactions (read + write) *\/$/;"	m	struct:BtShared	file:
nTree	utilities/sqlite3/sqlite3.c	/^  int nTree;                      \/* Used size of aTree\/aIter (power of 2) *\/$/;"	m	struct:VdbeSorter	file:
nVTrans	utilities/sqlite3/sqlite3.c	/^  int nVTrans;                  \/* Allocated size of aVTrans *\/$/;"	m	struct:sqlite3	file:
nVal	utilities/sqlite3/sqlite3.c	/^  int nVal;$/;"	m	struct:SorterRecord	file:
nVar	utilities/sqlite3/sqlite3.c	/^  int nVar;            \/* Number of '?' variables seen in the SQL so far *\/$/;"	m	struct:Parse	file:
nVar	utilities/sqlite3/sqlite3.c	/^  ynVar nVar;             \/* Number of entries in aVar[] *\/$/;"	m	struct:Vdbe	file:
nVtabLock	utilities/sqlite3/sqlite3.c	/^  int nVtabLock;             \/* Number of virtual tables to lock *\/$/;"	m	struct:Parse	file:
nWiData	utilities/sqlite3/sqlite3.c	/^  int nWiData;               \/* Size of array apWiData *\/$/;"	m	struct:Wal	file:
nWrite	utilities/sqlite3/sqlite3.c	/^  int nRead, nWrite;          \/* Database pages read\/written *\/$/;"	m	struct:Pager	file:
nZero	utilities/sqlite3/sqlite3.c	/^    int nZero;          \/* Used when bit MEM_Zero is set in flags *\/$/;"	m	union:Mem::__anon17	file:
n_bytes	utilities/modbus/modbus-rtu-private.h	/^	DWORD n_bytes;$/;"	m	struct:win32_ser
name	include/def.h	/^	char name[OBJ_NAME_MAX];	\/\/\/<基类名称$/;"	m	struct:object
nameClash	utilities/sqlite3/sqlite3.c	/^  u8 nameClash;        \/* A permanent table name clashes with temp table name *\/$/;"	m	struct:Parse	file:
name_arr	utilities/common/serial_port.c	/^static int name_arr[] = {115200, 38400, 19200, 9600, 4800, 2400, 1200, 300};$/;"	v	file:
nb_bits	utilities/modbus/modbus.h	/^    int nb_bits;$/;"	m	struct:__anon3
nb_input_bits	utilities/modbus/modbus.h	/^    int nb_input_bits;$/;"	m	struct:__anon3
nb_input_registers	utilities/modbus/modbus.h	/^    int nb_input_registers;$/;"	m	struct:__anon3
nb_registers	utilities/modbus/modbus.h	/^    int nb_registers;$/;"	m	struct:__anon3
nearlyFull	utilities/sqlite3/sqlite3.c	/^  int nearlyFull;$/;"	m	struct:Mem0Global	file:
needToFreeIdxStr	utilities/sqlite3/sqlite3.c	/^  int needToFreeIdxStr;      \/* Free idxStr using sqlite3_free() if true *\/$/;"	m	struct:sqlite3_index_info	file:
needToFreeIdxStr	utilities/sqlite3/sqlite3.h	/^  int needToFreeIdxStr;      \/* Free idxStr using sqlite3_free() if true *\/$/;"	m	struct:sqlite3_index_info
nested	utilities/sqlite3/sqlite3.c	/^  u8 nested;           \/* Number of nested calls to the parser\/code generator *\/$/;"	m	struct:Parse	file:
net_setting	include/common.h	/^struct net_setting$/;"	s
newDatabase	utilities/sqlite3/sqlite3.c	/^static int newDatabase(BtShared *pBt){$/;"	f	file:
newRowid	utilities/sqlite3/sqlite3.c	/^static int newRowid(Rtree *pRtree, i64 *piRowid){$/;"	f	file:
newTnum	utilities/sqlite3/sqlite3.c	/^    int newTnum;                \/* Rootpage of table being initialized *\/$/;"	m	struct:sqlite3::sqlite3InitInfo	file:
newmask	utilities/sqlite3/sqlite3.c	/^  u32 newmask;         \/* Mask of new.* columns referenced *\/$/;"	m	struct:Parse	file:
next	include/list.h	/^	struct list_node *next;	\/\/\/<后一个$/;"	m	struct:list_node	typeref:struct:list_node::list_node
next	utilities/sqlite3/sqlite3.c	/^      u32 next;       \/* Index in mem3.aPool[] of next free chunk *\/$/;"	m	struct:Mem3Block::__anon19::__anon21	file:
next	utilities/sqlite3/sqlite3.c	/^  Fts3HashElem *next, *prev; \/* Next and previous elements in the table *\/$/;"	m	struct:Fts3HashElem	file:
next	utilities/sqlite3/sqlite3.c	/^  HashElem *next, *prev;       \/* Next and previous elements in the table *\/$/;"	m	struct:HashElem	file:
next	utilities/sqlite3/sqlite3.c	/^  int next;       \/* Index of next free chunk *\/$/;"	m	struct:Mem5Link	file:
nextAutovac	utilities/sqlite3/sqlite3.c	/^  signed char nextAutovac;      \/* Autovac setting after VACUUM if >=0 *\/$/;"	m	struct:sqlite3	file:
nextPagesize	utilities/sqlite3/sqlite3.c	/^  int nextPagesize;             \/* Pagesize after VACUUM if >0 *\/$/;"	m	struct:sqlite3	file:
nextShmId	utilities/sqlite3/sqlite3.c	/^  u8 nextShmId;              \/* Next available unixShm.id value *\/$/;"	m	struct:unixShmNode	file:
nextShmId	utilities/sqlite3/sqlite3.c	/^  u8 nextShmId;              \/* Next available winShm.id value *\/$/;"	m	struct:winShmNode	file:
next_stmt	utilities/sqlite3/sqlite3.c	/^  sqlite3_stmt *(*next_stmt)(sqlite3*,sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	file:
nfsUnlock	utilities/sqlite3/sqlite3.c	/^static int nfsUnlock(sqlite3_file *id, int eFileLock){$/;"	f	file:
noCase	utilities/sqlite3/sqlite3.c	/^  u8 noCase;$/;"	m	struct:compareInfo	file:
noReadlock	utilities/sqlite3/sqlite3.c	/^  u8 noReadlock;              \/* Do not bother to obtain readlocks *\/$/;"	m	struct:Pager	file:
noSync	utilities/sqlite3/sqlite3.c	/^  u8 noSync;                  \/* Do not sync the journal if true *\/$/;"	m	struct:Pager	file:
nocaseCollatingFunc	utilities/sqlite3/sqlite3.c	/^static int nocaseCollatingFunc($/;"	f	file:
node	utilities/modbus/modbus-tcp-private.h	/^    char node[_MODBUS_TCP_PI_NODE_LENGTH];$/;"	m	struct:_modbus_tcp_pi
nodeAcquire	utilities/sqlite3/sqlite3.c	/^nodeAcquire($/;"	f	file:
nodeDeleteCell	utilities/sqlite3/sqlite3.c	/^static void nodeDeleteCell(Rtree *pRtree, RtreeNode *pNode, int iCell){$/;"	f	file:
nodeGetCell	utilities/sqlite3/sqlite3.c	/^static void nodeGetCell($/;"	f	file:
nodeGetCoord	utilities/sqlite3/sqlite3.c	/^static void nodeGetCoord($/;"	f	file:
nodeGetRowid	utilities/sqlite3/sqlite3.c	/^static i64 nodeGetRowid($/;"	f	file:
nodeHash	utilities/sqlite3/sqlite3.c	/^static int nodeHash(i64 iNode){$/;"	f	file:
nodeHashDelete	utilities/sqlite3/sqlite3.c	/^static void nodeHashDelete(Rtree *pRtree, RtreeNode *pNode){$/;"	f	file:
nodeHashInsert	utilities/sqlite3/sqlite3.c	/^static void nodeHashInsert(Rtree *pRtree, RtreeNode *pNode){$/;"	f	file:
nodeHashLookup	utilities/sqlite3/sqlite3.c	/^static RtreeNode *nodeHashLookup(Rtree *pRtree, i64 iNode){$/;"	f	file:
nodeInsertCell	utilities/sqlite3/sqlite3.c	/^nodeInsertCell($/;"	f	file:
nodeNew	utilities/sqlite3/sqlite3.c	/^static RtreeNode *nodeNew(Rtree *pRtree, RtreeNode *pParent){$/;"	f	file:
nodeOverwriteCell	utilities/sqlite3/sqlite3.c	/^static void nodeOverwriteCell($/;"	f	file:
nodeParentIndex	utilities/sqlite3/sqlite3.c	/^static int nodeParentIndex(Rtree *pRtree, RtreeNode *pNode, int *piIndex){$/;"	f	file:
nodeReference	utilities/sqlite3/sqlite3.c	/^static void nodeReference(RtreeNode *p){$/;"	f	file:
nodeRelease	utilities/sqlite3/sqlite3.c	/^nodeRelease(Rtree *pRtree, RtreeNode *pNode){$/;"	f	file:
nodeRowidIndex	utilities/sqlite3/sqlite3.c	/^static int nodeRowidIndex($/;"	f	file:
nodeWrite	utilities/sqlite3/sqlite3.c	/^nodeWrite(Rtree *pRtree, RtreeNode *pNode){$/;"	f	file:
nodeZero	utilities/sqlite3/sqlite3.c	/^static void nodeZero(Rtree *pRtree, RtreeNode *p){$/;"	f	file:
nolockCheckReservedLock	utilities/sqlite3/sqlite3.c	/^static int nolockCheckReservedLock(sqlite3_file *NotUsed, int *pResOut){$/;"	f	file:
nolockClose	utilities/sqlite3/sqlite3.c	/^static int nolockClose(sqlite3_file *id) {$/;"	f	file:
nolockLock	utilities/sqlite3/sqlite3.c	/^static int nolockLock(sqlite3_file *NotUsed, int NotUsed2){$/;"	f	file:
nolockUnlock	utilities/sqlite3/sqlite3.c	/^static int nolockUnlock(sqlite3_file *NotUsed, int NotUsed2){$/;"	f	file:
noopMutexAlloc	utilities/sqlite3/sqlite3.c	/^static sqlite3_mutex *noopMutexAlloc(int id){ $/;"	f	file:
noopMutexEnd	utilities/sqlite3/sqlite3.c	/^static int noopMutexEnd(void){ return SQLITE_OK; }$/;"	f	file:
noopMutexEnter	utilities/sqlite3/sqlite3.c	/^static void noopMutexEnter(sqlite3_mutex *p){ UNUSED_PARAMETER(p); return; }$/;"	f	file:
noopMutexFree	utilities/sqlite3/sqlite3.c	/^static void noopMutexFree(sqlite3_mutex *p){ UNUSED_PARAMETER(p); return; }$/;"	f	file:
noopMutexInit	utilities/sqlite3/sqlite3.c	/^static int noopMutexInit(void){ return SQLITE_OK; }$/;"	f	file:
noopMutexLeave	utilities/sqlite3/sqlite3.c	/^static void noopMutexLeave(sqlite3_mutex *p){ UNUSED_PARAMETER(p); return; }$/;"	f	file:
noopMutexTry	utilities/sqlite3/sqlite3.c	/^static int noopMutexTry(sqlite3_mutex *p){$/;"	f	file:
not	utilities/sqlite3/sqlite3.c	/^  int not;         \/* True if the NOT keyword is present *\/$/;"	m	struct:LikeOp	file:
notIndexed	utilities/sqlite3/sqlite3.c	/^    u8 notIndexed;    \/* True if there is a NOT INDEXED clause *\/$/;"	m	struct:SrcList::SrcList_item	file:
notNull	utilities/sqlite3/sqlite3.c	/^  u8 notNull;      \/* True if there is a NOT NULL constraint *\/$/;"	m	struct:Column	file:
notUsed1	utilities/sqlite3/sqlite3.c	/^    double notUsed1;            \/* Spacer *\/$/;"	m	union:sqlite3::__anon8	file:
nowValue	utilities/sqlite3/sqlite3.c	/^  int nowValue[10];         \/* Current value *\/$/;"	m	struct:sqlite3StatType	file:
nrhs	utilities/sqlite3/sqlite3.c	/^  unsigned char nrhs;     \/* Number of right-hand side symbols in the rule *\/$/;"	m	struct:__anon26	file:
nullRow	utilities/sqlite3/sqlite3.c	/^  Bool nullRow;         \/* True if pointing to a row with no data *\/$/;"	m	struct:VdbeCursor	file:
nullifFunc	utilities/sqlite3/sqlite3.c	/^static void nullifFunc($/;"	f	file:
nzVar	utilities/sqlite3/sqlite3.c	/^  int nzVar;           \/* Number of available slots in azVar[] *\/$/;"	m	struct:Parse	file:
nzVar	utilities/sqlite3/sqlite3.c	/^  ynVar nzVar;            \/* Number of entries in azVar[] *\/$/;"	m	struct:Vdbe	file:
object	include/def.h	/^typedef struct object$/;"	s
object_addend	src/kernel/object.c	/^void object_addend(object_t object, const char *name, int type)$/;"	f
object_buf	include/def.h	/^typedef struct object_buf$/;"	s
object_buf_t	include/def.h	/^}*object_buf_t;$/;"	t	typeref:struct:object_buf
object_class_type	include/def.h	/^enum object_class_type$/;"	g
object_class_type_io	include/def.h	/^	object_class_type_io,			\/\/\/<IO对象$/;"	e	enum:object_class_type
object_class_type_thread	include/def.h	/^	object_class_type_thread = 0,	\/\/\/<线程对象$/;"	e	enum:object_class_type
object_class_type_timer	include/def.h	/^	object_class_type_timer,		\/\/\/<定时器对象$/;"	e	enum:object_class_type
object_class_type_unknown	include/def.h	/^	object_class_type_unknown$/;"	e	enum:object_class_type
object_container	include/common.h	/^struct object_information object_container[object_class_type_unknown];$/;"	v	typeref:struct:object_information
object_container_init	src/kernel/object.c	/^void object_container_init(void)$/;"	f
object_delete	src/kernel/object.c	/^void object_delete(object_t object)$/;"	f
object_find	src/kernel/object.c	/^object_t object_find(const char *name, int type)$/;"	f
object_information	include/def.h	/^struct object_information$/;"	s
object_io	include/def.h	/^typedef struct object_io$/;"	s
object_io_t	include/def.h	/^}*object_io_t;$/;"	t	typeref:struct:object_io
object_iter	src/kernel/object.c	/^object_t object_iter(int type, object_t po)$/;"	f
object_t	include/def.h	/^}*object_t;$/;"	t	typeref:struct:object
object_thread	include/def.h	/^typedef struct object_thread$/;"	s
object_thread_t	include/def.h	/^}*object_thread_t;$/;"	t	typeref:struct:object_thread
object_timer	include/def.h	/^typedef struct object_timer$/;"	s
object_timer_t	include/def.h	/^}*object_timer_t;$/;"	t	typeref:struct:object_timer
offset	utilities/sqlite3/sqlite3.c	/^  unsigned long long offset;        \/* offset to first byte to lock *\/$/;"	m	struct:ByteRangeLockPB2	file:
offsetof	utilities/sqlite3/sqlite3.c	7642;"	d	file:
okOnePass	utilities/sqlite3/sqlite3.c	/^  u8 okOnePass;        \/* Ok to use one-pass algorithm for UPDATE or DELETE *\/$/;"	m	struct:WhereInfo	file:
oldLockingContext	utilities/sqlite3/sqlite3.c	/^  void *oldLockingContext;     \/* Original lockingcontext to restore on close *\/$/;"	m	struct:proxyLockingContext	file:
old_dcb	utilities/modbus/modbus-rtu-private.h	/^    DCB old_dcb;$/;"	m	struct:_modbus_rtu
old_tios	utilities/modbus/modbus-rtu-private.h	/^    struct termios old_tios;$/;"	m	struct:_modbus_rtu	typeref:struct:_modbus_rtu::termios
oldmask	utilities/sqlite3/sqlite3.c	/^  u32 oldmask;         \/* Mask of old.* columns referenced *\/$/;"	m	struct:Parse	file:
omit	utilities/sqlite3/sqlite3.c	/^    unsigned char omit;      \/* Do not code a test for this constraint *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint_usage	file:
omit	utilities/sqlite3/sqlite3.h	/^    unsigned char omit;      \/* Do not code a test for this constraint *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint_usage
onError	utilities/sqlite3/sqlite3.c	/^  u8 onError;      \/* OE_Abort, OE_Ignore, OE_Replace, or OE_None *\/$/;"	m	struct:Index	file:
onErrorText	utilities/sqlite3/sqlite3.c	/^static const char *onErrorText(int onError){$/;"	f	file:
op	utilities/sqlite3/sqlite3.c	/^     unsigned char op;         \/* Constraint operator *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint	file:
op	utilities/sqlite3/sqlite3.c	/^  int op;                         \/* Constraining operation *\/$/;"	m	struct:RtreeConstraint	file:
op	utilities/sqlite3/sqlite3.c	/^  u8 op, p5;            \/* Opcode and P5 of the opcode that ends the loop *\/$/;"	m	struct:WhereLevel	file:
op	utilities/sqlite3/sqlite3.c	/^  u8 op;                   \/* Split operator.  TK_AND or TK_OR *\/$/;"	m	struct:WhereClause	file:
op	utilities/sqlite3/sqlite3.c	/^  u8 op;                  \/* One of TK_DELETE, TK_UPDATE, TK_INSERT         *\/$/;"	m	struct:Trigger	file:
op	utilities/sqlite3/sqlite3.c	/^  u8 op;                 \/* One of: TK_UNION TK_ALL TK_INTERSECT TK_EXCEPT *\/$/;"	m	struct:Select	file:
op	utilities/sqlite3/sqlite3.c	/^  u8 op;                 \/* Operation performed by this node *\/$/;"	m	struct:Expr	file:
op	utilities/sqlite3/sqlite3.c	/^  u8 op;               \/* One of TK_DELETE, TK_UPDATE, TK_INSERT, TK_SELECT *\/$/;"	m	struct:TriggerStep	file:
op	utilities/sqlite3/sqlite3.h	/^     unsigned char op;         \/* Constraint operator *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint
op2	utilities/sqlite3/sqlite3.c	/^  u8 op2;                \/* If a TK_REGISTER, the original value of Expr.op *\/$/;"	m	struct:Expr	file:
opIterNext	utilities/sqlite3/sqlite3.c	/^static Op *opIterNext(VdbeOpIter *p){$/;"	f	file:
opPrecedence	utilities/sqlite3/sqlite3.c	/^static int opPrecedence(Fts3Expr *p){$/;"	f	file:
opcode	utilities/sqlite3/sqlite3.c	/^  u8 opcode;          \/* What operation to perform *\/$/;"	m	struct:VdbeOp	file:
opcode	utilities/sqlite3/sqlite3.c	/^  u8 opcode;          \/* What operation to perform *\/$/;"	m	struct:VdbeOpList	file:
open	utilities/sqlite3/sqlite3.c	/^  int  (*open)(const char*,sqlite3**);$/;"	m	struct:sqlite3_api_routines	file:
open16	utilities/sqlite3/sqlite3.c	/^  int  (*open16)(const void*,sqlite3**);$/;"	m	struct:sqlite3_api_routines	file:
openDatabase	utilities/sqlite3/sqlite3.c	/^static int openDatabase($/;"	f	file:
openDirectory	utilities/sqlite3/sqlite3.c	/^static int openDirectory(const char *zFilename, int *pFd){$/;"	f	file:
openFlags	utilities/sqlite3/sqlite3.c	/^  int openFlags;                      \/* The flags specified at open() *\/$/;"	m	struct:unixFile	file:
openFlags	utilities/sqlite3/sqlite3.c	/^  u8 openFlags;         \/* Flags to sqlite3BtreeOpen() *\/$/;"	m	struct:BtShared	file:
openFlags	utilities/sqlite3/sqlite3.c	/^  unsigned int openFlags;       \/* Flags passed to sqlite3_vfs.xOpen() *\/$/;"	m	struct:sqlite3	file:
openStatTable	utilities/sqlite3/sqlite3.c	/^static void openStatTable($/;"	f	file:
openSubJournal	utilities/sqlite3/sqlite3.c	/^static int openSubJournal(Pager *pPager){$/;"	f	file:
open_serial_port	utilities/common/serial_port.c	/^int open_serial_port(int port, int baud, int databits, int stopbits, int parity)$/;"	f
open_v2	utilities/sqlite3/sqlite3.c	/^  int (*open_v2)(const char*,sqlite3**,int,const char*);$/;"	m	struct:sqlite3_api_routines	file:
operatorMask	utilities/sqlite3/sqlite3.c	/^static u16 operatorMask(int op){$/;"	f	file:
opflags	utilities/sqlite3/sqlite3.c	/^  u8 opflags;         \/* Mask of the OPFLG_* flags in opcodes.h *\/$/;"	m	struct:VdbeOp	file:
orconf	utilities/sqlite3/sqlite3.c	/^  int orconf;             \/* Default ON CONFLICT policy *\/$/;"	m	struct:TriggerPrg	file:
orconf	utilities/sqlite3/sqlite3.c	/^  u8 orconf;           \/* OE_Rollback etc. *\/$/;"	m	struct:TriggerStep	file:
orderByConsumed	utilities/sqlite3/sqlite3.c	/^  int orderByConsumed;       \/* True if output is already ordered *\/$/;"	m	struct:sqlite3_index_info	file:
orderByConsumed	utilities/sqlite3/sqlite3.h	/^  int orderByConsumed;       \/* True if output is already ordered *\/$/;"	m	struct:sqlite3_index_info
orphanTrigger	utilities/sqlite3/sqlite3.c	/^    u8 orphanTrigger;           \/* Last statement is orphaned TEMP trigger *\/$/;"	m	struct:sqlite3::sqlite3InitInfo	file:
os2Access	utilities/sqlite3/sqlite3.c	/^static int os2Access($/;"	f	file:
os2CheckReservedLock	utilities/sqlite3/sqlite3.c	/^static int os2CheckReservedLock( sqlite3_file *id, int *pOut ){$/;"	f	file:
os2Close	utilities/sqlite3/sqlite3.c	/^static int os2Close( sqlite3_file *id ){$/;"	f	file:
os2CurrentTime	utilities/sqlite3/sqlite3.c	/^static int os2CurrentTime( sqlite3_vfs *pVfs, double *prNow ){$/;"	f	file:
os2CurrentTimeInt64	utilities/sqlite3/sqlite3.c	/^static int os2CurrentTimeInt64(sqlite3_vfs *pVfs, sqlite3_int64 *piNow){$/;"	f	file:
os2Delete	utilities/sqlite3/sqlite3.c	/^static int os2Delete($/;"	f	file:
os2DeviceCharacteristics	utilities/sqlite3/sqlite3.c	/^static int os2DeviceCharacteristics(sqlite3_file *id){$/;"	f	file:
os2DlClose	utilities/sqlite3/sqlite3.c	/^static void os2DlClose(sqlite3_vfs *pVfs, void *pHandle){$/;"	f	file:
os2DlClose	utilities/sqlite3/sqlite3.c	24159;"	d	file:
os2DlError	utilities/sqlite3/sqlite3.c	/^static void os2DlError(sqlite3_vfs *pVfs, int nBuf, char *zBufOut){$/;"	f	file:
os2DlError	utilities/sqlite3/sqlite3.c	24157;"	d	file:
os2DlOpen	utilities/sqlite3/sqlite3.c	/^static void *os2DlOpen(sqlite3_vfs *pVfs, const char *zFilename){$/;"	f	file:
os2DlOpen	utilities/sqlite3/sqlite3.c	24156;"	d	file:
os2DlSym	utilities/sqlite3/sqlite3.c	/^static void (*os2DlSym(sqlite3_vfs *pVfs, void *pHandle, const char *zSymbol))(void){$/;"	f	file:
os2DlSym	utilities/sqlite3/sqlite3.c	24158;"	d	file:
os2File	utilities/sqlite3/sqlite3.c	/^struct os2File {$/;"	s	file:
os2File	utilities/sqlite3/sqlite3.c	/^typedef struct os2File os2File;         \/* The file structure *\/$/;"	t	typeref:struct:os2File	file:
os2FileControl	utilities/sqlite3/sqlite3.c	/^static int os2FileControl(sqlite3_file *id, int op, void *pArg){$/;"	f	file:
os2FileSize	utilities/sqlite3/sqlite3.c	/^static int os2FileSize( sqlite3_file *id, sqlite3_int64 *pSize ){$/;"	f	file:
os2FullPathname	utilities/sqlite3/sqlite3.c	/^static int os2FullPathname($/;"	f	file:
os2GetLastError	utilities/sqlite3/sqlite3.c	/^static int os2GetLastError(sqlite3_vfs *pVfs, int nBuf, char *zBuf){$/;"	f	file:
os2IoMethod	utilities/sqlite3/sqlite3.c	/^static const sqlite3_io_methods os2IoMethod = {$/;"	v	file:
os2Lock	utilities/sqlite3/sqlite3.c	/^static int os2Lock( sqlite3_file *id, int locktype ){$/;"	f	file:
os2MutexAlloc	utilities/sqlite3/sqlite3.c	/^static sqlite3_mutex *os2MutexAlloc(int iType){$/;"	f	file:
os2MutexEnd	utilities/sqlite3/sqlite3.c	/^static int os2MutexEnd(void){ return SQLITE_OK; }$/;"	f	file:
os2MutexEnter	utilities/sqlite3/sqlite3.c	/^static void os2MutexEnter(sqlite3_mutex *p){$/;"	f	file:
os2MutexFree	utilities/sqlite3/sqlite3.c	/^static void os2MutexFree(sqlite3_mutex *p){$/;"	f	file:
os2MutexHeld	utilities/sqlite3/sqlite3.c	/^static int os2MutexHeld(sqlite3_mutex *p){$/;"	f	file:
os2MutexInit	utilities/sqlite3/sqlite3.c	/^static int os2MutexInit(void){ return SQLITE_OK; }$/;"	f	file:
os2MutexLeave	utilities/sqlite3/sqlite3.c	/^static void os2MutexLeave(sqlite3_mutex *p){$/;"	f	file:
os2MutexNotheld	utilities/sqlite3/sqlite3.c	/^static int os2MutexNotheld(sqlite3_mutex *p){$/;"	f	file:
os2MutexTrace	utilities/sqlite3/sqlite3.c	/^static void os2MutexTrace(sqlite3_mutex *p, char *pAction){$/;"	f	file:
os2MutexTry	utilities/sqlite3/sqlite3.c	/^static int os2MutexTry(sqlite3_mutex *p){$/;"	f	file:
os2Open	utilities/sqlite3/sqlite3.c	/^static int os2Open($/;"	f	file:
os2OpenSharedMemory	utilities/sqlite3/sqlite3.c	/^static int os2OpenSharedMemory( os2File *fd, int szRegion ) {$/;"	f	file:
os2PurgeShmNodes	utilities/sqlite3/sqlite3.c	/^static void os2PurgeShmNodes( int deleteFlag ) {$/;"	f	file:
os2Randomness	utilities/sqlite3/sqlite3.c	/^static int os2Randomness(sqlite3_vfs *pVfs, int nBuf, char *zBuf ){$/;"	f	file:
os2Read	utilities/sqlite3/sqlite3.c	/^static int os2Read($/;"	f	file:
os2SectorSize	utilities/sqlite3/sqlite3.c	/^static int os2SectorSize(sqlite3_file *id){$/;"	f	file:
os2ShmBarrier	utilities/sqlite3/sqlite3.c	/^static void os2ShmBarrier($/;"	f	file:
os2ShmBarrier	utilities/sqlite3/sqlite3.c	23777;"	d	file:
os2ShmEnterMutex	utilities/sqlite3/sqlite3.c	/^static void os2ShmEnterMutex(void){$/;"	f	file:
os2ShmLeaveMutex	utilities/sqlite3/sqlite3.c	/^static void os2ShmLeaveMutex(void){$/;"	f	file:
os2ShmLink	utilities/sqlite3/sqlite3.c	/^struct os2ShmLink {$/;"	s	file:
os2ShmLink	utilities/sqlite3/sqlite3.c	/^typedef struct os2ShmLink os2ShmLink;   \/* A connection to shared-memory *\/$/;"	t	typeref:struct:os2ShmLink	file:
os2ShmLock	utilities/sqlite3/sqlite3.c	/^static int os2ShmLock($/;"	f	file:
os2ShmLock	utilities/sqlite3/sqlite3.c	23776;"	d	file:
os2ShmMap	utilities/sqlite3/sqlite3.c	/^static int os2ShmMap($/;"	f	file:
os2ShmMap	utilities/sqlite3/sqlite3.c	23775;"	d	file:
os2ShmMutexHeld	utilities/sqlite3/sqlite3.c	/^static int os2ShmMutexHeld(void) {$/;"	f	file:
os2ShmNode	utilities/sqlite3/sqlite3.c	/^struct os2ShmNode {$/;"	s	file:
os2ShmNode	utilities/sqlite3/sqlite3.c	/^typedef struct os2ShmNode os2ShmNode;   \/* A shared descritive memory node *\/$/;"	t	typeref:struct:os2ShmNode	file:
os2ShmNodeList	utilities/sqlite3/sqlite3.c	/^static os2ShmNode *os2ShmNodeList = NULL;$/;"	v	file:
os2ShmSystemLock	utilities/sqlite3/sqlite3.c	/^static int os2ShmSystemLock($/;"	f	file:
os2ShmUnmap	utilities/sqlite3/sqlite3.c	/^static int os2ShmUnmap($/;"	f	file:
os2ShmUnmap	utilities/sqlite3/sqlite3.c	23778;"	d	file:
os2Sleep	utilities/sqlite3/sqlite3.c	/^static int os2Sleep( sqlite3_vfs *pVfs, int microsec ){$/;"	f	file:
os2Sync	utilities/sqlite3/sqlite3.c	/^static int os2Sync( sqlite3_file *id, int flags ){$/;"	f	file:
os2Truncate	utilities/sqlite3/sqlite3.c	/^static int os2Truncate( sqlite3_file *id, i64 nByte ){$/;"	f	file:
os2Unlock	utilities/sqlite3/sqlite3.c	/^static int os2Unlock( sqlite3_file *id, int locktype ){$/;"	f	file:
os2Write	utilities/sqlite3/sqlite3.c	/^static int os2Write($/;"	f	file:
osAccess	utilities/sqlite3/sqlite3.c	24902;"	d	file:
osClose	utilities/sqlite3/sqlite3.c	24899;"	d	file:
osFallocate	utilities/sqlite3/sqlite3.c	24978;"	d	file:
osFchmod	utilities/sqlite3/sqlite3.c	24971;"	d	file:
osFcntl	utilities/sqlite3/sqlite3.c	24928;"	d	file:
osFcntl	utilities/sqlite3/sqlite3.c	25181;"	d	file:
osFcntl	utilities/sqlite3/sqlite3.c	25182;"	d	file:
osFstat	utilities/sqlite3/sqlite3.c	24918;"	d	file:
osFtruncate	utilities/sqlite3/sqlite3.c	24925;"	d	file:
osGetcwd	utilities/sqlite3/sqlite3.c	24905;"	d	file:
osLocaltime	utilities/sqlite3/sqlite3.c	/^static int osLocaltime(time_t *t, struct tm *pTm){$/;"	f	file:
osOpen	utilities/sqlite3/sqlite3.c	24896;"	d	file:
osOpenDirectory	utilities/sqlite3/sqlite3.c	24984;"	d	file:
osPread	utilities/sqlite3/sqlite3.c	24938;"	d	file:
osPread64	utilities/sqlite3/sqlite3.c	24945;"	d	file:
osPwrite	utilities/sqlite3/sqlite3.c	24955;"	d	file:
osPwrite64	utilities/sqlite3/sqlite3.c	24963;"	d	file:
osRead	utilities/sqlite3/sqlite3.c	24931;"	d	file:
osStat	utilities/sqlite3/sqlite3.c	24908;"	d	file:
osUnlink	utilities/sqlite3/sqlite3.c	24981;"	d	file:
osWrite	utilities/sqlite3/sqlite3.c	24948;"	d	file:
overflow	utilities/sqlite3/sqlite3.c	/^  u8 overflow;      \/* True if integer overflow seen *\/$/;"	m	struct:SumCtx	file:
overload_function	utilities/sqlite3/sqlite3.c	/^  int (*overload_function)(sqlite3*, const char *zFuncName, int nArg);$/;"	m	struct:sqlite3_api_routines	file:
owner	utilities/sqlite3/sqlite3.c	/^  volatile DWORD owner;      \/* Thread holding this mutex *\/$/;"	m	struct:sqlite3_mutex	file:
owner	utilities/sqlite3/sqlite3.c	/^  volatile pthread_t owner;  \/* Thread that is within this mutex *\/$/;"	m	struct:sqlite3_mutex	file:
p	utilities/sqlite3/sqlite3.c	/^    void *p;               \/* Generic pointer *\/$/;"	m	union:VdbeOp::__anon7	file:
p1	utilities/sqlite3/sqlite3.c	/^  int p1, p2;           \/* Operands of the opcode used to ends the loop *\/$/;"	m	struct:WhereLevel	file:
p1	utilities/sqlite3/sqlite3.c	/^  int p1;             \/* First operand *\/$/;"	m	struct:VdbeOp	file:
p1	utilities/sqlite3/sqlite3.c	/^  signed char p1;     \/* First operand *\/$/;"	m	struct:VdbeOpList	file:
p2	utilities/sqlite3/sqlite3.c	/^  int p1, p2;           \/* Operands of the opcode used to ends the loop *\/$/;"	m	struct:WhereLevel	file:
p2	utilities/sqlite3/sqlite3.c	/^  int p2;             \/* Second parameter (often the jump destination) *\/$/;"	m	struct:VdbeOp	file:
p2	utilities/sqlite3/sqlite3.c	/^  signed char p2;     \/* Second parameter (often the jump destination) *\/$/;"	m	struct:VdbeOpList	file:
p3	utilities/sqlite3/sqlite3.c	/^  int p3;             \/* The third parameter *\/$/;"	m	struct:VdbeOp	file:
p3	utilities/sqlite3/sqlite3.c	/^  signed char p3;     \/* Third parameter *\/$/;"	m	struct:VdbeOpList	file:
p4	utilities/sqlite3/sqlite3.c	/^  } p4;$/;"	m	struct:VdbeOp	typeref:union:VdbeOp::__anon7	file:
p4type	utilities/sqlite3/sqlite3.c	/^  signed char p4type; \/* One of the P4_xxx constants for p4 *\/$/;"	m	struct:VdbeOp	file:
p5	utilities/sqlite3/sqlite3.c	/^  u8 op, p5;            \/* Opcode and P5 of the opcode that ends the loop *\/$/;"	m	struct:WhereLevel	file:
p5	utilities/sqlite3/sqlite3.c	/^  u8 p5;              \/* Fifth parameter is an unsigned character *\/$/;"	m	struct:VdbeOp	file:
pAggInfo	utilities/sqlite3/sqlite3.c	/^  AggInfo *pAggInfo;     \/* Used by TK_AGG_COLUMN and TK_AGG_FUNCTION *\/$/;"	m	struct:Expr	file:
pAggInfo	utilities/sqlite3/sqlite3.c	/^  AggInfo *pAggInfo;   \/* Information about aggregates at this level *\/$/;"	m	struct:NameContext	file:
pAinc	utilities/sqlite3/sqlite3.c	/^  AutoincInfo *pAinc;  \/* Information about AUTOINCREMENT counters *\/$/;"	m	struct:Parse	file:
pAndInfo	utilities/sqlite3/sqlite3.c	/^    WhereAndInfo *pAndInfo; \/* Extra information if eOperator==WO_AND *\/$/;"	m	union:WhereTerm::__anon23	file:
pAppData	utilities/sqlite3/sqlite3.c	/^  void *pAppData;                \/* Argument to xInit() and xShutdown() *\/$/;"	m	struct:sqlite3_mem_methods	file:
pAppData	utilities/sqlite3/sqlite3.c	/^  void *pAppData;          \/* Pointer to application-specific data *\/$/;"	m	struct:sqlite3_vfs	file:
pAppData	utilities/sqlite3/sqlite3.h	/^  void *pAppData;                \/* Argument to xInit() and xShutdown() *\/$/;"	m	struct:sqlite3_mem_methods
pAppData	utilities/sqlite3/sqlite3.h	/^  void *pAppData;          \/* Pointer to application-specific data *\/$/;"	m	struct:sqlite3_vfs
pArg	utilities/sqlite3/sqlite3.c	/^  void *pArg;                \/* First arg to busy callback *\/$/;"	m	struct:BusyHandler	file:
pArg	utilities/sqlite3/sqlite3.c	/^  void *pArg;$/;"	m	struct:sqlite3_pcache_methods	file:
pArg	utilities/sqlite3/sqlite3.h	/^  void *pArg;$/;"	m	struct:sqlite3_pcache_methods
pAuthArg	utilities/sqlite3/sqlite3.c	/^  void *pAuthArg;               \/* 1st argument to the access auth function *\/$/;"	m	struct:sqlite3	file:
pAux	utilities/sqlite3/sqlite3.c	/^    void *pAux;                   \/* Aux data for the i-th argument *\/$/;"	m	struct:VdbeFunc::AuxData	file:
pAux	utilities/sqlite3/sqlite3.c	/^  void *pAux;                          \/* pAux passed to create_module() *\/$/;"	m	struct:Module	file:
pBackup	utilities/sqlite3/sqlite3.c	/^  sqlite3_backup *pBackup;    \/* Pointer to list of ongoing backup processes *\/$/;"	m	struct:Pager	file:
pBlob	utilities/sqlite3/sqlite3.c	/^  sqlite3_blob *pBlob;            \/* If not NULL, blob handle to read node *\/$/;"	m	struct:Fts3SegReader	file:
pBlockList	utilities/sqlite3/sqlite3.c	/^  PGroupBlockList *pBlockList;   \/* List of block-lists for this group *\/$/;"	m	struct:PGroup	file:
pBlockingConnection	utilities/sqlite3/sqlite3.c	/^  sqlite3 *pBlockingConnection; \/* Connection that caused SQLITE_LOCKED *\/$/;"	m	struct:sqlite3	file:
pBt	utilities/sqlite3/sqlite3.c	/^  BtShared *pBt;            \/* The BtShared this cursor points to *\/$/;"	m	struct:BtCursor	file:
pBt	utilities/sqlite3/sqlite3.c	/^  BtShared *pBt;       \/* Pointer to BtShared that this page is part of *\/$/;"	m	struct:MemPage	file:
pBt	utilities/sqlite3/sqlite3.c	/^  BtShared *pBt;     \/* Sharable content of this btree *\/$/;"	m	struct:Btree	file:
pBt	utilities/sqlite3/sqlite3.c	/^  BtShared *pBt;    \/* The tree being checked out *\/$/;"	m	struct:IntegrityCk	file:
pBt	utilities/sqlite3/sqlite3.c	/^  Btree *pBt;           \/* Separate file holding temporary table *\/$/;"	m	struct:VdbeCursor	file:
pBt	utilities/sqlite3/sqlite3.c	/^  Btree *pBt;          \/* The B*Tree structure for this database file *\/$/;"	m	struct:Db	file:
pBtree	utilities/sqlite3/sqlite3.c	/^  Btree *pBtree;            \/* The Btree to which this cursor belongs *\/$/;"	m	struct:BtCursor	file:
pBtree	utilities/sqlite3/sqlite3.c	/^  Btree *pBtree;        \/* Btree handle holding this lock *\/$/;"	m	struct:BtLock	file:
pBusyHandlerArg	utilities/sqlite3/sqlite3.c	/^  void *pBusyHandlerArg;      \/* Context argument for xBusyHandler *\/$/;"	m	struct:Pager	file:
pCache	utilities/sqlite3/sqlite3.c	/^  PCache *pCache;                \/* Cache that owns this page *\/$/;"	m	struct:PgHdr	file:
pCache	utilities/sqlite3/sqlite3.c	/^  PCache1 *pCache;               \/* Cache that currently owns this page *\/$/;"	m	struct:PgHdr1	file:
pCache	utilities/sqlite3/sqlite3.c	/^  sqlite3_pcache *pCache;             \/* Pluggable cache module *\/$/;"	m	struct:PCache	file:
pCell	utilities/sqlite3/sqlite3.c	/^    u8 *pCell;          \/* Pointers to the body of the overflow cell *\/$/;"	m	struct:MemPage::_OvflCell	file:
pCell	utilities/sqlite3/sqlite3.c	/^  u8 *pCell;     \/* Pointer to the start of cell content *\/$/;"	m	struct:CellInfo	file:
pCheck	utilities/sqlite3/sqlite3.c	/^  Expr *pCheck;        \/* The AND of all CHECK constraints *\/$/;"	m	struct:Table	file:
pChunk	utilities/sqlite3/sqlite3.c	/^  FileChunk *pChunk;              \/* Specific chunk into which cursor points *\/$/;"	m	struct:FilePoint	file:
pChunk	utilities/sqlite3/sqlite3.c	/^  struct RowSetChunk *pChunk;    \/* List of all chunk allocations *\/$/;"	m	struct:RowSet	typeref:struct:RowSet::RowSetChunk	file:
pCodec	utilities/sqlite3/sqlite3.c	/^  void *pCodec;               \/* First argument to xCodec... methods *\/$/;"	m	struct:Pager	file:
pColl	utilities/sqlite3/sqlite3.c	/^    CollSeq *pColl;        \/* Used when p4type is P4_COLLSEQ *\/$/;"	m	union:VdbeOp::__anon7	file:
pColl	utilities/sqlite3/sqlite3.c	/^  CollSeq *pColl;        \/* The collation type of the column or 0 *\/$/;"	m	struct:Expr	file:
pColl	utilities/sqlite3/sqlite3.c	/^  CollSeq *pColl;       \/* Collating sequence *\/$/;"	m	struct:sqlite3_context	file:
pCollNeededArg	utilities/sqlite3/sqlite3.c	/^  void *pCollNeededArg;$/;"	m	struct:sqlite3	file:
pColumns	utilities/sqlite3/sqlite3.c	/^  IdList *pColumns;       \/* If this is an UPDATE OF <column-list> trigger,$/;"	m	struct:Trigger	file:
pCommitArg	utilities/sqlite3/sqlite3.c	/^  void *pCommitArg;                 \/* Argument to xCommitCallback() *\/   $/;"	m	struct:sqlite3	file:
pContext	utilities/sqlite3/sqlite3.c	/^  void *pContext;                 \/* Copy of pContext passed to s_r_g_c() *\/$/;"	m	struct:sqlite3_rtree_geometry	file:
pContext	utilities/sqlite3/sqlite3.c	/^  void *pContext;$/;"	m	struct:RtreeGeomCallback	file:
pContext	utilities/sqlite3/sqlite3.c	/^  void *pContext;$/;"	m	struct:RtreeMatchArg	file:
pContext	utilities/sqlite3/sqlite3.h	/^  void *pContext;                 \/* Copy of pContext passed to s_r_g_c() *\/$/;"	m	struct:sqlite3_rtree_geometry
pCsr	utilities/sqlite3/sqlite3.c	/^  BtCursor *pCsr;         \/* Cursor pointing at blob row *\/$/;"	m	struct:Incrblob	file:
pCsr	utilities/sqlite3/sqlite3.c	/^  Fts3Cursor *pCsr;               \/* Cursor snippet is being generated from *\/$/;"	m	struct:SnippetIter	file:
pCsr	utilities/sqlite3/sqlite3.c	/^  Fts3Cursor *pCsr;               \/* FTS3 Cursor *\/$/;"	m	struct:LoadDoclistCtx	file:
pCsr	utilities/sqlite3/sqlite3.c	/^  Fts3Cursor *pCsr;$/;"	m	struct:TermOffsetCtx	file:
pCtx	utilities/sqlite3/sqlite3.c	/^  sqlite3_context *pCtx;              \/* Write error message here *\/$/;"	m	struct:ParseContext	file:
pCurrent	utilities/sqlite3/sqlite3.c	/^  sqlite3_syscall_ptr pCurrent; \/* Current value of the system call *\/$/;"	m	struct:unix_syscall	file:
pCursor	utilities/sqlite3/sqlite3.c	/^  BtCursor *pCursor;    \/* A list of all open cursors *\/$/;"	m	struct:BtShared	file:
pCursor	utilities/sqlite3/sqlite3.c	/^  BtCursor *pCursor;    \/* The cursor structure of the backend *\/$/;"	m	struct:VdbeCursor	file:
pCursor	utilities/sqlite3/sqlite3.c	/^  Fts3Cursor *pCursor;            \/* FTS3 Cursor *\/$/;"	m	struct:MatchInfo	file:
pData	utilities/sqlite3/sqlite3.c	/^  void *pData;                   \/* Content of this page *\/$/;"	m	struct:PgHdr	file:
pDbFd	utilities/sqlite3/sqlite3.c	/^  sqlite3_file *pDbFd;       \/* File handle for the database file *\/$/;"	m	struct:Wal	file:
pDbPage	utilities/sqlite3/sqlite3.c	/^  DbPage *pDbPage;     \/* Pager page handle *\/$/;"	m	struct:MemPage	file:
pDef	utilities/sqlite3/sqlite3.c	/^    FuncDef *pDef;      \/* Used only when flags==MEM_Agg *\/$/;"	m	union:Mem::__anon17	file:
pDefault	utilities/sqlite3/sqlite3.c	/^  sqlite3_syscall_ptr pDefault; \/* Default value *\/$/;"	m	struct:unix_syscall	file:
pDeferred	utilities/sqlite3/sqlite3.c	/^  Fts3DeferredToken *pDeferred;   \/* Deferred search tokens, if any *\/$/;"	m	struct:Fts3Cursor	file:
pDeferred	utilities/sqlite3/sqlite3.c	/^  Fts3DeferredToken *pDeferred;   \/* Deferred token object for this token *\/$/;"	m	struct:Fts3PhraseToken	file:
pDelFrame	utilities/sqlite3/sqlite3.c	/^  VdbeFrame *pDelFrame;   \/* List of frame objects to free on VM reset *\/$/;"	m	struct:Vdbe	file:
pDeleteNode	utilities/sqlite3/sqlite3.c	/^  sqlite3_stmt *pDeleteNode;$/;"	m	struct:Rtree	file:
pDeleteParent	utilities/sqlite3/sqlite3.c	/^  sqlite3_stmt *pDeleteParent;$/;"	m	struct:Rtree	file:
pDeleteRowid	utilities/sqlite3/sqlite3.c	/^  sqlite3_stmt *pDeleteRowid;$/;"	m	struct:Rtree	file:
pDeleted	utilities/sqlite3/sqlite3.c	/^  RtreeNode *pDeleted;$/;"	m	struct:Rtree	file:
pDest	utilities/sqlite3/sqlite3.c	/^  Btree *pDest;            \/* Destination b-tree file *\/$/;"	m	struct:sqlite3_backup	file:
pDestDb	utilities/sqlite3/sqlite3.c	/^  sqlite3* pDestDb;        \/* Destination database handle *\/$/;"	m	struct:sqlite3_backup	file:
pDestructor	utilities/sqlite3/sqlite3.c	/^  FuncDestructor *pDestructor;   \/* Reference counted destructor function *\/$/;"	m	struct:FuncDef	file:
pDflt	utilities/sqlite3/sqlite3.c	/^  Expr *pDflt;     \/* Default value of this column *\/$/;"	m	struct:Column	file:
pDfltColl	utilities/sqlite3/sqlite3.c	/^  CollSeq *pDfltColl;           \/* The default collating sequence (BINARY) *\/$/;"	m	struct:sqlite3	file:
pDirty	utilities/sqlite3/sqlite3.c	/^  PgHdr *pDirty, *pDirtyTail;         \/* List of dirty pages in LRU order *\/$/;"	m	struct:PCache	file:
pDirty	utilities/sqlite3/sqlite3.c	/^  PgHdr *pDirty;                 \/* Transient list of dirty pages *\/$/;"	m	struct:PgHdr	file:
pDirtyNext	utilities/sqlite3/sqlite3.c	/^  PgHdr *pDirtyNext;             \/* Next element in list of dirty pages *\/$/;"	m	struct:PgHdr	file:
pDirtyPrev	utilities/sqlite3/sqlite3.c	/^  PgHdr *pDirtyPrev;             \/* Previous element in list of dirty pages *\/$/;"	m	struct:PgHdr	file:
pDirtyTail	utilities/sqlite3/sqlite3.c	/^  PgHdr *pDirty, *pDirtyTail;         \/* List of dirty pages in LRU order *\/$/;"	m	struct:PCache	file:
pDisconnect	utilities/sqlite3/sqlite3.c	/^  VTable *pDisconnect;    \/* Disconnect these in next sqlite3_prepare() *\/$/;"	m	struct:sqlite3	file:
pEList	utilities/sqlite3/sqlite3.c	/^  ExprList *pEList;      \/* The fields of the result *\/$/;"	m	struct:Select	file:
pEList	utilities/sqlite3/sqlite3.c	/^  ExprList *pEList;    \/* Optional list of named expressions *\/$/;"	m	struct:NameContext	file:
pEnd	utilities/sqlite3/sqlite3.c	/^  void *pEnd;             \/* First byte past end of available space *\/$/;"	m	struct:Lookaside	file:
pEnd	utilities/sqlite3/sqlite3.c	/^  void *pStart, *pEnd;           \/* Bounds of pagecache malloc range *\/$/;"	m	struct:PCacheGlobal	file:
pEntry	utilities/sqlite3/sqlite3.c	/^  struct RowSetEntry *pEntry;    \/* List of entries using pRight *\/$/;"	m	struct:RowSet	typeref:struct:RowSet::RowSetEntry	file:
pErr	utilities/sqlite3/sqlite3.c	/^  sqlite3_value *pErr;          \/* Most recent error message *\/$/;"	m	struct:sqlite3	file:
pExpr	utilities/sqlite3/sqlite3.c	/^    Expr *pExpr;             \/* Expression encoding the function *\/$/;"	m	struct:AggInfo::AggInfo_func	file:
pExpr	utilities/sqlite3/sqlite3.c	/^    Expr *pExpr;             \/* The original expression *\/$/;"	m	struct:AggInfo::AggInfo_col	file:
pExpr	utilities/sqlite3/sqlite3.c	/^    Expr *pExpr;           \/* The list of expressions *\/$/;"	m	struct:ExprList::ExprList_item	file:
pExpr	utilities/sqlite3/sqlite3.c	/^  Expr *pExpr;            \/* Pointer to the subexpression that is this term *\/$/;"	m	struct:WhereTerm	file:
pExpr	utilities/sqlite3/sqlite3.c	/^  Expr *pExpr;          \/* The expression parse tree *\/$/;"	m	struct:ExprSpan	file:
pExpr	utilities/sqlite3/sqlite3.c	/^  Fts3Expr *pExpr;                \/* Parsed MATCH query string *\/$/;"	m	struct:Fts3Cursor	file:
pExpr	utilities/sqlite3/sqlite3.c	/^  Fts3Expr *pExpr;                \/* Pointer to phrase expression *\/$/;"	m	struct:LcsIterator	file:
pExprList	utilities/sqlite3/sqlite3.c	/^  ExprList *pExprList; \/* SET clause for UPDATE.  VALUES clause for INSERT *\/$/;"	m	struct:TriggerStep	file:
pExtra	utilities/sqlite3/sqlite3.c	/^  void *pExtra;                  \/* Extra content *\/$/;"	m	struct:PgHdr	file:
pFKey	utilities/sqlite3/sqlite3.c	/^  FKey *pFKey;         \/* Linked list of all foreign keys in this table *\/$/;"	m	struct:Table	file:
pFile	utilities/sqlite3/sqlite3.c	/^  sqlite3_file *pFile;            \/* File iterator is reading from *\/$/;"	m	struct:VdbeSorterIter	file:
pFiller	utilities/sqlite3/sqlite3.c	/^  void *pFiller;      \/* So that sizeof(Mem) is a multiple of 8 *\/$/;"	m	struct:Mem	file:
pFilter	utilities/sqlite3/sqlite3.c	/^  Fts3SegFilter *pFilter;         \/* Pointer to filter object *\/$/;"	m	struct:Fts3MultiSegReader	file:
pFirst	utilities/sqlite3/sqlite3.c	/^  FileChunk *pFirst;              \/* Head of in-memory chunk-list *\/$/;"	m	struct:MemJournal	file:
pFirst	utilities/sqlite3/sqlite3.c	/^  PGroupBlock *pFirst;           \/* First PGroupBlock in list *\/$/;"	m	struct:PGroupBlockList	file:
pFirst	utilities/sqlite3/sqlite3.c	/^  os2ShmLink *pFirst;        \/* First os2ShmLink object pointing to this *\/$/;"	m	struct:os2ShmNode	file:
pFirst	utilities/sqlite3/sqlite3.c	/^  struct MemBlockHdr *pFirst;$/;"	m	struct:__anon18	typeref:struct:__anon18::MemBlockHdr	file:
pFirst	utilities/sqlite3/sqlite3.c	/^  unixShm *pFirst;           \/* All unixShm objects pointing to this *\/$/;"	m	struct:unixShmNode	file:
pFirst	utilities/sqlite3/sqlite3.c	/^  winShm *pFirst;            \/* All winShm objects pointing to this *\/$/;"	m	struct:winShmNode	file:
pFrame	utilities/sqlite3/sqlite3.c	/^    VdbeFrame *pFrame;  \/* Used when flags==MEM_Frame *\/$/;"	m	union:Mem::__anon17	file:
pFrame	utilities/sqlite3/sqlite3.c	/^  VdbeFrame *pFrame;      \/* Parent frame *\/$/;"	m	struct:Vdbe	file:
pFree	utilities/sqlite3/sqlite3.c	/^  LookasideSlot *pFree;   \/* List of available buffers *\/$/;"	m	struct:Lookaside	file:
pFree	utilities/sqlite3/sqlite3.c	/^  PgFreeslot *pFree;             \/* Free page blocks *\/$/;"	m	struct:PCacheGlobal	file:
pFree	utilities/sqlite3/sqlite3.c	/^  void *pFree;            \/* Free this when deleting the vdbe *\/$/;"	m	struct:Vdbe	file:
pFresh	utilities/sqlite3/sqlite3.c	/^  struct RowSetEntry *pFresh;    \/* Source of new entry objects *\/$/;"	m	struct:RowSet	typeref:struct:RowSet::RowSetEntry	file:
pFrom	utilities/sqlite3/sqlite3.c	/^  Table *pFrom;     \/* Table containing the REFERENCES clause (aka: Child) *\/$/;"	m	struct:FKey	file:
pFts3Tab	utilities/sqlite3/sqlite3.c	/^  Fts3Table *pFts3Tab;$/;"	m	struct:Fts3auxTable	file:
pFunc	utilities/sqlite3/sqlite3.c	/^    FuncDef *pFunc;          \/* The aggregate function implementation *\/$/;"	m	struct:AggInfo::AggInfo_func	file:
pFunc	utilities/sqlite3/sqlite3.c	/^    FuncDef *pFunc;        \/* Used when p4type is P4_FUNCDEF *\/$/;"	m	union:VdbeOp::__anon7	file:
pFunc	utilities/sqlite3/sqlite3.c	/^  FuncDef *pFunc;               \/* The definition of the function *\/$/;"	m	struct:VdbeFunc	file:
pFunc	utilities/sqlite3/sqlite3.c	/^  FuncDef *pFunc;       \/* Pointer to function information.  MUST BE FIRST *\/$/;"	m	struct:sqlite3_context	file:
pGeom	utilities/sqlite3/sqlite3.c	/^  sqlite3_rtree_geometry *pGeom;  \/* Constraint callback argument for a MATCH *\/$/;"	m	struct:RtreeConstraint	file:
pGroup	utilities/sqlite3/sqlite3.c	/^  PGroup *pGroup;                     \/* PGroup this cache belongs to *\/$/;"	m	struct:PCache1	file:
pGroupBy	utilities/sqlite3/sqlite3.c	/^  ExprList *pGroupBy;     \/* The group by clause *\/$/;"	m	struct:AggInfo	file:
pGroupBy	utilities/sqlite3/sqlite3.c	/^  ExprList *pGroupBy;    \/* The GROUP BY clause *\/$/;"	m	struct:Select	file:
pHasContent	utilities/sqlite3/sqlite3.c	/^  Bitvec *pHasContent;  \/* Set of pages moved to free-list this transaction *\/$/;"	m	struct:BtShared	file:
pHash	utilities/sqlite3/sqlite3.c	/^  FuncDef *pHash;      \/* Next with a different name but the same hash *\/$/;"	m	struct:FuncDef	file:
pHaving	utilities/sqlite3/sqlite3.c	/^  Expr *pHaving;         \/* The HAVING clause *\/$/;"	m	struct:Select	file:
pHead	utilities/sqlite3/sqlite3.c	/^  char *pHead;                    \/* Position list data following iHead *\/$/;"	m	struct:SnippetPhrase	file:
pHeap	utilities/sqlite3/sqlite3.c	/^  void *pHeap;                      \/* Heap storage space *\/$/;"	m	struct:Sqlite3Config	file:
pI64	utilities/sqlite3/sqlite3.c	/^    i64 *pI64;             \/* Used when p4type is P4_INT64 *\/$/;"	m	union:VdbeOp::__anon7	file:
pId	utilities/sqlite3/sqlite3.c	/^  struct vxworksFileId *pId;          \/* Unique file ID *\/$/;"	m	struct:unixFile	typeref:struct:unixFile::vxworksFileId	file:
pId	utilities/sqlite3/sqlite3.c	/^  struct vxworksFileId *pId;  \/* Unique file ID for vxworks. *\/$/;"	m	struct:unixFileId	typeref:struct:unixFileId::vxworksFileId	file:
pIdList	utilities/sqlite3/sqlite3.c	/^  IdList *pIdList;     \/* Column names for INSERT *\/$/;"	m	struct:TriggerStep	file:
pIdx	utilities/sqlite3/sqlite3.c	/^    Index *pIdx;                   \/* Index when WHERE_INDEXED is true *\/$/;"	m	union:WherePlan::__anon12	file:
pIdxInfo	utilities/sqlite3/sqlite3.c	/^  sqlite3_index_info *pIdxInfo;  \/* Index info for n-th source table *\/$/;"	m	struct:WhereLevel	file:
pInJournal	utilities/sqlite3/sqlite3.c	/^  Bitvec *pInJournal;         \/* One bit for each page in the database file *\/$/;"	m	struct:Pager	file:
pInSavepoint	utilities/sqlite3/sqlite3.c	/^  Bitvec *pInSavepoint;        \/* Set of pages in this savepoint *\/$/;"	m	struct:PagerSavepoint	file:
pIndex	utilities/sqlite3/sqlite3.c	/^    Index *pIndex;    \/* Index structure corresponding to zIndex, if any *\/$/;"	m	struct:SrcList::SrcList_item	file:
pIndex	utilities/sqlite3/sqlite3.c	/^  Index *pIndex;       \/* List of SQL indexes on this table. *\/$/;"	m	struct:Table	file:
pInitMutex	utilities/sqlite3/sqlite3.c	/^  sqlite3_mutex *pInitMutex;        \/* Mutex used by sqlite3_initialize() *\/$/;"	m	struct:Sqlite3Config	file:
pInode	utilities/sqlite3/sqlite3.c	/^  unixInodeInfo *pInode;              \/* Info about locks on this inode *\/$/;"	m	struct:unixFile	file:
pInode	utilities/sqlite3/sqlite3.c	/^  unixInodeInfo *pInode;     \/* unixInodeInfo that owns this SHM node *\/$/;"	m	struct:unixShmNode	file:
pInput	utilities/sqlite3/sqlite3.c	/^  const char *pInput;          \/* input we are tokenizing *\/$/;"	m	struct:simple_tokenizer_cursor	file:
pIter	utilities/sqlite3/sqlite3.c	/^  UBreakIterator *pIter;      \/* ICU break-iterator object *\/$/;"	m	struct:IcuCursor	file:
pKey	utilities/sqlite3/sqlite3.c	/^  const char *pKey; int nKey;  \/* Key associated with this element *\/$/;"	m	struct:HashElem	file:
pKey	utilities/sqlite3/sqlite3.c	/^  void *pKey;      \/* Saved key that was cursor's last known position *\/$/;"	m	struct:BtCursor	file:
pKey	utilities/sqlite3/sqlite3.c	/^  void *pKey; int nKey;      \/* Key associated with this element *\/$/;"	m	struct:Fts3HashElem	file:
pKeyInfo	utilities/sqlite3/sqlite3.c	/^    KeyInfo *pKeyInfo;     \/* Used when p4type is P4_KEYINFO *\/$/;"	m	union:VdbeOp::__anon7	file:
pKeyInfo	utilities/sqlite3/sqlite3.c	/^  KeyInfo *pKeyInfo;    \/* Info about index keys needed by index cursors *\/$/;"	m	struct:VdbeCursor	file:
pKeyInfo	utilities/sqlite3/sqlite3.c	/^  KeyInfo *pKeyInfo;  \/* Collation and sort-order information *\/$/;"	m	struct:UnpackedRecord	file:
pKeyInfo	utilities/sqlite3/sqlite3.c	/^  struct KeyInfo *pKeyInfo; \/* Argument passed to comparison function *\/$/;"	m	struct:BtCursor	typeref:struct:BtCursor::KeyInfo	file:
pLast	utilities/sqlite3/sqlite3.c	/^  PGroupBlock *pLast;            \/* Last PGroupBlock in list *\/$/;"	m	struct:PGroupBlockList	file:
pLast	utilities/sqlite3/sqlite3.c	/^  TriggerStep *pLast;  \/* Last element in link-list. Valid for 1st elem only *\/$/;"	m	struct:TriggerStep	file:
pLast	utilities/sqlite3/sqlite3.c	/^  struct MemBlockHdr *pLast;$/;"	m	struct:__anon18	typeref:struct:__anon18::MemBlockHdr	file:
pLast	utilities/sqlite3/sqlite3.c	/^  struct RowSetEntry *pLast;     \/* Last entry on the pEntry list *\/$/;"	m	struct:RowSet	typeref:struct:RowSet::RowSetEntry	file:
pLeft	utilities/sqlite3/sqlite3.c	/^  Expr *pLeft;           \/* Left subnode *\/$/;"	m	struct:Expr	file:
pLeft	utilities/sqlite3/sqlite3.c	/^  Fts3Expr *pLeft;           \/* Left operand *\/$/;"	m	struct:Fts3Expr	file:
pLeft	utilities/sqlite3/sqlite3.c	/^  struct RowSetEntry *pLeft;    \/* Left subtree (smaller entries) *\/$/;"	m	struct:RowSetEntry	typeref:struct:RowSetEntry::RowSetEntry	file:
pLeftmost	utilities/sqlite3/sqlite3.c	/^  SegmentNode *pLeftmost;         \/* Pointer to left-most node of this depth *\/$/;"	m	struct:SegmentNode	file:
pLimit	utilities/sqlite3/sqlite3.c	/^  Expr *pLimit;          \/* LIMIT expression. NULL means not used. *\/$/;"	m	struct:Select	file:
pLimit	utilities/sqlite3/sqlite3.c	/^  Expr *pLimit;    \/* The LIMIT expression.  NULL if there is no limit *\/$/;"	m	struct:LimitVal	file:
pList	utilities/sqlite3/sqlite3.c	/^    ExprList *pList;     \/* Function arguments or in "<expr> IN (<expr-list)" *\/$/;"	m	union:Expr::__anon11	file:
pList	utilities/sqlite3/sqlite3.c	/^  PGroupBlockList *pList;        \/* Owner list *\/$/;"	m	struct:PGroupBlock	file:
pList	utilities/sqlite3/sqlite3.c	/^  PendingList *pList;             \/* Doclist is assembled here *\/$/;"	m	struct:Fts3DeferredToken	file:
pList	utilities/sqlite3/sqlite3.c	/^  char *pList;                    \/* Pointer to start of phrase position list *\/$/;"	m	struct:SnippetPhrase	file:
pList	utilities/sqlite3/sqlite3.c	/^  char *pList;                    \/* Position-list *\/$/;"	m	struct:TermOffset	file:
pList	utilities/sqlite3/sqlite3.c	/^  char *pList;                   \/* Pointer to position list following iDocid *\/$/;"	m	struct:Fts3Doclist	file:
pLock	utilities/sqlite3/sqlite3.c	/^  BtLock *pLock;        \/* List of locks held on this shared-btree struct *\/$/;"	m	struct:BtShared	file:
pLogArg	utilities/sqlite3/sqlite3.c	/^  void *pLogArg;                       \/* First argument to xLog() *\/$/;"	m	struct:Sqlite3Config	file:
pLruHead	utilities/sqlite3/sqlite3.c	/^  PgHdr1 *pLruHead, *pLruTail;   \/* LRU list of unpinned pages *\/$/;"	m	struct:PGroup	file:
pLruNext	utilities/sqlite3/sqlite3.c	/^  PgHdr1 *pLruNext;              \/* Next in LRU list of unpinned pages *\/$/;"	m	struct:PgHdr1	file:
pLruPrev	utilities/sqlite3/sqlite3.c	/^  PgHdr1 *pLruPrev;              \/* Previous in LRU list of unpinned pages *\/$/;"	m	struct:PgHdr1	file:
pLruTail	utilities/sqlite3/sqlite3.c	/^  PgHdr1 *pLruHead, *pLruTail;   \/* LRU list of unpinned pages *\/$/;"	m	struct:PGroup	file:
pMap	utilities/sqlite3/sqlite3.c	/^    void *pMap;$/;"	m	struct:winShmNode::ShmRegion	file:
pMaskSet	utilities/sqlite3/sqlite3.c	/^  WhereMaskSet *pMaskSet;  \/* Mapping of table cursor numbers to bitmasks *\/$/;"	m	struct:WhereClause	file:
pMem	utilities/sqlite3/sqlite3.c	/^    Mem *pMem;             \/* Used when p4type is P4_MEM *\/$/;"	m	union:VdbeOp::__anon7	file:
pMem	utilities/sqlite3/sqlite3.c	/^  Mem *pMem;            \/* Memory cell used to store aggregate context *\/$/;"	m	struct:sqlite3_context	file:
pMethod	utilities/sqlite3/sqlite3.c	/^  const sqlite3_io_methods *pMethod;  \/* Always the first entry *\/$/;"	m	struct:os2File	file:
pMethod	utilities/sqlite3/sqlite3.c	/^  const sqlite3_io_methods *pMethod; \/*** Must be first ***\/$/;"	m	struct:winFile	file:
pMethod	utilities/sqlite3/sqlite3.c	/^  sqlite3_io_methods *pMethod;    \/* I\/O methods on journal files *\/$/;"	m	struct:JournalFile	file:
pMethod	utilities/sqlite3/sqlite3.c	/^  sqlite3_io_methods *pMethod;    \/* Parent class. MUST BE FIRST *\/$/;"	m	struct:MemJournal	file:
pMethod	utilities/sqlite3/sqlite3.c	/^  sqlite3_io_methods const *pMethod;  \/* Always the first entry *\/$/;"	m	struct:unixFile	file:
pMethods	utilities/sqlite3/sqlite3.c	/^  const struct sqlite3_io_methods *pMethods;  \/* Methods for an open file *\/$/;"	m	struct:sqlite3_file	typeref:struct:sqlite3_file::sqlite3_io_methods	file:
pMethods	utilities/sqlite3/sqlite3.h	/^  const struct sqlite3_io_methods *pMethods;  \/* Methods for an open file *\/$/;"	m	struct:sqlite3_file	typeref:struct:sqlite3_file::sqlite3_io_methods
pMod	utilities/sqlite3/sqlite3.c	/^  Module *pMod;             \/* Pointer to module implementation *\/$/;"	m	struct:VTable	file:
pModule	utilities/sqlite3/sqlite3.c	/^  const sqlite3_module *pModule;       \/* Callback pointers *\/$/;"	m	struct:Module	file:
pModule	utilities/sqlite3/sqlite3.c	/^  const sqlite3_module *pModule;     \/* Module for cursor pVtabCursor *\/$/;"	m	struct:VdbeCursor	file:
pModule	utilities/sqlite3/sqlite3.c	/^  const sqlite3_module *pModule;  \/* The module for this virtual table *\/$/;"	m	struct:sqlite3_vtab	file:
pModule	utilities/sqlite3/sqlite3.c	/^  const sqlite3_tokenizer_module *pModule;  \/* The module for this tokenizer *\/$/;"	m	struct:sqlite3_tokenizer	file:
pModule	utilities/sqlite3/sqlite3.h	/^  const sqlite3_module *pModule;  \/* The module for this virtual table *\/$/;"	m	struct:sqlite3_vtab
pNC	utilities/sqlite3/sqlite3.c	/^    NameContext *pNC;                          \/* Naming context *\/$/;"	m	union:Walker::__anon16	file:
pName	utilities/sqlite3/sqlite3.c	/^  const Token *pName; \/* Name of the container - used for error messages *\/$/;"	m	struct:DbFixer	file:
pNewTable	utilities/sqlite3/sqlite3.c	/^  Table *pNewTable;    \/* A table being constructed by CREATE TABLE *\/$/;"	m	struct:Parse	file:
pNewTrigger	utilities/sqlite3/sqlite3.c	/^  Trigger *pNewTrigger;     \/* Trigger under construct by a CREATE TRIGGER *\/$/;"	m	struct:Parse	file:
pNext	utilities/sqlite3/sqlite3.c	/^  AutoincInfo *pNext;   \/* Next info block in a list of them all *\/$/;"	m	struct:AutoincInfo	file:
pNext	utilities/sqlite3/sqlite3.c	/^  BtCursor *pNext, *pPrev;  \/* Forms a linked list of all cursors *\/$/;"	m	struct:BtCursor	file:
pNext	utilities/sqlite3/sqlite3.c	/^  BtLock *pNext;        \/* Next in BtShared.pLock list *\/$/;"	m	struct:BtLock	file:
pNext	utilities/sqlite3/sqlite3.c	/^  BtShared *pNext;      \/* Next on a list of sharable BtShared structs *\/$/;"	m	struct:BtShared	file:
pNext	utilities/sqlite3/sqlite3.c	/^  Btree *pNext;      \/* List of other sharable Btrees from the same db *\/$/;"	m	struct:Btree	file:
pNext	utilities/sqlite3/sqlite3.c	/^  FileChunk *pNext;               \/* Next chunk in the journal *\/$/;"	m	struct:FileChunk	file:
pNext	utilities/sqlite3/sqlite3.c	/^  Fts3DeferredToken *pNext;       \/* Next in list of deferred tokens *\/$/;"	m	struct:Fts3DeferredToken	file:
pNext	utilities/sqlite3/sqlite3.c	/^  FuncDef *pNext;      \/* Next function with same name *\/$/;"	m	struct:FuncDef	file:
pNext	utilities/sqlite3/sqlite3.c	/^  Index *pNext;    \/* The next index associated with the same table *\/$/;"	m	struct:Index	file:
pNext	utilities/sqlite3/sqlite3.c	/^  LookasideSlot *pNext;    \/* Next buffer in the list of free buffers *\/$/;"	m	struct:LookasideSlot	file:
pNext	utilities/sqlite3/sqlite3.c	/^  NameContext *pNext;  \/* Next outer name context.  NULL for outermost *\/$/;"	m	struct:NameContext	file:
pNext	utilities/sqlite3/sqlite3.c	/^  PGroupBlock *pNext;            \/* Next PGroupBlock in list *\/$/;"	m	struct:PGroupBlock	file:
pNext	utilities/sqlite3/sqlite3.c	/^  PGroupBlockList *pNext;        \/* Next block-list attached to group *\/$/;"	m	struct:PGroupBlockList	file:
pNext	utilities/sqlite3/sqlite3.c	/^  PgFreeslot *pNext;  \/* Next free slot *\/$/;"	m	struct:PgFreeslot	file:
pNext	utilities/sqlite3/sqlite3.c	/^  PgHdr1 *pNext;                 \/* Next in hash table chain *\/$/;"	m	struct:PgHdr1	file:
pNext	utilities/sqlite3/sqlite3.c	/^  RtreeNode *pNext;                 \/* Next node in this hash chain *\/$/;"	m	struct:RtreeNode	file:
pNext	utilities/sqlite3/sqlite3.c	/^  Savepoint *pNext;                   \/* Parent savepoint (if any) *\/$/;"	m	struct:Savepoint	file:
pNext	utilities/sqlite3/sqlite3.c	/^  Select *pNext;         \/* Next select to the left in a compound *\/$/;"	m	struct:Select	file:
pNext	utilities/sqlite3/sqlite3.c	/^  SorterRecord *pNext;$/;"	m	struct:SorterRecord	file:
pNext	utilities/sqlite3/sqlite3.c	/^  SubProgram *pNext;            \/* Next sub-program already visited *\/$/;"	m	struct:SubProgram	file:
pNext	utilities/sqlite3/sqlite3.c	/^  Trigger *pNext;         \/* Next trigger associated with the table *\/$/;"	m	struct:Trigger	file:
pNext	utilities/sqlite3/sqlite3.c	/^  TriggerPrg *pNext;      \/* Next entry in Parse.pTriggerPrg list *\/$/;"	m	struct:TriggerPrg	file:
pNext	utilities/sqlite3/sqlite3.c	/^  TriggerStep *pNext;  \/* Next in the link-list *\/$/;"	m	struct:TriggerStep	file:
pNext	utilities/sqlite3/sqlite3.c	/^  UnixUnusedFd *pNext;      \/* Next unused file descriptor on same file *\/$/;"	m	struct:UnixUnusedFd	file:
pNext	utilities/sqlite3/sqlite3.c	/^  VTable *pNext;            \/* Next in linked list (see above) *\/$/;"	m	struct:VTable	file:
pNext	utilities/sqlite3/sqlite3.c	/^  Vdbe *pPrev,*pNext;     \/* Linked list of VDBEs with the same Vdbe.db *\/$/;"	m	struct:Vdbe	file:
pNext	utilities/sqlite3/sqlite3.c	/^  os2ShmLink *pNext;         \/* Next os2Shm with the same os2ShmNode *\/$/;"	m	struct:os2ShmLink	file:
pNext	utilities/sqlite3/sqlite3.c	/^  os2ShmNode *pNext;         \/* Next in list of all os2ShmNode objects *\/$/;"	m	struct:os2ShmNode	file:
pNext	utilities/sqlite3/sqlite3.c	/^  sqlite3_backup *pNext;   \/* Next backup associated with source pager *\/$/;"	m	struct:sqlite3_backup	file:
pNext	utilities/sqlite3/sqlite3.c	/^  sqlite3_vfs *pNext;      \/* Next registered VFS *\/$/;"	m	struct:sqlite3_vfs	file:
pNext	utilities/sqlite3/sqlite3.c	/^  struct MemBlockHdr *pNext, *pPrev;  \/* Linked list of all unfreed memory *\/$/;"	m	struct:MemBlockHdr	typeref:struct:MemBlockHdr::MemBlockHdr	file:
pNext	utilities/sqlite3/sqlite3.c	/^  struct ScratchFreeslot *pNext;   \/* Next unused scratch buffer *\/$/;"	m	struct:ScratchFreeslot	typeref:struct:ScratchFreeslot::ScratchFreeslot	file:
pNext	utilities/sqlite3/sqlite3.c	/^  struct vxworksFileId *pNext;  \/* Next in a list of them all *\/$/;"	m	struct:vxworksFileId	typeref:struct:vxworksFileId::vxworksFileId	file:
pNext	utilities/sqlite3/sqlite3.c	/^  unixInodeInfo *pNext;           \/* List of all unixInodeInfo objects *\/$/;"	m	struct:unixInodeInfo	file:
pNext	utilities/sqlite3/sqlite3.c	/^  unixShm *pNext;            \/* Next unixShm with the same unixShmNode *\/$/;"	m	struct:unixShm	file:
pNext	utilities/sqlite3/sqlite3.c	/^  winShm *pNext;             \/* Next winShm with the same winShmNode *\/$/;"	m	struct:winShm	file:
pNext	utilities/sqlite3/sqlite3.c	/^  winShmNode *pNext;         \/* Next in list of all winShmNode objects *\/$/;"	m	struct:winShmNode	file:
pNext	utilities/sqlite3/sqlite3.h	/^  sqlite3_vfs *pNext;      \/* Next registered VFS *\/$/;"	m	struct:sqlite3_vfs
pNextBlocked	utilities/sqlite3/sqlite3.c	/^  sqlite3 *pNextBlocked;        \/* Next in list of all blocked connections *\/$/;"	m	struct:sqlite3	file:
pNextChunk	utilities/sqlite3/sqlite3.c	/^  struct RowSetChunk *pNextChunk;        \/* Next chunk on list of them all *\/$/;"	m	struct:RowSetChunk	typeref:struct:RowSetChunk::RowSetChunk	file:
pNextDocid	utilities/sqlite3/sqlite3.c	/^  char *pNextDocid;              \/* Pointer to next docid *\/$/;"	m	struct:Fts3Doclist	file:
pNextFrom	utilities/sqlite3/sqlite3.c	/^  FKey *pNextFrom;  \/* Next foreign key in pFrom *\/$/;"	m	struct:FKey	file:
pNextId	utilities/sqlite3/sqlite3.c	/^  char *pNextId;                  \/* Pointer into the body of aDoclist *\/$/;"	m	struct:Fts3Cursor	file:
pNextTo	utilities/sqlite3/sqlite3.c	/^  FKey *pNextTo;    \/* Next foreign key on table named zTo *\/$/;"	m	struct:FKey	file:
pNextZombie	utilities/sqlite3/sqlite3.c	/^  Table *pNextZombie;  \/* Next on the Parse.pZombieTab list *\/$/;"	m	struct:Table	file:
pNode	utilities/sqlite3/sqlite3.c	/^  RtreeNode *pNode;                 \/* Node cursor is currently pointing at *\/$/;"	m	struct:RtreeCursor	file:
pOffset	utilities/sqlite3/sqlite3.c	/^  Expr *pOffset;         \/* OFFSET expression. NULL means not used. *\/$/;"	m	struct:Select	file:
pOffset	utilities/sqlite3/sqlite3.c	/^  Expr *pOffset;   \/* The OFFSET expression.  NULL if there is none *\/$/;"	m	struct:LimitVal	file:
pOffsetList	utilities/sqlite3/sqlite3.c	/^  char *pOffsetList;$/;"	m	struct:Fts3SegReader	file:
pOldMethod	utilities/sqlite3/sqlite3.c	/^  sqlite3_io_methods const *pOldMethod;     \/* Original I\/O methods for close *\/$/;"	m	struct:proxyLockingContext	file:
pOn	utilities/sqlite3/sqlite3.c	/^    Expr *pOn;        \/* The ON clause of a join *\/$/;"	m	struct:SrcList::SrcList_item	file:
pOrInfo	utilities/sqlite3/sqlite3.c	/^    WhereOrInfo *pOrInfo;   \/* Extra information if eOperator==WO_OR *\/$/;"	m	union:WhereTerm::__anon23	file:
pOrderBy	utilities/sqlite3/sqlite3.c	/^  ExprList *pOrderBy;    \/* The ORDER BY clause *\/$/;"	m	struct:Select	file:
pPCache	utilities/sqlite3/sqlite3.c	/^  PCache *pPCache;            \/* Pointer to page cache object *\/$/;"	m	struct:Pager	file:
pPage	utilities/sqlite3/sqlite3.c	/^  void *pPage;                      \/* Page cache memory *\/$/;"	m	struct:Sqlite3Config	file:
pPage1	utilities/sqlite3/sqlite3.c	/^  MemPage *pPage1;      \/* First page of the database *\/$/;"	m	struct:BtShared	file:
pPage1	utilities/sqlite3/sqlite3.c	/^  PgHdr *pPage1;                      \/* Reference to page 1 *\/$/;"	m	struct:PCache	file:
pPager	utilities/sqlite3/sqlite3.c	/^  Pager *pPager;                 \/* The pager this page is part of *\/$/;"	m	struct:PgHdr	file:
pPager	utilities/sqlite3/sqlite3.c	/^  Pager *pPager;        \/* The page cache *\/$/;"	m	struct:BtShared	file:
pPager	utilities/sqlite3/sqlite3.c	/^  Pager *pPager;    \/* The associated pager.  Also accessible by pBt->pPager *\/$/;"	m	struct:IntegrityCk	file:
pParent	utilities/sqlite3/sqlite3.c	/^  Fts3Expr *pParent;         \/* pParent->pLeft==this or pParent->pRight==this *\/$/;"	m	struct:Fts3Expr	file:
pParent	utilities/sqlite3/sqlite3.c	/^  RtreeNode *pParent;               \/* Parent node *\/$/;"	m	struct:RtreeNode	file:
pParent	utilities/sqlite3/sqlite3.c	/^  SegmentNode *pParent;           \/* Parent node (or NULL for root node) *\/$/;"	m	struct:SegmentNode	file:
pParent	utilities/sqlite3/sqlite3.c	/^  VdbeFrame *pParent;     \/* Parent of this frame, or NULL if parent is main *\/$/;"	m	struct:VdbeFrame	file:
pParse	utilities/sqlite3/sqlite3.c	/^  Parse *pParse;                            \/* Parser context.  *\/$/;"	m	struct:Walker	file:
pParse	utilities/sqlite3/sqlite3.c	/^  Parse *pParse;              \/* The Parse structure *\/$/;"	m	struct:AuthContext	file:
pParse	utilities/sqlite3/sqlite3.c	/^  Parse *pParse;           \/* The parser context *\/$/;"	m	struct:WhereClause	file:
pParse	utilities/sqlite3/sqlite3.c	/^  Parse *pParse;       \/* Parsing and code generating context *\/$/;"	m	struct:WhereInfo	file:
pParse	utilities/sqlite3/sqlite3.c	/^  Parse *pParse;       \/* The parser *\/$/;"	m	struct:NameContext	file:
pParse	utilities/sqlite3/sqlite3.c	/^  Parse *pParse;      \/* The parsing context.  Error messages written here *\/$/;"	m	struct:DbFixer	file:
pPhrase	utilities/sqlite3/sqlite3.c	/^  Fts3Phrase *pPhrase;            \/* The phrase the token belongs to *\/$/;"	m	struct:Fts3TokenAndCost	file:
pPhrase	utilities/sqlite3/sqlite3.c	/^  Fts3Phrase *pPhrase;       \/* Valid if eType==FTSQUERY_PHRASE *\/$/;"	m	struct:Fts3Expr	file:
pPrev	utilities/sqlite3/sqlite3.c	/^  BtCursor *pNext, *pPrev;  \/* Forms a linked list of all cursors *\/$/;"	m	struct:BtCursor	file:
pPrev	utilities/sqlite3/sqlite3.c	/^  Btree *pPrev;      \/* Back pointer of the same list *\/$/;"	m	struct:Btree	file:
pPrev	utilities/sqlite3/sqlite3.c	/^  PGroupBlock *pPrev;            \/* Previous PGroupBlock in list *\/$/;"	m	struct:PGroupBlock	file:
pPrev	utilities/sqlite3/sqlite3.c	/^  Vdbe *pPrev,*pNext;     \/* Linked list of VDBEs with the same Vdbe.db *\/$/;"	m	struct:Vdbe	file:
pPrev	utilities/sqlite3/sqlite3.c	/^  struct MemBlockHdr *pNext, *pPrev;  \/* Linked list of all unfreed memory *\/$/;"	m	struct:MemBlockHdr	typeref:struct:MemBlockHdr::	file:
pPrev	utilities/sqlite3/sqlite3.c	/^  unixInodeInfo *pPrev;           \/*    .... doubly linked *\/$/;"	m	struct:unixInodeInfo	file:
pPrevTo	utilities/sqlite3/sqlite3.c	/^  FKey *pPrevTo;    \/* Previous foreign key on table named zTo *\/$/;"	m	struct:FKey	file:
pPrior	utilities/sqlite3/sqlite3.c	/^  Select *pPrior;        \/* Prior select in a compound select statement *\/$/;"	m	struct:Select	file:
pProfileArg	utilities/sqlite3/sqlite3.c	/^  void *pProfileArg;                        \/* Argument to profile function *\/$/;"	m	struct:sqlite3	file:
pProgram	utilities/sqlite3/sqlite3.c	/^    SubProgram *pProgram;  \/* Used when p4type is P4_SUBPROGRAM *\/$/;"	m	union:VdbeOp::__anon7	file:
pProgram	utilities/sqlite3/sqlite3.c	/^  SubProgram *pProgram;   \/* Linked list of all sub-programs used by VM *\/$/;"	m	struct:Vdbe	file:
pProgram	utilities/sqlite3/sqlite3.c	/^  SubProgram *pProgram;   \/* Program implementing pTrigger\/orconf *\/$/;"	m	struct:TriggerPrg	file:
pProgressArg	utilities/sqlite3/sqlite3.c	/^  void *pProgressArg;           \/* Argument to the progress callback *\/$/;"	m	struct:sqlite3	file:
pRead	utilities/sqlite3/sqlite3.c	/^  char *pRead;                    \/* Cursor used to iterate through aDoclist *\/$/;"	m	struct:LcsIterator	file:
pReadNode	utilities/sqlite3/sqlite3.c	/^  sqlite3_stmt *pReadNode;$/;"	m	struct:Rtree	file:
pReadParent	utilities/sqlite3/sqlite3.c	/^  sqlite3_stmt *pReadParent;$/;"	m	struct:Rtree	file:
pReadRowid	utilities/sqlite3/sqlite3.c	/^  sqlite3_stmt *pReadRowid;$/;"	m	struct:Rtree	file:
pReal	utilities/sqlite3/sqlite3.c	/^    double *pReal;         \/* Used when p4type is P4_REAL *\/$/;"	m	union:VdbeOp::__anon7	file:
pReal	utilities/sqlite3/sqlite3.c	/^  sqlite3_file *pReal;            \/* The "real" underlying file descriptor *\/$/;"	m	struct:JournalFile	file:
pRecord	utilities/sqlite3/sqlite3.c	/^  SorterRecord *pRecord;          \/* Head of in-memory record list *\/$/;"	m	struct:VdbeSorter	file:
pReprepare	utilities/sqlite3/sqlite3.c	/^  Vdbe *pReprepare;    \/* VM being reprepared (sqlite3Reprepare()) *\/$/;"	m	struct:Parse	file:
pResultSet	utilities/sqlite3/sqlite3.c	/^  Mem *pResultSet;        \/* Pointer to an array of results *\/$/;"	m	struct:Vdbe	file:
pRight	utilities/sqlite3/sqlite3.c	/^  Expr *pRight;          \/* Right subnode *\/$/;"	m	struct:Expr	file:
pRight	utilities/sqlite3/sqlite3.c	/^  Fts3Expr *pRight;          \/* Right operand *\/$/;"	m	struct:Fts3Expr	file:
pRight	utilities/sqlite3/sqlite3.c	/^  SegmentNode *pRight;            \/* Pointer to right-sibling *\/$/;"	m	struct:SegmentNode	file:
pRight	utilities/sqlite3/sqlite3.c	/^  struct RowSetEntry *pRight;   \/* Right subtree (larger entries) or list *\/$/;"	m	struct:RowSetEntry	typeref:struct:RowSetEntry::RowSetEntry	file:
pRightmost	utilities/sqlite3/sqlite3.c	/^  Select *pRightmost;    \/* Right-most select in a compound select statement *\/$/;"	m	struct:Select	file:
pRollbackArg	utilities/sqlite3/sqlite3.c	/^  void *pRollbackArg;               \/* Argument to xRollbackCallback() *\/   $/;"	m	struct:sqlite3	file:
pRoot	utilities/sqlite3/sqlite3.c	/^  Fts3Expr *pRoot;                \/* Root of NEAR\/AND cluster *\/$/;"	m	struct:Fts3TokenAndCost	file:
pRowSet	utilities/sqlite3/sqlite3.c	/^    RowSet *pRowSet;    \/* Used only when flags==MEM_RowSet *\/$/;"	m	union:Mem::__anon17	file:
pSavepoint	utilities/sqlite3/sqlite3.c	/^  Savepoint *pSavepoint;        \/* List of active savepoints *\/$/;"	m	struct:sqlite3	file:
pSchema	utilities/sqlite3/sqlite3.c	/^  Schema *pSchema;        \/* Schema containing the trigger *\/$/;"	m	struct:Trigger	file:
pSchema	utilities/sqlite3/sqlite3.c	/^  Schema *pSchema;     \/* Pointer to database schema (possibly shared) *\/$/;"	m	struct:Db	file:
pSchema	utilities/sqlite3/sqlite3.c	/^  Schema *pSchema;     \/* Schema that contains this table *\/$/;"	m	struct:Table	file:
pSchema	utilities/sqlite3/sqlite3.c	/^  Schema *pSchema; \/* Schema containing this index *\/$/;"	m	struct:Index	file:
pSchema	utilities/sqlite3/sqlite3.c	/^  void *pSchema;        \/* Pointer to space allocated by sqlite3BtreeSchema() *\/$/;"	m	struct:BtShared	file:
pScopyFrom	utilities/sqlite3/sqlite3.c	/^  Mem *pScopyFrom;    \/* This Mem is a shallow copy of pScopyFrom *\/$/;"	m	struct:Mem	file:
pScratch	utilities/sqlite3/sqlite3.c	/^  void *pScratch;                   \/* Scratch memory *\/$/;"	m	struct:Sqlite3Config	file:
pScratchEnd	utilities/sqlite3/sqlite3.c	/^  void *pScratchEnd;$/;"	m	struct:Mem0Global	file:
pScratchFree	utilities/sqlite3/sqlite3.c	/^  ScratchFreeslot *pScratchFree;$/;"	m	struct:Mem0Global	file:
pSegcsr	utilities/sqlite3/sqlite3.c	/^  Fts3MultiSegReader *pSegcsr;    \/* Segment-reader for this token *\/$/;"	m	struct:Fts3PhraseToken	file:
pSegments	utilities/sqlite3/sqlite3.c	/^  sqlite3_blob *pSegments;        \/* Blob handle open on %_segments table *\/$/;"	m	struct:Fts3Table	file:
pSelect	utilities/sqlite3/sqlite3.c	/^    Select *pSelect;     \/* Used for sub-selects and "<expr> IN (<select>)" *\/$/;"	m	union:Expr::__anon11	file:
pSelect	utilities/sqlite3/sqlite3.c	/^    Select *pSelect;  \/* A SELECT statement used in place of a table name *\/$/;"	m	struct:SrcList::SrcList_item	file:
pSelect	utilities/sqlite3/sqlite3.c	/^  Select *pSelect;     \/* NULL for tables.  Points to definition if a view. *\/$/;"	m	struct:Table	file:
pSelect	utilities/sqlite3/sqlite3.c	/^  Select *pSelect;     \/* SELECT statment or RHS of INSERT INTO .. SELECT ... *\/$/;"	m	struct:TriggerStep	file:
pSem	utilities/sqlite3/sqlite3.c	/^  sem_t *pSem;                    \/* Named POSIX semaphore *\/$/;"	m	struct:unixInodeInfo	file:
pSeqTab	utilities/sqlite3/sqlite3.c	/^  Table *pSeqTab;      \/* The sqlite_sequence table used by AUTOINCREMENT *\/$/;"	m	struct:Schema	file:
pShm	utilities/sqlite3/sqlite3.c	/^  unixShm *pShm;                      \/* Shared memory segment information *\/$/;"	m	struct:unixFile	file:
pShm	utilities/sqlite3/sqlite3.c	/^  winShm *pShm;           \/* Instance of shared memory on this file *\/$/;"	m	struct:winFile	file:
pShmLink	utilities/sqlite3/sqlite3.c	/^  os2ShmLink *pShmLink;     \/* Instance of shared memory on this file *\/$/;"	m	struct:os2File	file:
pShmNode	utilities/sqlite3/sqlite3.c	/^  os2ShmNode *pShmNode;      \/* The underlying os2ShmNode object *\/$/;"	m	struct:os2ShmLink	file:
pShmNode	utilities/sqlite3/sqlite3.c	/^  unixShmNode *pShmNode;          \/* Shared memory associated with this inode *\/$/;"	m	struct:unixInodeInfo	file:
pShmNode	utilities/sqlite3/sqlite3.c	/^  unixShmNode *pShmNode;     \/* The underlying unixShmNode object *\/$/;"	m	struct:unixShm	file:
pShmNode	utilities/sqlite3/sqlite3.c	/^  winShmNode *pShmNode;      \/* The underlying winShmNode object *\/$/;"	m	struct:winShm	file:
pSorter	utilities/sqlite3/sqlite3.c	/^  VdbeSorter *pSorter;  \/* Sorter object for OP_SorterOpen cursors *\/$/;"	m	struct:VdbeCursor	file:
pSrc	utilities/sqlite3/sqlite3.c	/^  Btree *pSrc;             \/* Source b-tree file *\/$/;"	m	struct:sqlite3_backup	file:
pSrc	utilities/sqlite3/sqlite3.c	/^  SrcList *pSrc;         \/* The FROM clause *\/$/;"	m	struct:Select	file:
pSrcDb	utilities/sqlite3/sqlite3.c	/^  sqlite3* pSrcDb;         \/* Source database handle *\/$/;"	m	struct:sqlite3_backup	file:
pSrcList	utilities/sqlite3/sqlite3.c	/^  SrcList *pSrcList;   \/* One or more tables used to resolve names *\/$/;"	m	struct:NameContext	file:
pStart	utilities/sqlite3/sqlite3.c	/^  void *pStart, *pEnd;           \/* Bounds of pagecache malloc range *\/$/;"	m	struct:PCacheGlobal	file:
pStart	utilities/sqlite3/sqlite3.c	/^  void *pStart;           \/* First byte of available memory space *\/$/;"	m	struct:Lookaside	file:
pStmt	utilities/sqlite3/sqlite3.c	/^  sqlite3_stmt *pStmt;            \/* Prepared statement in use by the cursor *\/$/;"	m	struct:Fts3Cursor	file:
pStmt	utilities/sqlite3/sqlite3.c	/^  sqlite3_stmt *pStmt;    \/* Statement holding cursor open *\/$/;"	m	struct:Incrblob	file:
pStress	utilities/sqlite3/sqlite3.c	/^  void *pStress;                      \/* Argument to xStress *\/$/;"	m	struct:PCache	file:
pSynced	utilities/sqlite3/sqlite3.c	/^  PgHdr *pSynced;                     \/* Last synced page in dirty page list *\/$/;"	m	struct:PCache	file:
pTab	utilities/sqlite3/sqlite3.c	/^    Table *pTab;             \/* Source table *\/$/;"	m	struct:AggInfo::AggInfo_col	file:
pTab	utilities/sqlite3/sqlite3.c	/^    Table *pTab;      \/* An SQL table corresponding to zName *\/$/;"	m	struct:SrcList::SrcList_item	file:
pTab	utilities/sqlite3/sqlite3.c	/^  Table *pTab;           \/* Table for TK_COLUMN expressions. *\/$/;"	m	struct:Expr	file:
pTab	utilities/sqlite3/sqlite3.c	/^  Table *pTab;          \/* Table this info block refers to *\/$/;"	m	struct:AutoincInfo	file:
pTab	utilities/sqlite3/sqlite3.c	/^  Table *pTab;$/;"	m	struct:VtabCtx	file:
pTabList	utilities/sqlite3/sqlite3.c	/^  SrcList *pTabList;             \/* List of tables in the join *\/$/;"	m	struct:WhereInfo	file:
pTabSchema	utilities/sqlite3/sqlite3.c	/^  Schema *pTabSchema;     \/* Schema containing the table *\/$/;"	m	struct:Trigger	file:
pTable	utilities/sqlite3/sqlite3.c	/^  Table *pTable;   \/* The SQL table being indexed *\/$/;"	m	struct:Index	file:
pTail	utilities/sqlite3/sqlite3.c	/^  char *pTail;                    \/* Position list data following iTail *\/$/;"	m	struct:SnippetPhrase	file:
pTemp1	utilities/sqlite3/sqlite3.c	/^  sqlite3_file *pTemp1;           \/* PMA file 1 *\/$/;"	m	struct:VdbeSorter	file:
pTerm	utilities/sqlite3/sqlite3.c	/^    struct WhereTerm *pTerm;       \/* WHERE clause term for OR-search *\/$/;"	m	union:WherePlan::__anon12	typeref:struct:WherePlan::__anon12::WhereTerm	file:
pTmpSpace	utilities/sqlite3/sqlite3.c	/^  char *pTmpSpace;            \/* Pager.pageSize bytes of space for tmp use *\/$/;"	m	struct:Pager	file:
pTmpSpace	utilities/sqlite3/sqlite3.c	/^  u8 *pTmpSpace;        \/* BtShared.pageSize bytes of space for tmp use *\/$/;"	m	struct:BtShared	file:
pToken	utilities/sqlite3/sqlite3.c	/^  Fts3PhraseToken *pToken;        \/* Pointer to corresponding expr token *\/$/;"	m	struct:Fts3DeferredToken	file:
pToken	utilities/sqlite3/sqlite3.c	/^  Fts3PhraseToken *pToken;        \/* The token itself *\/$/;"	m	struct:Fts3TokenAndCost	file:
pToken	utilities/sqlite3/sqlite3.c	/^  char *pToken;                \/* storage for current token *\/$/;"	m	struct:simple_tokenizer_cursor	file:
pTokenizer	utilities/sqlite3/sqlite3.c	/^  sqlite3_tokenizer *pTokenizer;       \/* Tokenizer for this cursor. *\/$/;"	m	struct:sqlite3_tokenizer_cursor	file:
pTokenizer	utilities/sqlite3/sqlite3.c	/^  sqlite3_tokenizer *pTokenizer;      \/* Tokenizer module *\/$/;"	m	struct:ParseContext	file:
pTokenizer	utilities/sqlite3/sqlite3.c	/^  sqlite3_tokenizer *pTokenizer;  \/* tokenizer for inserts and queries *\/$/;"	m	struct:Fts3Table	file:
pToplevel	utilities/sqlite3/sqlite3.c	/^  Parse *pToplevel;    \/* Parse structure for main program (or NULL) *\/$/;"	m	struct:Parse	file:
pTraceArg	utilities/sqlite3/sqlite3.c	/^  void *pTraceArg;                          \/* Argument to the trace function *\/$/;"	m	struct:sqlite3	file:
pTree	utilities/sqlite3/sqlite3.c	/^  SegmentNode *pTree;             \/* Pointer to interior tree structure *\/$/;"	m	struct:SegmentWriter	file:
pTree	utilities/sqlite3/sqlite3.c	/^  struct RowSetEntry *pTree;     \/* Binary tree of entries *\/$/;"	m	struct:RowSet	typeref:struct:RowSet::RowSetEntry	file:
pTrig	utilities/sqlite3/sqlite3.c	/^  Trigger *pTrig;      \/* The trigger that this step is a part of *\/$/;"	m	struct:TriggerStep	file:
pTrigger	utilities/sqlite3/sqlite3.c	/^  Trigger *pTrigger;      \/* Trigger this program was coded from *\/$/;"	m	struct:TriggerPrg	file:
pTrigger	utilities/sqlite3/sqlite3.c	/^  Trigger *pTrigger;   \/* List of triggers stored in pSchema *\/$/;"	m	struct:Table	file:
pTrigger	utilities/sqlite3/sqlite3.c	83853;"	d	file:
pTrigger	utilities/sqlite3/sqlite3.c	87932;"	d	file:
pTrigger	utilities/sqlite3/sqlite3.c	98828;"	d	file:
pTriggerPrg	utilities/sqlite3/sqlite3.c	/^  TriggerPrg *pTriggerPrg;    \/* Linked list of coded triggers *\/$/;"	m	struct:Parse	file:
pTriggerTab	utilities/sqlite3/sqlite3.c	/^  Table *pTriggerTab;  \/* Table triggers are being coded for *\/$/;"	m	struct:Parse	file:
pUnlockArg	utilities/sqlite3/sqlite3.c	/^  void *pUnlockArg;                     \/* Argument to xUnlockNotify *\/$/;"	m	struct:sqlite3	file:
pUnlockConnection	utilities/sqlite3/sqlite3.c	/^  sqlite3 *pUnlockConnection;           \/* Connection to watch for unlock *\/$/;"	m	struct:sqlite3	file:
pUnpacked	utilities/sqlite3/sqlite3.c	/^  UnpackedRecord *pUnpacked;      \/* Used to unpack keys *\/$/;"	m	struct:VdbeSorter	file:
pUnused	utilities/sqlite3/sqlite3.c	/^  UnixUnusedFd *pUnused;              \/* Pre-allocated UnixUnusedFd *\/$/;"	m	struct:unixFile	file:
pUnused	utilities/sqlite3/sqlite3.c	/^  UnixUnusedFd *pUnused;          \/* Unused file descriptors to close *\/$/;"	m	struct:unixInodeInfo	file:
pUpdateArg	utilities/sqlite3/sqlite3.c	/^  void *pUpdateArg;$/;"	m	struct:sqlite3	file:
pUser	utilities/sqlite3/sqlite3.c	/^  void *pUser;                    \/* Callback implementation user data *\/$/;"	m	struct:sqlite3_rtree_geometry	file:
pUser	utilities/sqlite3/sqlite3.c	/^  void *pUser;          \/* First argument to xCmp() *\/$/;"	m	struct:CollSeq	file:
pUser	utilities/sqlite3/sqlite3.h	/^  void *pUser;                    \/* Callback implementation user data *\/$/;"	m	struct:sqlite3_rtree_geometry
pUserData	utilities/sqlite3/sqlite3.c	/^  void *pUserData;     \/* User data parameter *\/$/;"	m	struct:FuncDef	file:
pUserData	utilities/sqlite3/sqlite3.c	/^  void *pUserData;$/;"	m	struct:FuncDestructor	file:
pUsing	utilities/sqlite3/sqlite3.c	/^    IdList *pUsing;   \/* The USING clause of a join *\/$/;"	m	struct:SrcList::SrcList_item	file:
pVTable	utilities/sqlite3/sqlite3.c	/^  VTable *pVTable;     \/* List of VTable objects. *\/$/;"	m	struct:Table	file:
pVTable	utilities/sqlite3/sqlite3.c	/^  VTable *pVTable;$/;"	m	struct:VtabCtx	file:
pVal	utilities/sqlite3/sqlite3.c	/^  void *pVal;$/;"	m	struct:SorterRecord	file:
pVdbe	utilities/sqlite3/sqlite3.c	/^  Vdbe *pVdbe;         \/* An engine for executing database bytecode *\/$/;"	m	struct:Parse	file:
pVdbe	utilities/sqlite3/sqlite3.c	/^  struct Vdbe *pVdbe;           \/* List of active virtual machines *\/$/;"	m	struct:sqlite3	typeref:struct:sqlite3::Vdbe	file:
pVdbeFunc	utilities/sqlite3/sqlite3.c	/^    VdbeFunc *pVdbeFunc;   \/* Used when p4type is P4_VDBEFUNC *\/$/;"	m	union:VdbeOp::__anon7	file:
pVdbeFunc	utilities/sqlite3/sqlite3.c	/^  VdbeFunc *pVdbeFunc;  \/* Auxilary data, if created. *\/$/;"	m	struct:sqlite3_context	file:
pVfs	utilities/sqlite3/sqlite3.c	/^  sqlite3_vfs *pVfs;              \/* The "real" underlying VFS *\/$/;"	m	struct:JournalFile	file:
pVfs	utilities/sqlite3/sqlite3.c	/^  sqlite3_vfs *pVfs;            \/* OS Interface *\/$/;"	m	struct:sqlite3	file:
pVfs	utilities/sqlite3/sqlite3.c	/^  sqlite3_vfs *pVfs;          \/* OS functions to use for IO *\/$/;"	m	struct:Pager	file:
pVfs	utilities/sqlite3/sqlite3.c	/^  sqlite3_vfs *pVfs;         \/* The VFS used to create pDbFd *\/$/;"	m	struct:Wal	file:
pVfs	utilities/sqlite3/sqlite3.c	/^  sqlite3_vfs *pVfs;      \/* The VFS used to open this file *\/$/;"	m	struct:winFile	file:
pVtab	utilities/sqlite3/sqlite3.c	/^    VTable *pVtab;         \/* Used when p4type is P4_VTAB *\/$/;"	m	union:VdbeOp::__anon7	file:
pVtab	utilities/sqlite3/sqlite3.c	/^  sqlite3_vtab *pVtab;      \/* Pointer to vtab instance *\/$/;"	m	struct:VTable	file:
pVtab	utilities/sqlite3/sqlite3.c	/^  sqlite3_vtab *pVtab;      \/* Virtual table of this cursor *\/$/;"	m	struct:sqlite3_vtab_cursor	file:
pVtab	utilities/sqlite3/sqlite3.h	/^  sqlite3_vtab *pVtab;      \/* Virtual table of this cursor *\/$/;"	m	struct:sqlite3_vtab_cursor
pVtabCtx	utilities/sqlite3/sqlite3.c	/^  VtabCtx *pVtabCtx;            \/* Context for active vtab connect\/create *\/$/;"	m	struct:sqlite3	file:
pVtabCursor	utilities/sqlite3/sqlite3.c	/^  sqlite3_vtab_cursor *pVtabCursor;  \/* The cursor for a virtual table *\/$/;"	m	struct:VdbeCursor	file:
pVtabIdx	utilities/sqlite3/sqlite3.c	/^    sqlite3_index_info *pVtabIdx;  \/* Virtual table index to use *\/$/;"	m	union:WherePlan::__anon12	file:
pWC	utilities/sqlite3/sqlite3.c	/^  WhereClause *pWC;       \/* The clause this term is part of *\/$/;"	m	struct:WhereTerm	file:
pWC	utilities/sqlite3/sqlite3.c	/^  struct WhereClause *pWC;       \/* Decomposition of the WHERE clause *\/$/;"	m	struct:WhereInfo	typeref:struct:WhereInfo::WhereClause	file:
pWal	utilities/sqlite3/sqlite3.c	/^  Wal *pWal;                  \/* Write-ahead log used by "journal_mode=wal" *\/$/;"	m	struct:Pager	file:
pWalArg	utilities/sqlite3/sqlite3.c	/^  void *pWalArg;$/;"	m	struct:sqlite3	file:
pWalFd	utilities/sqlite3/sqlite3.c	/^  sqlite3_file *pWalFd;      \/* File handle for WAL file *\/$/;"	m	struct:Wal	file:
pWhen	utilities/sqlite3/sqlite3.c	/^  Expr *pWhen;            \/* The WHEN clause of the expression (may be NULL) *\/$/;"	m	struct:Trigger	file:
pWhere	utilities/sqlite3/sqlite3.c	/^  Expr *pWhere;          \/* The WHERE clause *\/$/;"	m	struct:Select	file:
pWhere	utilities/sqlite3/sqlite3.c	/^  Expr *pWhere;        \/* The WHERE clause for DELETE or UPDATE steps *\/$/;"	m	struct:TriggerStep	file:
pWriteNode	utilities/sqlite3/sqlite3.c	/^  sqlite3_stmt *pWriteNode;$/;"	m	struct:Rtree	file:
pWriteParent	utilities/sqlite3/sqlite3.c	/^  sqlite3_stmt *pWriteParent;$/;"	m	struct:Rtree	file:
pWriteRowid	utilities/sqlite3/sqlite3.c	/^  sqlite3_stmt *pWriteRowid;$/;"	m	struct:Rtree	file:
pWriter	utilities/sqlite3/sqlite3.c	/^  Btree *pWriter;       \/* Btree with currently open write transaction *\/$/;"	m	struct:BtShared	file:
pZombieTab	utilities/sqlite3/sqlite3.c	/^  Table *pZombieTab;      \/* List of Table objects to delete after code gen *\/$/;"	m	struct:Parse	file:
pageHash	utilities/sqlite3/sqlite3.c	/^  u32 pageHash;                  \/* Hash of page content *\/$/;"	m	struct:PgHdr	file:
pageInJournal	utilities/sqlite3/sqlite3.c	/^static int pageInJournal(PgHdr *pPg){$/;"	f	file:
pageReinit	utilities/sqlite3/sqlite3.c	/^static void pageReinit(DbPage *pData){$/;"	f	file:
pageSize	utilities/sqlite3/sqlite3.c	/^  int pageSize;               \/* Number of bytes in a page *\/$/;"	m	struct:Pager	file:
pageSize	utilities/sqlite3/sqlite3.c	/^  u32 pageSize;         \/* Total number of bytes on a page *\/$/;"	m	struct:BtShared	file:
pageSizeFixed	utilities/sqlite3/sqlite3.c	/^  u8 pageSizeFixed;     \/* True if the page size can no longer be changed *\/$/;"	m	struct:BtShared	file:
pagerBeginReadTransaction	utilities/sqlite3/sqlite3.c	/^static int pagerBeginReadTransaction(Pager *pPager){$/;"	f	file:
pagerBeginReadTransaction	utilities/sqlite3/sqlite3.c	38323;"	d	file:
pagerExclusiveLock	utilities/sqlite3/sqlite3.c	/^static int pagerExclusiveLock(Pager *pPager){$/;"	f	file:
pagerLockDb	utilities/sqlite3/sqlite3.c	/^static int pagerLockDb(Pager *pPager, int eLock){$/;"	f	file:
pagerOpenWal	utilities/sqlite3/sqlite3.c	/^static int pagerOpenWal(Pager *pPager){$/;"	f	file:
pagerOpenWalIfPresent	utilities/sqlite3/sqlite3.c	/^static int pagerOpenWalIfPresent(Pager *pPager){$/;"	f	file:
pagerOpenWalIfPresent	utilities/sqlite3/sqlite3.c	38322;"	d	file:
pagerOpentemp	utilities/sqlite3/sqlite3.c	/^static int pagerOpentemp($/;"	f	file:
pagerPagecount	utilities/sqlite3/sqlite3.c	/^static int pagerPagecount(Pager *pPager, Pgno *pnPage){$/;"	f	file:
pagerPlaybackSavepoint	utilities/sqlite3/sqlite3.c	/^static int pagerPlaybackSavepoint(Pager *pPager, PagerSavepoint *pSavepoint){$/;"	f	file:
pagerReportSize	utilities/sqlite3/sqlite3.c	/^static void pagerReportSize(Pager *pPager){$/;"	f	file:
pagerReportSize	utilities/sqlite3/sqlite3.c	39588;"	d	file:
pagerRollbackWal	utilities/sqlite3/sqlite3.c	/^static int pagerRollbackWal(Pager *pPager){$/;"	f	file:
pagerRollbackWal	utilities/sqlite3/sqlite3.c	38320;"	d	file:
pagerStress	utilities/sqlite3/sqlite3.c	/^static int pagerStress(void *p, PgHdr *pPg){$/;"	f	file:
pagerSyncHotJournal	utilities/sqlite3/sqlite3.c	/^static int pagerSyncHotJournal(Pager *pPager){$/;"	f	file:
pagerUndoCallback	utilities/sqlite3/sqlite3.c	/^static int pagerUndoCallback(void *pCtx, Pgno iPg){$/;"	f	file:
pagerUnlockAndRollback	utilities/sqlite3/sqlite3.c	/^static void pagerUnlockAndRollback(Pager *pPager){$/;"	f	file:
pagerUnlockDb	utilities/sqlite3/sqlite3.c	/^static int pagerUnlockDb(Pager *pPager, int eLock){$/;"	f	file:
pagerUnlockIfUnused	utilities/sqlite3/sqlite3.c	/^static void pagerUnlockIfUnused(Pager *pPager){$/;"	f	file:
pagerUseWal	utilities/sqlite3/sqlite3.c	/^static int pagerUseWal(Pager *pPager){$/;"	f	file:
pagerUseWal	utilities/sqlite3/sqlite3.c	38319;"	d	file:
pagerWalFrames	utilities/sqlite3/sqlite3.c	/^static int pagerWalFrames($/;"	f	file:
pagerWalFrames	utilities/sqlite3/sqlite3.c	38321;"	d	file:
pager_cksum	utilities/sqlite3/sqlite3.c	/^static u32 pager_cksum(Pager *pPager, const u8 *aData){$/;"	f	file:
pager_datahash	utilities/sqlite3/sqlite3.c	/^static u32 pager_datahash(int nByte, unsigned char *pData){$/;"	f	file:
pager_datahash	utilities/sqlite3/sqlite3.c	38704;"	d	file:
pager_delmaster	utilities/sqlite3/sqlite3.c	/^static int pager_delmaster(Pager *pPager, const char *zMaster){$/;"	f	file:
pager_end_transaction	utilities/sqlite3/sqlite3.c	/^static int pager_end_transaction(Pager *pPager, int hasMaster){$/;"	f	file:
pager_error	utilities/sqlite3/sqlite3.c	/^static int pager_error(Pager *pPager, int rc){$/;"	f	file:
pager_incr_changecounter	utilities/sqlite3/sqlite3.c	/^static int pager_incr_changecounter(Pager *pPager, int isDirectMode){$/;"	f	file:
pager_lookup	utilities/sqlite3/sqlite3.c	/^static PgHdr *pager_lookup(Pager *pPager, Pgno pgno){$/;"	f	file:
pager_open_journal	utilities/sqlite3/sqlite3.c	/^static int pager_open_journal(Pager *pPager){$/;"	f	file:
pager_pagehash	utilities/sqlite3/sqlite3.c	/^static u32 pager_pagehash(PgHdr *pPage){$/;"	f	file:
pager_pagehash	utilities/sqlite3/sqlite3.c	38705;"	d	file:
pager_playback	utilities/sqlite3/sqlite3.c	/^static int pager_playback(Pager *pPager, int isHot){$/;"	f	file:
pager_playback_one_page	utilities/sqlite3/sqlite3.c	/^static int pager_playback_one_page($/;"	f	file:
pager_reset	utilities/sqlite3/sqlite3.c	/^static void pager_reset(Pager *pPager){$/;"	f	file:
pager_set_pagehash	utilities/sqlite3/sqlite3.c	/^static void pager_set_pagehash(PgHdr *pPage){$/;"	f	file:
pager_set_pagehash	utilities/sqlite3/sqlite3.c	38706;"	d	file:
pager_truncate	utilities/sqlite3/sqlite3.c	/^static int pager_truncate(Pager *pPager, Pgno nPage){$/;"	f	file:
pager_unlock	utilities/sqlite3/sqlite3.c	/^static void pager_unlock(Pager *pPager){$/;"	f	file:
pager_wait_on_lock	utilities/sqlite3/sqlite3.c	/^static int pager_wait_on_lock(Pager *pPager, int locktype){$/;"	f	file:
pager_write	utilities/sqlite3/sqlite3.c	/^static int pager_write(PgHdr *pPg){$/;"	f	file:
pager_write_changecounter	utilities/sqlite3/sqlite3.c	/^static void pager_write_changecounter(PgHdr *pPg){$/;"	f	file:
pager_write_pagelist	utilities/sqlite3/sqlite3.c	/^static int pager_write_pagelist(Pager *pPager, PgHdr *pList){$/;"	f	file:
parent	include/def.h	/^	struct object parent;	\/\/\/<基类 $/;"	m	struct:object_thread	typeref:struct:object_thread::object
parent	include/def.h	/^	struct object parent;	\/\/\/<基类$/;"	m	struct:object_io	typeref:struct:object_io::object
parent	include/def.h	/^	struct object parent;	\/\/\/<基类$/;"	m	struct:object_timer	typeref:struct:object_timer::object
parent	include/def.h	/^	struct object parent;$/;"	m	struct:object_buf	typeref:struct:object_buf::object
parentWrite	utilities/sqlite3/sqlite3.c	/^static int parentWrite(Rtree *pRtree, sqlite3_int64 iNode, sqlite3_int64 iPar){$/;"	f	file:
parity	include/common.h	/^	int parity;$/;"	m	struct:uart_setting
parity	utilities/modbus/modbus-rtu-private.h	/^    char parity;$/;"	m	struct:_modbus_rtu
parseCell	utilities/sqlite3/sqlite3.c	49218;"	d	file:
parseDateOrTime	utilities/sqlite3/sqlite3.c	/^static int parseDateOrTime($/;"	f	file:
parseError	utilities/sqlite3/sqlite3.c	/^  u8 parseError;       \/* True after a parsing error.  Ticket #1794 *\/$/;"	m	struct:Parse	file:
parseHhMmSs	utilities/sqlite3/sqlite3.c	/^static int parseHhMmSs(const char *zDate, DateTime *p){$/;"	f	file:
parseModifier	utilities/sqlite3/sqlite3.c	/^static int parseModifier(sqlite3_context *pCtx, const char *zMod, DateTime *p){$/;"	f	file:
parseTimezone	utilities/sqlite3/sqlite3.c	/^static int parseTimezone(const char *zDate, DateTime *p){$/;"	f	file:
parseYyyyMmDd	utilities/sqlite3/sqlite3.c	/^static int parseYyyyMmDd(const char *zDate, DateTime *p){$/;"	f	file:
patternCompare	utilities/sqlite3/sqlite3.c	/^static int patternCompare($/;"	f	file:
payloadSize	utilities/sqlite3/sqlite3.c	/^  int payloadSize;      \/* Total number of bytes in the record *\/$/;"	m	struct:VdbeCursor	file:
pc	utilities/sqlite3/sqlite3.c	/^  int pc;                 \/* Program Counter in parent (calling) frame *\/$/;"	m	struct:VdbeFrame	file:
pc	utilities/sqlite3/sqlite3.c	/^  int pc;                 \/* The program counter *\/$/;"	m	struct:Vdbe	file:
pcache	utilities/sqlite3/sqlite3.c	/^  sqlite3_pcache_methods pcache;    \/* Low-level page-cache interface *\/$/;"	m	struct:Sqlite3Config	file:
pcache1	utilities/sqlite3/sqlite3.c	35972;"	d	file:
pcache1Alloc	utilities/sqlite3/sqlite3.c	/^static void *pcache1Alloc(int nByte){$/;"	f	file:
pcache1AllocPage	utilities/sqlite3/sqlite3.c	/^static PgHdr1 *pcache1AllocPage(PCache1 *pCache){$/;"	f	file:
pcache1Cachesize	utilities/sqlite3/sqlite3.c	/^static void pcache1Cachesize(sqlite3_pcache *p, int nMax){$/;"	f	file:
pcache1Create	utilities/sqlite3/sqlite3.c	/^static sqlite3_pcache *pcache1Create(int szPage, int bPurgeable){$/;"	f	file:
pcache1Destroy	utilities/sqlite3/sqlite3.c	/^static void pcache1Destroy(sqlite3_pcache *p){$/;"	f	file:
pcache1EnforceMaxPage	utilities/sqlite3/sqlite3.c	/^static void pcache1EnforceMaxPage(PGroup *pGroup){$/;"	f	file:
pcache1EnterMutex	utilities/sqlite3/sqlite3.c	36003;"	d	file:
pcache1Fetch	utilities/sqlite3/sqlite3.c	/^static void *pcache1Fetch(sqlite3_pcache *p, unsigned int iKey, int createFlag){$/;"	f	file:
pcache1Free	utilities/sqlite3/sqlite3.c	/^static void pcache1Free(void *p){$/;"	f	file:
pcache1FreePage	utilities/sqlite3/sqlite3.c	/^static void pcache1FreePage(PgHdr1 *p){$/;"	f	file:
pcache1Init	utilities/sqlite3/sqlite3.c	/^static int pcache1Init(void *NotUsed){$/;"	f	file:
pcache1LeaveMutex	utilities/sqlite3/sqlite3.c	36004;"	d	file:
pcache1MemSize	utilities/sqlite3/sqlite3.c	/^static int pcache1MemSize(void *p){$/;"	f	file:
pcache1Pagecount	utilities/sqlite3/sqlite3.c	/^static int pcache1Pagecount(sqlite3_pcache *p){$/;"	f	file:
pcache1PinPage	utilities/sqlite3/sqlite3.c	/^static void pcache1PinPage(PgHdr1 *pPage){$/;"	f	file:
pcache1Rekey	utilities/sqlite3/sqlite3.c	/^static void pcache1Rekey($/;"	f	file:
pcache1RemoveFromHash	utilities/sqlite3/sqlite3.c	/^static void pcache1RemoveFromHash(PgHdr1 *pPage){$/;"	f	file:
pcache1ResizeHash	utilities/sqlite3/sqlite3.c	/^static int pcache1ResizeHash(PCache1 *p){$/;"	f	file:
pcache1Shutdown	utilities/sqlite3/sqlite3.c	/^static void pcache1Shutdown(void *NotUsed){$/;"	f	file:
pcache1Truncate	utilities/sqlite3/sqlite3.c	/^static void pcache1Truncate(sqlite3_pcache *p, unsigned int iLimit){$/;"	f	file:
pcache1TruncateUnsafe	utilities/sqlite3/sqlite3.c	/^static void pcache1TruncateUnsafe($/;"	f	file:
pcache1UnderMemoryPressure	utilities/sqlite3/sqlite3.c	/^static int pcache1UnderMemoryPressure(PCache1 *pCache){$/;"	f	file:
pcache1Unpin	utilities/sqlite3/sqlite3.c	/^static void pcache1Unpin(sqlite3_pcache *p, void *pPg, int reuseUnlikely){$/;"	f	file:
pcache1_g	utilities/sqlite3/sqlite3.c	/^} pcache1_g;$/;"	v	typeref:struct:PCacheGlobal	file:
pcacheAddToDirtyList	utilities/sqlite3/sqlite3.c	/^static void pcacheAddToDirtyList(PgHdr *pPage){$/;"	f	file:
pcacheCheckSynced	utilities/sqlite3/sqlite3.c	/^static int pcacheCheckSynced(PCache *pCache){$/;"	f	file:
pcacheMergeDirtyList	utilities/sqlite3/sqlite3.c	/^static PgHdr *pcacheMergeDirtyList(PgHdr *pA, PgHdr *pB){$/;"	f	file:
pcacheRemoveFromDirtyList	utilities/sqlite3/sqlite3.c	/^static void pcacheRemoveFromDirtyList(PgHdr *pPage){$/;"	f	file:
pcacheSortDirtyList	utilities/sqlite3/sqlite3.c	/^static PgHdr *pcacheSortDirtyList(PgHdr *pIn){$/;"	f	file:
pcacheUnpin	utilities/sqlite3/sqlite3.c	/^static void pcacheUnpin(PgHdr *p){$/;"	f	file:
pgno	utilities/sqlite3/sqlite3.c	/^  Pgno pgno;                     \/* Page number for this page *\/$/;"	m	struct:PgHdr	file:
pgno	utilities/sqlite3/sqlite3.c	/^  Pgno pgno;           \/* Page number for this page *\/$/;"	m	struct:MemPage	file:
pgnoRoot	utilities/sqlite3/sqlite3.c	/^  Pgno pgnoRoot;            \/* The root page of this tree *\/$/;"	m	struct:BtCursor	file:
plan	utilities/sqlite3/sqlite3.c	/^  WherePlan plan;       \/* query plan for this element of the FROM clause *\/$/;"	m	struct:WhereLevel	file:
plan	utilities/sqlite3/sqlite3.c	/^  WherePlan plan;    \/* The lookup strategy *\/$/;"	m	struct:WhereCost	file:
pnBytesFreed	utilities/sqlite3/sqlite3.c	/^  int *pnBytesFreed;            \/* If not NULL, increment this in DbFree() *\/$/;"	m	struct:sqlite3	file:
port	include/common.h	/^	int port;$/;"	m	struct:net_setting
port	utilities/modbus/modbus-tcp-private.h	/^    int port;$/;"	m	struct:_modbus_tcp
port	utilities/modbus/modbus-tcp-private.h	/^    int port;$/;"	m	struct:_modbus_tcp_pi
porterClose	utilities/sqlite3/sqlite3.c	/^static int porterClose(sqlite3_tokenizer_cursor *pCursor){$/;"	f	file:
porterCreate	utilities/sqlite3/sqlite3.c	/^static int porterCreate($/;"	f	file:
porterDestroy	utilities/sqlite3/sqlite3.c	/^static int porterDestroy(sqlite3_tokenizer *pTokenizer){$/;"	f	file:
porterIdChar	utilities/sqlite3/sqlite3.c	/^static const char porterIdChar[] = {$/;"	v	file:
porterNext	utilities/sqlite3/sqlite3.c	/^static int porterNext($/;"	f	file:
porterOpen	utilities/sqlite3/sqlite3.c	/^static int porterOpen($/;"	f	file:
porterTokenizerModule	utilities/sqlite3/sqlite3.c	/^static const sqlite3_tokenizer_module porterTokenizerModule = {$/;"	v	file:
porter_stemmer	utilities/sqlite3/sqlite3.c	/^static void porter_stemmer(const char *zIn, int nIn, char *zOut, int *pnOut){$/;"	f	file:
porter_tokenizer	utilities/sqlite3/sqlite3.c	/^typedef struct porter_tokenizer {$/;"	s	file:
porter_tokenizer	utilities/sqlite3/sqlite3.c	/^} porter_tokenizer;$/;"	t	typeref:struct:porter_tokenizer	file:
porter_tokenizer_cursor	utilities/sqlite3/sqlite3.c	/^typedef struct porter_tokenizer_cursor {$/;"	s	file:
porter_tokenizer_cursor	utilities/sqlite3/sqlite3.c	/^} porter_tokenizer_cursor;$/;"	t	typeref:struct:porter_tokenizer_cursor	file:
posixOpen	utilities/sqlite3/sqlite3.c	/^static int posixOpen(const char *zFile, int flags, int mode){$/;"	f	file:
posixUnlock	utilities/sqlite3/sqlite3.c	/^static int posixUnlock(sqlite3_file *id, int eFileLock, int handleNFSUnlock){$/;"	f	file:
post_message	src/kernel/message.c	/^int post_message(HMOD hmod, int message, WPARAM wparam, LPARAM lparam)$/;"	f
ppNextElem	utilities/sqlite3/sqlite3.c	/^  Fts3HashElem **ppNextElem;$/;"	m	struct:Fts3SegReader	file:
pre_check_confirmation	utilities/modbus/modbus-private.h	/^    int (*pre_check_confirmation) (modbus_t *ctx, const uint8_t *req,$/;"	m	struct:_modbus_backend
prefix	utilities/sqlite3/sqlite3.c	/^  etByte prefix;           \/* Offset into aPrefix[] of the prefix string *\/$/;"	m	struct:et_info	file:
prepare	utilities/sqlite3/sqlite3.c	/^  int  (*prepare)(sqlite3*,const char*,int,sqlite3_stmt**,const char**);$/;"	m	struct:sqlite3_api_routines	file:
prepare16	utilities/sqlite3/sqlite3.c	/^  int  (*prepare16)(sqlite3*,const void*,int,sqlite3_stmt**,const void**);$/;"	m	struct:sqlite3_api_routines	file:
prepare16_v2	utilities/sqlite3/sqlite3.c	/^  int (*prepare16_v2)(sqlite3*,const void*,int,sqlite3_stmt**,const void**);$/;"	m	struct:sqlite3_api_routines	file:
prepare_response_tid	utilities/modbus/modbus-private.h	/^    int (*prepare_response_tid) (const uint8_t *req, int *req_length);$/;"	m	struct:_modbus_backend
prepare_v2	utilities/sqlite3/sqlite3.c	/^  int (*prepare_v2)(sqlite3*,const char*,int,sqlite3_stmt**,const char**);$/;"	m	struct:sqlite3_api_routines	file:
prereqAll	utilities/sqlite3/sqlite3.c	/^  Bitmask prereqAll;      \/* Bitmask of tables referenced by pExpr *\/$/;"	m	struct:WhereTerm	file:
prereqRight	utilities/sqlite3/sqlite3.c	/^  Bitmask prereqRight;    \/* Bitmask of tables used by pExpr->pRight *\/$/;"	m	struct:WhereTerm	file:
prev	include/list.h	/^	struct list_node *prev;	\/\/\/<前一个$/;"	m	struct:list_node	typeref:struct:list_node::list_node
prev	utilities/sqlite3/sqlite3.c	/^      u32 prev;       \/* Index in mem3.aPool[] of previous free chunk *\/$/;"	m	struct:Mem3Block::__anon19::__anon21	file:
prev	utilities/sqlite3/sqlite3.c	/^  Fts3HashElem *next, *prev; \/* Next and previous elements in the table *\/$/;"	m	struct:Fts3HashElem	file:
prev	utilities/sqlite3/sqlite3.c	/^  HashElem *next, *prev;       \/* Next and previous elements in the table *\/$/;"	m	struct:HashElem	file:
prev	utilities/sqlite3/sqlite3.c	/^  int prev;       \/* Index of previous free chunk *\/$/;"	m	struct:Mem5Link	file:
prevSize	utilities/sqlite3/sqlite3.c	/^      u32 prevSize;   \/* Size of previous chunk in Mem3Block elements *\/$/;"	m	struct:Mem3Block::__anon19::__anon20	file:
print_pager_state	utilities/sqlite3/sqlite3.c	/^static char *print_pager_state(Pager *p){$/;"	f	file:
profile	utilities/sqlite3/sqlite3.c	/^  void * (*profile)(sqlite3*,void(*)(void*,const char*,sqlite_uint64),void*);$/;"	m	struct:sqlite3_api_routines	file:
progress_handler	utilities/sqlite3/sqlite3.c	/^  void  (*progress_handler)(sqlite3*,int,int(*)(void*),void*);$/;"	m	struct:sqlite3_api_routines	file:
proxyBreakConchLock	utilities/sqlite3/sqlite3.c	/^static int proxyBreakConchLock(unixFile *pFile, uuid_t myHostID){$/;"	f	file:
proxyCheckReservedLock	utilities/sqlite3/sqlite3.c	/^static int proxyCheckReservedLock(sqlite3_file *id, int *pResOut) {$/;"	f	file:
proxyClose	utilities/sqlite3/sqlite3.c	/^static int proxyClose(sqlite3_file *id) {$/;"	f	file:
proxyConchLock	utilities/sqlite3/sqlite3.c	/^static int proxyConchLock(unixFile *pFile, uuid_t myHostID, int lockType){$/;"	f	file:
proxyCreateConchPathname	utilities/sqlite3/sqlite3.c	/^static int proxyCreateConchPathname(char *dbPath, char **pConchPath){$/;"	f	file:
proxyCreateLockPath	utilities/sqlite3/sqlite3.c	/^static int proxyCreateLockPath(const char *lockPath){$/;"	f	file:
proxyCreateUnixFile	utilities/sqlite3/sqlite3.c	/^static int proxyCreateUnixFile($/;"	f	file:
proxyFileControl	utilities/sqlite3/sqlite3.c	/^static int proxyFileControl(sqlite3_file *id, int op, void *pArg){$/;"	f	file:
proxyGetDbPathForUnixFile	utilities/sqlite3/sqlite3.c	/^static int proxyGetDbPathForUnixFile(unixFile *pFile, char *dbPath){$/;"	f	file:
proxyGetHostID	utilities/sqlite3/sqlite3.c	/^static int proxyGetHostID(unsigned char *pHostID, int *pError){$/;"	f	file:
proxyGetLockPath	utilities/sqlite3/sqlite3.c	/^static int proxyGetLockPath(const char *dbPath, char *lPath, size_t maxLen){$/;"	f	file:
proxyLock	utilities/sqlite3/sqlite3.c	/^static int proxyLock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
proxyLockingContext	utilities/sqlite3/sqlite3.c	/^struct proxyLockingContext {$/;"	s	file:
proxyLockingContext	utilities/sqlite3/sqlite3.c	/^typedef struct proxyLockingContext proxyLockingContext;$/;"	t	typeref:struct:proxyLockingContext	file:
proxyReleaseConch	utilities/sqlite3/sqlite3.c	/^static int proxyReleaseConch(unixFile *pFile){$/;"	f	file:
proxyTakeConch	utilities/sqlite3/sqlite3.c	/^static int proxyTakeConch(unixFile *pFile){$/;"	f	file:
proxyTransformUnixFile	utilities/sqlite3/sqlite3.c	/^static int proxyTransformUnixFile(unixFile *pFile, const char *path) {$/;"	f	file:
proxyUnlock	utilities/sqlite3/sqlite3.c	/^static int proxyUnlock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
pseudoTableReg	utilities/sqlite3/sqlite3.c	/^  int pseudoTableReg;   \/* Register holding pseudotable content. *\/$/;"	m	struct:VdbeCursor	file:
pthreadMutexAlloc	utilities/sqlite3/sqlite3.c	/^static sqlite3_mutex *pthreadMutexAlloc(int iType){$/;"	f	file:
pthreadMutexEnd	utilities/sqlite3/sqlite3.c	/^static int pthreadMutexEnd(void){ return SQLITE_OK; }$/;"	f	file:
pthreadMutexEnter	utilities/sqlite3/sqlite3.c	/^static void pthreadMutexEnter(sqlite3_mutex *p){$/;"	f	file:
pthreadMutexFree	utilities/sqlite3/sqlite3.c	/^static void pthreadMutexFree(sqlite3_mutex *p){$/;"	f	file:
pthreadMutexHeld	utilities/sqlite3/sqlite3.c	/^static int pthreadMutexHeld(sqlite3_mutex *p){$/;"	f	file:
pthreadMutexInit	utilities/sqlite3/sqlite3.c	/^static int pthreadMutexInit(void){ return SQLITE_OK; }$/;"	f	file:
pthreadMutexLeave	utilities/sqlite3/sqlite3.c	/^static void pthreadMutexLeave(sqlite3_mutex *p){$/;"	f	file:
pthreadMutexNotheld	utilities/sqlite3/sqlite3.c	/^static int pthreadMutexNotheld(sqlite3_mutex *p){$/;"	f	file:
pthreadMutexTry	utilities/sqlite3/sqlite3.c	/^static int pthreadMutexTry(sqlite3_mutex *p){$/;"	f	file:
ptrmapGet	utilities/sqlite3/sqlite3.c	/^static int ptrmapGet(BtShared *pBt, Pgno key, u8 *pEType, Pgno *pPgno){$/;"	f	file:
ptrmapGet	utilities/sqlite3/sqlite3.c	49105;"	d	file:
ptrmapPageno	utilities/sqlite3/sqlite3.c	/^static Pgno ptrmapPageno(BtShared *pBt, Pgno pgno){$/;"	f	file:
ptrmapPut	utilities/sqlite3/sqlite3.c	/^static void ptrmapPut(BtShared *pBt, Pgno key, u8 eType, Pgno parent, int *pRC){$/;"	f	file:
ptrmapPut	utilities/sqlite3/sqlite3.c	49104;"	d	file:
ptrmapPutOvflPtr	utilities/sqlite3/sqlite3.c	/^static void ptrmapPutOvflPtr(MemPage *pPage, u8 *pCell, int *pRC){$/;"	f	file:
ptrmapPutOvflPtr	utilities/sqlite3/sqlite3.c	49106;"	d	file:
pushOntoSorter	utilities/sqlite3/sqlite3.c	/^static void pushOntoSorter($/;"	f	file:
put2byte	utilities/sqlite3/sqlite3.c	47979;"	d	file:
put32bits	utilities/sqlite3/sqlite3.c	38563;"	d	file:
put4byte	utilities/sqlite3/sqlite3.c	47981;"	d	file:
putVarint	utilities/sqlite3/sqlite3.c	11570;"	d	file:
putVarint32	utilities/sqlite3/sqlite3.c	11568;"	d	file:
pzErrMsg	utilities/sqlite3/sqlite3.c	/^  char **pzErrMsg;    \/* Error message stored here *\/$/;"	m	struct:__anon15	file:
querySharedCacheTableLock	utilities/sqlite3/sqlite3.c	/^static int querySharedCacheTableLock(Btree *p, Pgno iTab, u8 eLock){$/;"	f	file:
querySharedCacheTableLock	utilities/sqlite3/sqlite3.c	48343;"	d	file:
queryTestTokenizer	utilities/sqlite3/sqlite3.c	/^static int queryTestTokenizer($/;"	f	file:
queryTokenizer	utilities/sqlite3/sqlite3.c	/^int queryTokenizer($/;"	f	file:
quoteFunc	utilities/sqlite3/sqlite3.c	/^static void quoteFunc(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
r	utilities/sqlite3/sqlite3.c	/^    double r;       \/* Value if eType is SQLITE_FLOAT or SQLITE_INTEGER *\/$/;"	m	union:IndexSample::__anon9	file:
r	utilities/sqlite3/sqlite3.c	/^  double r;           \/* Real value *\/$/;"	m	struct:Mem	file:
rCost	utilities/sqlite3/sqlite3.c	/^  double rCost;      \/* Overall cost of pursuing this search strategy *\/$/;"	m	struct:WhereCost	file:
rSum	utilities/sqlite3/sqlite3.c	/^  double rSum;      \/* Floating point sum *\/$/;"	m	struct:SumCtx	file:
rValue	utilities/sqlite3/sqlite3.c	/^  double rValue;                  \/* Constraint value. *\/$/;"	m	struct:RtreeConstraint	file:
randomBlob	utilities/sqlite3/sqlite3.c	/^static void randomBlob($/;"	f	file:
randomByte	utilities/sqlite3/sqlite3.c	/^static u8 randomByte(void){$/;"	f	file:
randomFill	utilities/sqlite3/sqlite3.c	/^static void randomFill(char *pBuf, int nByte){$/;"	f	file:
randomFunc	utilities/sqlite3/sqlite3.c	/^static void randomFunc($/;"	f	file:
randomness	utilities/sqlite3/sqlite3.c	/^  void (*randomness)(int,void*);$/;"	m	struct:sqlite3_api_routines	file:
rc	utilities/sqlite3/sqlite3.c	/^  int rc;                  \/* Backup process error code *\/$/;"	m	struct:sqlite3_backup	file:
rc	utilities/sqlite3/sqlite3.c	/^  int rc;                 \/* Value to return *\/$/;"	m	struct:Vdbe	file:
rc	utilities/sqlite3/sqlite3.c	/^  int rc;              \/* Return code from execution *\/$/;"	m	struct:Parse	file:
rc	utilities/sqlite3/sqlite3.c	/^  int rc;             \/* Result code stored here *\/$/;"	m	struct:__anon15	file:
rc	utilities/sqlite3/sqlite3.c	/^  int rc;            \/* Return code from sqlite3_exec() *\/$/;"	m	struct:TabResult	file:
read32bits	utilities/sqlite3/sqlite3.c	/^static int read32bits(sqlite3_file *fd, i64 offset, u32 *pRes){$/;"	f	file:
readCoord	utilities/sqlite3/sqlite3.c	/^static void readCoord(u8 *p, RtreeCoord *pCoord){$/;"	f	file:
readDbPage	utilities/sqlite3/sqlite3.c	/^static int readDbPage(PgHdr *pPg){$/;"	f	file:
readInt16	utilities/sqlite3/sqlite3.c	/^static int readInt16(u8 *p){$/;"	f	file:
readInt64	utilities/sqlite3/sqlite3.c	/^static i64 readInt64(u8 *p){$/;"	f	file:
readJournalHdr	utilities/sqlite3/sqlite3.c	/^static int readJournalHdr($/;"	f	file:
readLock	utilities/sqlite3/sqlite3.c	/^  i16 readLock;              \/* Which read lock is being held.  -1 for none *\/$/;"	m	struct:Wal	file:
readMasterJournal	utilities/sqlite3/sqlite3.c	/^static int readMasterJournal(sqlite3_file *pJrnl, char *zMaster, u32 nMaster){$/;"	f	file:
readOnly	utilities/sqlite3/sqlite3.c	/^  u8 readOnly;                \/* True for a read-only database *\/$/;"	m	struct:Pager	file:
readOnly	utilities/sqlite3/sqlite3.c	/^  u8 readOnly;               \/* WAL_RDWR, WAL_RDONLY, or WAL_SHM_RDONLY *\/$/;"	m	struct:Wal	file:
readOnly	utilities/sqlite3/sqlite3.c	/^  u8 readOnly;            \/* True for read-only statements *\/$/;"	m	struct:Vdbe	file:
readOnly	utilities/sqlite3/sqlite3.c	/^  u8 readOnly;          \/* True if the underlying file is readonly *\/$/;"	m	struct:BtShared	file:
read_buf	include/def.h	/^	object_buf_t read_buf, send_buf;$/;"	m	struct:object_io
read_cb	include/def.h	/^	int (*read_cb)(object_t parent);	\/\/\/<读时回调$/;"	m	struct:object_buf
read_io_status	utilities/modbus/modbus.c	/^static int read_io_status(modbus_t *ctx, int function,$/;"	f	file:
read_pos	include/def.h	/^	int read_pos, write_pos;$/;"	m	struct:object_buf
read_pos	include/def.h	/^	int read_pos;$/;"	m	struct:msgqueue
read_registers	utilities/modbus/modbus.c	/^static int read_registers(modbus_t *ctx, int function, int addr, int nb,$/;"	f	file:
readpoint	utilities/sqlite3/sqlite3.c	/^  FilePoint readpoint;            \/* Pointer to the end of the last xRead() *\/$/;"	m	struct:MemJournal	file:
readsTable	utilities/sqlite3/sqlite3.c	/^static int readsTable(Parse *p, int iStartAddr, int iDb, Table *pTab){$/;"	f	file:
realloc	utilities/sqlite3/sqlite3.c	/^  void *(*realloc)(void*,int);$/;"	m	struct:sqlite3_api_routines	file:
receive_msg	utilities/modbus/modbus.c	/^static int receive_msg(modbus_t *ctx, uint8_t *msg, msg_type_t msg_type)$/;"	f	file:
recv	utilities/modbus/modbus-private.h	/^    ssize_t (*recv) (modbus_t *ctx, uint8_t *rsp, int rsp_length);$/;"	m	struct:_modbus_backend
referencesOtherTables	utilities/sqlite3/sqlite3.c	/^static int referencesOtherTables($/;"	f	file:
regCtr	utilities/sqlite3/sqlite3.c	/^  int regCtr;           \/* Memory register holding the rowid counter *\/$/;"	m	struct:AutoincInfo	file:
regReturn	utilities/sqlite3/sqlite3.c	/^    int regReturn;    \/* Register holding return address of addrFillSub *\/$/;"	m	struct:SrcList::SrcList_item	file:
regRoot	utilities/sqlite3/sqlite3.c	/^  int regRoot;         \/* Register holding root page number for new objects *\/$/;"	m	struct:Parse	file:
regRowid	utilities/sqlite3/sqlite3.c	/^  int regRowid;        \/* Register holding rowid of CREATE TABLE entry *\/$/;"	m	struct:Parse	file:
registerTokenizer	utilities/sqlite3/sqlite3.c	/^int registerTokenizer($/;"	f	file:
registerTrace	utilities/sqlite3/sqlite3.c	/^static void registerTrace(FILE *out, int iReg, Mem *p){$/;"	f	file:
register_class	src/application/init.c	/^static void register_class(void)$/;"	f	file:
register_tcp_io_operations	components/io/tcp.c	/^void register_tcp_io_operations(void)$/;"	f
register_thread_daemon	src/application/daemon.c	/^int register_thread_daemon(void)$/;"	f
register_uart_io_operations	components/io/uart.c	/^void register_uart_io_operations(void)$/;"	f
register_udp_io_operations	components/io/udp.c	/^void register_udp_io_operations(void)$/;"	f
rehash	utilities/sqlite3/sqlite3.c	/^static int rehash(Hash *pH, unsigned int new_size){$/;"	f	file:
reindexDatabases	utilities/sqlite3/sqlite3.c	/^static void reindexDatabases(Parse *pParse, char const *zColl){$/;"	f	file:
reindexTable	utilities/sqlite3/sqlite3.c	/^static void reindexTable(Parse *pParse, Table *pTab, char const *zColl){$/;"	f	file:
reinsertNodeContent	utilities/sqlite3/sqlite3.c	/^static int reinsertNodeContent(Rtree *pRtree, RtreeNode *pNode){$/;"	f	file:
releaseAllSavepoints	utilities/sqlite3/sqlite3.c	/^static void releaseAllSavepoints(Pager *pPager){$/;"	f	file:
releaseInodeInfo	utilities/sqlite3/sqlite3.c	/^static void releaseInodeInfo(unixFile *pFile){$/;"	f	file:
releaseMemArray	utilities/sqlite3/sqlite3.c	/^static void releaseMemArray(Mem *p, int N){$/;"	f	file:
releasePage	utilities/sqlite3/sqlite3.c	/^static void releasePage(MemPage *pPage){$/;"	f	file:
release_memory	utilities/sqlite3/sqlite3.c	/^  int (*release_memory)(int);$/;"	m	struct:sqlite3_api_routines	file:
reloadTableSchema	utilities/sqlite3/sqlite3.c	/^static void reloadTableSchema(Parse *pParse, Table *pTab, const char *zName){$/;"	f	file:
relocatePage	utilities/sqlite3/sqlite3.c	/^static int relocatePage($/;"	f	file:
removeElementGivenHash	utilities/sqlite3/sqlite3.c	/^static void removeElementGivenHash($/;"	f	file:
removeFromBlockedList	utilities/sqlite3/sqlite3.c	/^static void removeFromBlockedList(sqlite3 *db){$/;"	f	file:
removeFromSharingList	utilities/sqlite3/sqlite3.c	/^static int removeFromSharingList(BtShared *pBt){$/;"	f	file:
removeNode	utilities/sqlite3/sqlite3.c	/^static int removeNode(Rtree *pRtree, RtreeNode *pNode, int iHeight){$/;"	f	file:
renameParentFunc	utilities/sqlite3/sqlite3.c	/^static void renameParentFunc($/;"	f	file:
renameTableFunc	utilities/sqlite3/sqlite3.c	/^static void renameTableFunc($/;"	f	file:
renameTriggerFunc	utilities/sqlite3/sqlite3.c	/^static void renameTriggerFunc($/;"	f	file:
renderLogMsg	utilities/sqlite3/sqlite3.c	/^static void renderLogMsg(int iErrCode, const char *zFormat, va_list ap){$/;"	f	file:
replaceFunc	utilities/sqlite3/sqlite3.c	/^static void replaceFunc($/;"	f	file:
reserved	utilities/sqlite3/sqlite3.c	/^  int reserved;$/;"	m	struct:afpLockingContext	file:
reset	utilities/sqlite3/sqlite3.c	/^  int  (*reset)(sqlite3_stmt*pStmt);$/;"	m	struct:sqlite3_api_routines	file:
resetAccumulator	utilities/sqlite3/sqlite3.c	/^static void resetAccumulator(Parse *pParse, AggInfo *pAggInfo){$/;"	f	file:
resolveAlias	utilities/sqlite3/sqlite3.c	/^static void resolveAlias($/;"	f	file:
resolveAsName	utilities/sqlite3/sqlite3.c	/^static int resolveAsName($/;"	f	file:
resolveAttachExpr	utilities/sqlite3/sqlite3.c	/^static int resolveAttachExpr(NameContext *pName, Expr *pExpr)$/;"	f	file:
resolveCompoundOrderBy	utilities/sqlite3/sqlite3.c	/^static int resolveCompoundOrderBy($/;"	f	file:
resolveExprStep	utilities/sqlite3/sqlite3.c	/^static int resolveExprStep(Walker *pWalker, Expr *pExpr){$/;"	f	file:
resolveOrderByTermToExprList	utilities/sqlite3/sqlite3.c	/^static int resolveOrderByTermToExprList($/;"	f	file:
resolveOrderGroupBy	utilities/sqlite3/sqlite3.c	/^static int resolveOrderGroupBy($/;"	f	file:
resolveOutOfRangeError	utilities/sqlite3/sqlite3.c	/^static void resolveOutOfRangeError($/;"	f	file:
resolveP2Values	utilities/sqlite3/sqlite3.c	/^static void resolveP2Values(Vdbe *p, int *pMaxFuncArgs){$/;"	f	file:
resolveSelectStep	utilities/sqlite3/sqlite3.c	/^static int resolveSelectStep(Walker *pWalker, Select *p){$/;"	f	file:
response_exception	utilities/modbus/modbus.c	/^static int response_exception(modbus_t *ctx, sft_t *sft,$/;"	f	file:
response_io_status	utilities/modbus/modbus.c	/^static int response_io_status(int address, int nb,$/;"	f	file:
response_timeout	utilities/modbus/modbus-private.h	/^    struct timeval response_timeout;$/;"	m	struct:_modbus	typeref:struct:_modbus::timeval
restoreCursorPosition	utilities/sqlite3/sqlite3.c	48957;"	d	file:
result_blob	utilities/sqlite3/sqlite3.c	/^  void  (*result_blob)(sqlite3_context*,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	file:
result_double	utilities/sqlite3/sqlite3.c	/^  void  (*result_double)(sqlite3_context*,double);$/;"	m	struct:sqlite3_api_routines	file:
result_error	utilities/sqlite3/sqlite3.c	/^  void  (*result_error)(sqlite3_context*,const char*,int);$/;"	m	struct:sqlite3_api_routines	file:
result_error16	utilities/sqlite3/sqlite3.c	/^  void  (*result_error16)(sqlite3_context*,const void*,int);$/;"	m	struct:sqlite3_api_routines	file:
result_error_code	utilities/sqlite3/sqlite3.c	/^  void (*result_error_code)(sqlite3_context*,int);$/;"	m	struct:sqlite3_api_routines	file:
result_error_nomem	utilities/sqlite3/sqlite3.c	/^  void (*result_error_nomem)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines	file:
result_error_toobig	utilities/sqlite3/sqlite3.c	/^  void (*result_error_toobig)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines	file:
result_int	utilities/sqlite3/sqlite3.c	/^  void  (*result_int)(sqlite3_context*,int);$/;"	m	struct:sqlite3_api_routines	file:
result_int64	utilities/sqlite3/sqlite3.c	/^  void  (*result_int64)(sqlite3_context*,sqlite_int64);$/;"	m	struct:sqlite3_api_routines	file:
result_null	utilities/sqlite3/sqlite3.c	/^  void  (*result_null)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines	file:
result_text	utilities/sqlite3/sqlite3.c	/^  void  (*result_text)(sqlite3_context*,const char*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	file:
result_text16	utilities/sqlite3/sqlite3.c	/^  void  (*result_text16)(sqlite3_context*,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	file:
result_text16be	utilities/sqlite3/sqlite3.c	/^  void  (*result_text16be)(sqlite3_context*,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	file:
result_text16le	utilities/sqlite3/sqlite3.c	/^  void  (*result_text16le)(sqlite3_context*,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	file:
result_value	utilities/sqlite3/sqlite3.c	/^  void  (*result_value)(sqlite3_context*,sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
result_zeroblob	utilities/sqlite3/sqlite3.c	/^  void (*result_zeroblob)(sqlite3_context*,int);$/;"	m	struct:sqlite3_api_routines	file:
retRangeStart	utilities/sqlite3/sqlite3.c	/^  unsigned long long retRangeStart; \/* nbr of 1st byte locked if successful *\/$/;"	m	struct:ByteRangeLockPB2	file:
retryIoerr	utilities/sqlite3/sqlite3.c	/^static int retryIoerr(int *pnRetry){$/;"	f	file:
returnSingleInt	utilities/sqlite3/sqlite3.c	/^static void returnSingleInt(Parse *pParse, const char *zLabel, i64 value){$/;"	f	file:
robust_close	utilities/sqlite3/sqlite3.c	/^static void robust_close(unixFile *pFile, int h, int lineno){$/;"	f	file:
robust_flock	utilities/sqlite3/sqlite3.c	/^static int robust_flock(int fd, int op){$/;"	f	file:
robust_flock	utilities/sqlite3/sqlite3.c	26656;"	d	file:
robust_ftruncate	utilities/sqlite3/sqlite3.c	/^static int robust_ftruncate(int h, sqlite3_int64 sz){$/;"	f	file:
robust_open	utilities/sqlite3/sqlite3.c	/^static int robust_open(const char *z, int f, int m){$/;"	f	file:
rollback_hook	utilities/sqlite3/sqlite3.c	/^  void * (*rollback_hook)(sqlite3*,void(*)(void*),void*);$/;"	m	struct:sqlite3_api_routines	file:
roundFunc	utilities/sqlite3/sqlite3.c	/^static void roundFunc(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
rowSetListToTree	utilities/sqlite3/sqlite3.c	/^static struct RowSetEntry *rowSetListToTree(struct RowSetEntry *pList){$/;"	f	file:
rowSetMerge	utilities/sqlite3/sqlite3.c	/^static struct RowSetEntry *rowSetMerge($/;"	f	file:
rowSetNDeepTree	utilities/sqlite3/sqlite3.c	/^static struct RowSetEntry *rowSetNDeepTree($/;"	f	file:
rowSetSort	utilities/sqlite3/sqlite3.c	/^static void rowSetSort(RowSet *p){$/;"	f	file:
rowSetToList	utilities/sqlite3/sqlite3.c	/^static void rowSetToList(RowSet *p){$/;"	f	file:
rowSetTreeToList	utilities/sqlite3/sqlite3.c	/^static void rowSetTreeToList($/;"	f	file:
rowid	utilities/sqlite3/sqlite3.c	/^  i64 rowid;          \/* Used by UNPACKED_PREFIX_SEARCH *\/$/;"	m	struct:UnpackedRecord	file:
rowidIsValid	utilities/sqlite3/sqlite3.c	/^  Bool rowidIsValid;    \/* True if lastRowid is valid *\/$/;"	m	struct:VdbeCursor	file:
rowidWrite	utilities/sqlite3/sqlite3.c	/^static int rowidWrite(Rtree *pRtree, sqlite3_int64 iRowid, sqlite3_int64 iNode){$/;"	f	file:
rtreeBestIndex	utilities/sqlite3/sqlite3.c	/^static int rtreeBestIndex(sqlite3_vtab *tab, sqlite3_index_info *pIdxInfo){$/;"	f	file:
rtreeClose	utilities/sqlite3/sqlite3.c	/^static int rtreeClose(sqlite3_vtab_cursor *cur){$/;"	f	file:
rtreeColumn	utilities/sqlite3/sqlite3.c	/^static int rtreeColumn(sqlite3_vtab_cursor *cur, sqlite3_context *ctx, int i){$/;"	f	file:
rtreeConnect	utilities/sqlite3/sqlite3.c	/^static int rtreeConnect($/;"	f	file:
rtreeCreate	utilities/sqlite3/sqlite3.c	/^static int rtreeCreate($/;"	f	file:
rtreeDeleteRowid	utilities/sqlite3/sqlite3.c	/^static int rtreeDeleteRowid(Rtree *pRtree, sqlite3_int64 iDelete){$/;"	f	file:
rtreeDestroy	utilities/sqlite3/sqlite3.c	/^static int rtreeDestroy(sqlite3_vtab *pVtab){$/;"	f	file:
rtreeDisconnect	utilities/sqlite3/sqlite3.c	/^static int rtreeDisconnect(sqlite3_vtab *pVtab){$/;"	f	file:
rtreeEof	utilities/sqlite3/sqlite3.c	/^static int rtreeEof(sqlite3_vtab_cursor *cur){$/;"	f	file:
rtreeFilter	utilities/sqlite3/sqlite3.c	/^static int rtreeFilter($/;"	f	file:
rtreeInit	utilities/sqlite3/sqlite3.c	/^static int rtreeInit($/;"	f	file:
rtreeInsertCell	utilities/sqlite3/sqlite3.c	/^static int rtreeInsertCell($/;"	f	file:
rtreeModule	utilities/sqlite3/sqlite3.c	/^static sqlite3_module rtreeModule = {$/;"	v	file:
rtreeNext	utilities/sqlite3/sqlite3.c	/^static int rtreeNext(sqlite3_vtab_cursor *pVtabCursor){$/;"	f	file:
rtreeOpen	utilities/sqlite3/sqlite3.c	/^static int rtreeOpen(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor){$/;"	f	file:
rtreeReference	utilities/sqlite3/sqlite3.c	/^static void rtreeReference(Rtree *pRtree){$/;"	f	file:
rtreeRelease	utilities/sqlite3/sqlite3.c	/^static void rtreeRelease(Rtree *pRtree){$/;"	f	file:
rtreeRename	utilities/sqlite3/sqlite3.c	/^static int rtreeRename(sqlite3_vtab *pVtab, const char *zNewName){$/;"	f	file:
rtreeRowid	utilities/sqlite3/sqlite3.c	/^static int rtreeRowid(sqlite3_vtab_cursor *pVtabCursor, sqlite_int64 *pRowid){$/;"	f	file:
rtreeSqlInit	utilities/sqlite3/sqlite3.c	/^static int rtreeSqlInit($/;"	f	file:
rtreeUpdate	utilities/sqlite3/sqlite3.c	/^static int rtreeUpdate($/;"	f	file:
rtreedepth	utilities/sqlite3/sqlite3.c	/^static void rtreedepth(sqlite3_context *ctx, int nArg, sqlite3_value **apArg){$/;"	f	file:
rtreenode	utilities/sqlite3/sqlite3.c	/^static void rtreenode(sqlite3_context *ctx, int nArg, sqlite3_value **apArg){$/;"	f	file:
run	include/def.h	/^	int run;	\/\/\/<0 pause, 1 run$/;"	m	struct:object_timer
runOnlyOnce	utilities/sqlite3/sqlite3.c	/^  u8 runOnlyOnce;         \/* Automatically expire on reset *\/$/;"	m	struct:Vdbe	file:
s	utilities/modbus/modbus-private.h	/^    int s;$/;"	m	struct:_modbus
s	utilities/sqlite3/sqlite3.c	/^  Mem s;                \/* The return value is stored here *\/$/;"	m	struct:sqlite3_context	file:
s	utilities/sqlite3/sqlite3.c	/^  double s;          \/* Seconds *\/$/;"	m	struct:DateTime	file:
s	utilities/sqlite3/sqlite3.c	/^  unsigned char s[256];          \/* State variables *\/$/;"	m	struct:sqlite3PrngType	file:
sArg	utilities/sqlite3/sqlite3.c	/^  Token sArg;                \/* Complete text of a module argument *\/$/;"	m	struct:Parse	file:
sColMap	utilities/sqlite3/sqlite3.c	/^  struct sColMap {  \/* Mapping of columns in pFrom to columns in zTo *\/$/;"	s	struct:FKey	file:
sLastToken	utilities/sqlite3/sqlite3.c	/^  Token sLastToken;    \/* The last token parsed *\/$/;"	m	struct:Parse	file:
sNameToken	utilities/sqlite3/sqlite3.c	/^  Token sNameToken;    \/* Token with unqualified schema object name *\/$/;"	m	struct:Parse	file:
safety_level	utilities/sqlite3/sqlite3.c	/^  u8 safety_level;     \/* How aggressive at syncing data to disk *\/$/;"	m	struct:Db	file:
saveAllCursors	utilities/sqlite3/sqlite3.c	/^static int saveAllCursors(BtShared *pBt, Pgno iRoot, BtCursor *pExcept){$/;"	f	file:
saveCursorPosition	utilities/sqlite3/sqlite3.c	/^static int saveCursorPosition(BtCursor *pCur){$/;"	f	file:
savedNQueryLoop	utilities/sqlite3/sqlite3.c	/^  double savedNQueryLoop;        \/* pParse->nQueryLoop outside the WHERE loop *\/$/;"	m	struct:WhereInfo	file:
saved_cnt	utilities/sqlite3/sqlite3.c	/^static int saved_cnt;$/;"	v	file:
scalarFunc	utilities/sqlite3/sqlite3.c	/^static void scalarFunc($/;"	f	file:
schemaIsValid	utilities/sqlite3/sqlite3.c	/^static void schemaIsValid(Parse *pParse){$/;"	f	file:
schema_cookie	utilities/sqlite3/sqlite3.c	/^  int schema_cookie;   \/* Database schema version number for this file *\/$/;"	m	struct:Schema	file:
scratchAllocOut	utilities/sqlite3/sqlite3.c	/^static int scratchAllocOut = 0;$/;"	v	file:
sectorSize	utilities/sqlite3/sqlite3.c	/^  DWORD sectorSize;       \/* Sector size of the device file is on *\/$/;"	m	struct:winFile	file:
sectorSize	utilities/sqlite3/sqlite3.c	/^  u32 sectorSize;             \/* Assumed sector size during rollback *\/$/;"	m	struct:Pager	file:
secureDelete	utilities/sqlite3/sqlite3.c	/^  u8 secureDelete;      \/* True if secure_delete is enabled *\/$/;"	m	struct:BtShared	file:
seekAndRead	utilities/sqlite3/sqlite3.c	/^static int seekAndRead(unixFile *id, sqlite3_int64 offset, void *pBuf, int cnt){$/;"	f	file:
seekAndWrite	utilities/sqlite3/sqlite3.c	/^static int seekAndWrite(unixFile *id, i64 offset, const void *pBuf, int cnt){$/;"	f	file:
seekResult	utilities/sqlite3/sqlite3.c	/^  int seekResult;$/;"	m	struct:VdbeCursor	file:
seekWinFile	utilities/sqlite3/sqlite3.c	/^static int seekWinFile(winFile *pFile, sqlite3_int64 iOffset){$/;"	f	file:
selFlags	utilities/sqlite3/sqlite3.c	/^  u16 selFlags;          \/* Various SF_* values *\/$/;"	m	struct:Select	file:
select	utilities/modbus/modbus-private.h	/^    int (*select) (modbus_t *ctx, fd_set *rfds, struct timeval *tv, int msg_length);$/;"	m	struct:_modbus_backend
selectAddColumnTypeAndCollation	utilities/sqlite3/sqlite3.c	/^static void selectAddColumnTypeAndCollation($/;"	f	file:
selectAddSubqueryTypeInfo	utilities/sqlite3/sqlite3.c	/^static int selectAddSubqueryTypeInfo(Walker *pWalker, Select *p){$/;"	f	file:
selectColumnsFromExprList	utilities/sqlite3/sqlite3.c	/^static int selectColumnsFromExprList($/;"	f	file:
selectExpander	utilities/sqlite3/sqlite3.c	/^static int selectExpander(Walker *pWalker, Select *p){$/;"	f	file:
selectInnerLoop	utilities/sqlite3/sqlite3.c	/^static void selectInnerLoop($/;"	f	file:
selectNodeIsConstant	utilities/sqlite3/sqlite3.c	/^static int selectNodeIsConstant(Walker *pWalker, Select *NotUsed){$/;"	f	file:
selectOpName	utilities/sqlite3/sqlite3.c	/^static const char *selectOpName(int id){$/;"	f	file:
semCheckReservedLock	utilities/sqlite3/sqlite3.c	/^static int semCheckReservedLock(sqlite3_file *id, int *pResOut) {$/;"	f	file:
semClose	utilities/sqlite3/sqlite3.c	/^static int semClose(sqlite3_file *id) {$/;"	f	file:
semLock	utilities/sqlite3/sqlite3.c	/^static int semLock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
semUnlock	utilities/sqlite3/sqlite3.c	/^static int semUnlock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
sem_p	utilities/common/sem.c	/^int sem_p(int sem_id)$/;"	f
sem_v	utilities/common/sem.c	/^int sem_v(int sem_id)$/;"	f
semun	utilities/common/sem.c	/^typedef union semun {$/;"	u	file:
send	utilities/modbus/modbus-private.h	/^    ssize_t (*send) (modbus_t *ctx, const uint8_t *req, int req_length);$/;"	m	struct:_modbus_backend
send_buf	include/def.h	/^	object_buf_t read_buf, send_buf;$/;"	m	struct:object_io
send_cb	include/def.h	/^	int (*send_cb)(object_t parent);	\/\/\/<写时回调$/;"	m	struct:object_buf
send_message	src/kernel/message.c	/^int send_message(HMOD hmod, int message, WPARAM wparam, LPARAM lparam)$/;"	f
send_msg	utilities/modbus/modbus.c	/^static int send_msg(modbus_t *ctx, uint8_t *msg, int msg_length)$/;"	f	file:
send_msg_pre	utilities/modbus/modbus-private.h	/^    int (*send_msg_pre) (uint8_t *req, int req_length);$/;"	m	struct:_modbus_backend
seqCount	utilities/sqlite3/sqlite3.c	/^  i64 seqCount;         \/* Sequence counter *\/$/;"	m	struct:VdbeCursor	file:
serial_mode	utilities/modbus/modbus-rtu-private.h	/^    int serial_mode;$/;"	m	struct:_modbus_rtu
service	utilities/modbus/modbus-tcp-private.h	/^    char service[_MODBUS_TCP_PI_SERVICE_LENGTH];$/;"	m	struct:_modbus_tcp_pi
setChildPtrmaps	utilities/sqlite3/sqlite3.c	/^static int setChildPtrmaps(MemPage *pPage){$/;"	f	file:
setChildPtrmaps	utilities/sqlite3/sqlite3.c	51332;"	d	file:
setDateTimeToCurrent	utilities/sqlite3/sqlite3.c	/^static void setDateTimeToCurrent(sqlite3_context *context, DateTime *p){$/;"	f	file:
setDestPgsz	utilities/sqlite3/sqlite3.c	/^static int setDestPgsz(sqlite3_backup *p){$/;"	f	file:
setJoinExpr	utilities/sqlite3/sqlite3.c	/^static void setJoinExpr(Expr *p, int iTable){$/;"	f	file:
setLikeOptFlag	utilities/sqlite3/sqlite3.c	/^static void setLikeOptFlag(sqlite3 *db, const char *zName, u8 flagVal){$/;"	f	file:
setMaster	utilities/sqlite3/sqlite3.c	/^  u8 setMaster;               \/* True if a m-j name has been written to jrnl *\/$/;"	m	struct:Pager	file:
setPendingFd	utilities/sqlite3/sqlite3.c	/^static void setPendingFd(unixFile *pFile){$/;"	f	file:
setResultStrOrError	utilities/sqlite3/sqlite3.c	/^static void setResultStrOrError($/;"	f	file:
setSectorSize	utilities/sqlite3/sqlite3.c	/^static void setSectorSize(Pager *pPager){$/;"	f	file:
setSharedCacheTableLock	utilities/sqlite3/sqlite3.c	/^static int setSharedCacheTableLock(Btree *p, Pgno iTable, u8 eLock){$/;"	f	file:
setSharedCacheTableLock	utilities/sqlite3/sqlite3.c	48344;"	d	file:
set_Parity	utilities/common/serial_port.c	/^static int set_Parity(int fd,int databits,int stopbits,int parity)$/;"	f	file:
set_authorizer	utilities/sqlite3/sqlite3.c	/^  int  (*set_authorizer)(sqlite3*,int(*)(void*,int,const char*,const char*,const char*,const char*),void*);$/;"	m	struct:sqlite3_api_routines	file:
set_auxdata	utilities/sqlite3/sqlite3.c	/^  void  (*set_auxdata)(sqlite3_context*,int,void*,void (*)(void*));$/;"	m	struct:sqlite3_api_routines	file:
set_print_level	src/kernel/print.c	/^void set_print_level(int plevel)$/;"	f
set_slave	utilities/modbus/modbus-private.h	/^    int (*set_slave) (modbus_t *ctx, int slave);$/;"	m	struct:_modbus_backend
set_speed	utilities/common/serial_port.c	/^static int set_speed(int fd, int speed)$/;"	f	file:
setupLookaside	utilities/sqlite3/sqlite3.c	/^static int setupLookaside(sqlite3 *db, void *pBuf, int sz, int cnt){$/;"	f	file:
sft_t	utilities/modbus/modbus-private.h	/^} sft_t;$/;"	t	typeref:struct:_sft
sharable	utilities/sqlite3/sqlite3.c	/^  u8 sharable;       \/* True if we can share pBt with another db *\/$/;"	m	struct:Btree	file:
shared	utilities/sqlite3/sqlite3.c	/^  winceLock *shared;      \/* Global shared lock memory for the file  *\/$/;"	m	struct:winFile	file:
sharedByte	utilities/sqlite3/sqlite3.c	/^  unsigned long long sharedByte;  \/* for AFP simulated shared lock *\/$/;"	m	struct:unixInodeInfo	file:
sharedCacheEnabled	utilities/sqlite3/sqlite3.c	/^  int sharedCacheEnabled;           \/* true if shared-cache mode enabled *\/$/;"	m	struct:Sqlite3Config	file:
sharedLockByte	utilities/sqlite3/sqlite3.c	/^  short sharedLockByte;   \/* Randomly chosen byte used as a shared lock *\/$/;"	m	struct:winFile	file:
sharedMask	utilities/sqlite3/sqlite3.c	/^  u16 sharedMask;            \/* Mask of shared locks held *\/$/;"	m	struct:unixShm	file:
sharedMask	utilities/sqlite3/sqlite3.c	/^  u16 sharedMask;            \/* Mask of shared locks held *\/$/;"	m	struct:winShm	file:
sharedMask	utilities/sqlite3/sqlite3.c	/^  u32 sharedMask;            \/* Mask of shared locks held *\/$/;"	m	struct:os2ShmLink	file:
sharedMask	utilities/sqlite3/sqlite3.c	/^  u8 sharedMask;             \/* Mask of shared locks held *\/$/;"	m	struct:unixShmNode	file:
shmBaseName	utilities/sqlite3/sqlite3.c	/^  char shmBaseName[1];       \/* Name of the memory object !!! must last !!! *\/$/;"	m	struct:os2ShmNode	file:
sigalrm_handler	src/kernel/timer.c	/^static void sigalrm_handler(int s)$/;"	f	file:
sigvsig_handler	src/application/init.c	/^static void sigvsig_handler(int s)$/;"	f	file:
simpleClose	utilities/sqlite3/sqlite3.c	/^static int simpleClose(sqlite3_tokenizer_cursor *pCursor){$/;"	f	file:
simpleCreate	utilities/sqlite3/sqlite3.c	/^static int simpleCreate($/;"	f	file:
simpleDelim	utilities/sqlite3/sqlite3.c	/^static int simpleDelim(simple_tokenizer *t, unsigned char c){$/;"	f	file:
simpleDestroy	utilities/sqlite3/sqlite3.c	/^static int simpleDestroy(sqlite3_tokenizer *pTokenizer){$/;"	f	file:
simpleNext	utilities/sqlite3/sqlite3.c	/^static int simpleNext($/;"	f	file:
simpleOpen	utilities/sqlite3/sqlite3.c	/^static int simpleOpen($/;"	f	file:
simpleTokenizerModule	utilities/sqlite3/sqlite3.c	/^static const sqlite3_tokenizer_module simpleTokenizerModule = {$/;"	v	file:
simple_tokenizer	utilities/sqlite3/sqlite3.c	/^typedef struct simple_tokenizer {$/;"	s	file:
simple_tokenizer	utilities/sqlite3/sqlite3.c	/^} simple_tokenizer;$/;"	t	typeref:struct:simple_tokenizer	file:
simple_tokenizer_cursor	utilities/sqlite3/sqlite3.c	/^typedef struct simple_tokenizer_cursor {$/;"	s	file:
simple_tokenizer_cursor	utilities/sqlite3/sqlite3.c	/^} simple_tokenizer_cursor;$/;"	t	typeref:struct:simple_tokenizer_cursor	file:
size	include/def.h	/^	int size;					\/\/\/<长度$/;"	m	struct:object_information
size4x	utilities/sqlite3/sqlite3.c	/^      u32 size4x;     \/* 4x the size of current chunk in Mem3Block elements *\/$/;"	m	struct:Mem3Block::__anon19::__anon20	file:
sjfd	utilities/sqlite3/sqlite3.c	/^  sqlite3_file *sjfd;         \/* File descriptor for sub-journal *\/$/;"	m	struct:Pager	file:
skipNext	utilities/sqlite3/sqlite3.c	/^  int skipNext;    \/* Prev() is noop if negative. Next() is noop if positive *\/$/;"	m	struct:BtCursor	file:
slave	utilities/modbus/modbus-private.h	/^    int slave;$/;"	m	struct:_modbus
slave	utilities/modbus/modbus-private.h	/^    int slave;$/;"	m	struct:_sft
sleep	utilities/sqlite3/sqlite3.c	/^  int (*sleep)(int);$/;"	m	struct:sqlite3_api_routines	file:
snprintf	utilities/sqlite3/sqlite3.c	/^  char * (*snprintf)(int,char*,const char*,...);$/;"	m	struct:sqlite3_api_routines	file:
softHeapLimitEnforcer	utilities/sqlite3/sqlite3.c	/^static void softHeapLimitEnforcer($/;"	f	file:
soft_heap_limit	utilities/sqlite3/sqlite3.c	/^  void (*soft_heap_limit)(int);$/;"	m	struct:sqlite3_api_routines	file:
soft_heap_limit64	utilities/sqlite3/sqlite3.c	/^  sqlite3_int64 (*soft_heap_limit64)(sqlite3_int64);$/;"	m	struct:sqlite3_api_routines	file:
sortOrder	utilities/sqlite3/sqlite3.c	/^    u8 sortOrder;          \/* 1 for DESC or 0 for ASC *\/$/;"	m	struct:ExprList::ExprList_item	file:
sortingIdx	utilities/sqlite3/sqlite3.c	/^  int sortingIdx;         \/* Cursor number of the sorting index *\/$/;"	m	struct:AggInfo	file:
sortingIdxPTab	utilities/sqlite3/sqlite3.c	/^  int sortingIdxPTab;     \/* Cursor number of pseudo-table *\/$/;"	m	struct:AggInfo	file:
soundexFunc	utilities/sqlite3/sqlite3.c	/^static void soundexFunc($/;"	f	file:
sourceid	utilities/sqlite3/sqlite3.c	/^  const char *(*sourceid)(void);$/;"	m	struct:sqlite3_api_routines	file:
sourceidFunc	utilities/sqlite3/sqlite3.c	/^static void sourceidFunc($/;"	f	file:
spanBinaryExpr	utilities/sqlite3/sqlite3.c	/^  static void spanBinaryExpr($/;"	f	file:
spanExpr	utilities/sqlite3/sqlite3.c	/^  static void spanExpr(ExprSpan *pOut, Parse *pParse, int op, Token *pValue){$/;"	f	file:
spanSet	utilities/sqlite3/sqlite3.c	/^  static void spanSet(ExprSpan *pOut, Token *pStart, Token *pEnd){$/;"	f	file:
spanUnaryPostfix	utilities/sqlite3/sqlite3.c	/^  static void spanUnaryPostfix($/;"	f	file:
spanUnaryPrefix	utilities/sqlite3/sqlite3.c	/^  static void spanUnaryPrefix($/;"	f	file:
speed_arr	utilities/common/serial_port.c	/^static int speed_arr[] = {B115200, B38400, B19200, B9600, B4800, B2400, B1200, B300};$/;"	v	file:
splitNodeGuttman	utilities/sqlite3/sqlite3.c	/^static int splitNodeGuttman($/;"	f	file:
splitNodeStartree	utilities/sqlite3/sqlite3.c	/^static int splitNodeStartree($/;"	f	file:
sql	utilities/sqlite3/sqlite3.c	/^  const char *(*sql)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	file:
sqlite3	utilities/sqlite3/sqlite3.c	/^struct sqlite3 {$/;"	s	file:
sqlite3	utilities/sqlite3/sqlite3.c	/^typedef struct sqlite3 sqlite3;$/;"	t	typeref:struct:sqlite3	file:
sqlite3	utilities/sqlite3/sqlite3.h	/^typedef struct sqlite3 sqlite3;$/;"	t	typeref:struct:sqlite3
sqlite3AbsInt32	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3AbsInt32(int x){$/;"	f
sqlite3AddCheckConstraint	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AddCheckConstraint($/;"	f
sqlite3AddCollateType	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AddCollateType(Parse *pParse, Token *pToken){$/;"	f
sqlite3AddColumn	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AddColumn(Parse *pParse, Token *pName){$/;"	f
sqlite3AddColumnType	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AddColumnType(Parse *pParse, Token *pType){$/;"	f
sqlite3AddDefaultValue	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AddDefaultValue(Parse *pParse, ExprSpan *pSpan){$/;"	f
sqlite3AddInt64	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3AddInt64(i64 *pA, i64 iB){$/;"	f
sqlite3AddNotNull	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AddNotNull(Parse *pParse, int onError){$/;"	f
sqlite3AddPrimaryKey	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AddPrimaryKey($/;"	f
sqlite3AffinityType	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE char sqlite3AffinityType(const char *zIn){$/;"	f
sqlite3AlterBeginAddColumn	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AlterBeginAddColumn(Parse *pParse, SrcList *pSrc){$/;"	f
sqlite3AlterFinishAddColumn	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AlterFinishAddColumn(Parse *pParse, Token *pColDef){$/;"	f
sqlite3AlterFunctions	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AlterFunctions(void){$/;"	f
sqlite3AlterRenameTable	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AlterRenameTable($/;"	f
sqlite3AnalysisLoad	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3AnalysisLoad(sqlite3 *db, int iDb){$/;"	f
sqlite3Analyze	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Analyze(Parse *pParse, Token *pName1, Token *pName2){$/;"	f
sqlite3ApiExit	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ApiExit(sqlite3* db, int rc){$/;"	f
sqlite3Apis	utilities/sqlite3/sqlite3.c	/^static const sqlite3_api_routines sqlite3Apis = { 0 };$/;"	v	file:
sqlite3Apis	utilities/sqlite3/sqlite3.c	/^static const sqlite3_api_routines sqlite3Apis = {$/;"	v	file:
sqlite3ArrayAllocate	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3ArrayAllocate($/;"	f
sqlite3AtoF	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3AtoF(const char *z, double *pResult, int length, u8 enc){$/;"	f
sqlite3Atoi	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Atoi(const char *z){$/;"	f
sqlite3Atoi64	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Atoi64(const char *zNum, i64 *pNum, int length, u8 enc){$/;"	f
sqlite3Attach	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Attach(Parse *pParse, Expr *p, Expr *pDbname, Expr *pKey){$/;"	f
sqlite3AuthCheck	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3AuthCheck($/;"	f
sqlite3AuthCheck	utilities/sqlite3/sqlite3.c	11518;"	d	file:
sqlite3AuthContextPop	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AuthContextPop(AuthContext *pContext){$/;"	f
sqlite3AuthContextPop	utilities/sqlite3/sqlite3.c	11520;"	d	file:
sqlite3AuthContextPush	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AuthContextPush($/;"	f
sqlite3AuthContextPush	utilities/sqlite3/sqlite3.c	11519;"	d	file:
sqlite3AuthRead	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AuthRead($/;"	f
sqlite3AuthRead	utilities/sqlite3/sqlite3.c	11517;"	d	file:
sqlite3AuthReadCol	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3AuthReadCol($/;"	f
sqlite3AutoExtList	utilities/sqlite3/sqlite3.c	/^static SQLITE_WSD struct sqlite3AutoExtList {$/;"	s	file:
sqlite3AutoExtList	utilities/sqlite3/sqlite3.c	/^typedef struct sqlite3AutoExtList sqlite3AutoExtList;$/;"	t	typeref:struct:sqlite3AutoExtList	file:
sqlite3AutoLoadExtensions	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AutoLoadExtensions(sqlite3 *db){$/;"	f
sqlite3Autoext	utilities/sqlite3/sqlite3.c	/^} sqlite3Autoext = { 0, 0 };$/;"	v	typeref:struct:sqlite3AutoExtList	file:
sqlite3AutoincrementBegin	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AutoincrementBegin(Parse *pParse){$/;"	f
sqlite3AutoincrementBegin	utilities/sqlite3/sqlite3.c	11360;"	d	file:
sqlite3AutoincrementEnd	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AutoincrementEnd(Parse *pParse){$/;"	f
sqlite3AutoincrementEnd	utilities/sqlite3/sqlite3.c	11361;"	d	file:
sqlite3BackupRestart	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BackupRestart(sqlite3_backup *pBackup){$/;"	f
sqlite3BackupUpdate	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BackupUpdate(sqlite3_backup *pBackup, Pgno iPage, const u8 *aData){$/;"	f
sqlite3BeginBenignMalloc	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BeginBenignMalloc(void){$/;"	f
sqlite3BeginBenignMalloc	utilities/sqlite3/sqlite3.c	11789;"	d	file:
sqlite3BeginParse	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BeginParse(Parse *pParse, int explainFlag){$/;"	f
sqlite3BeginTransaction	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BeginTransaction(Parse *pParse, int type){$/;"	f
sqlite3BeginTrigger	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BeginTrigger($/;"	f
sqlite3BeginWriteOperation	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BeginWriteOperation(Parse *pParse, int setStatement, int iDb){$/;"	f
sqlite3BenignMallocHooks	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BenignMallocHooks($/;"	f
sqlite3BinaryCompareCollSeq	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE CollSeq *sqlite3BinaryCompareCollSeq($/;"	f
sqlite3BitvecBuiltinTest	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BitvecBuiltinTest(int sz, int *aOp){$/;"	f
sqlite3BitvecClear	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BitvecClear(Bitvec *p, u32 i, void *pBuf){$/;"	f
sqlite3BitvecCreate	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Bitvec *sqlite3BitvecCreate(u32 iSize){$/;"	f
sqlite3BitvecDestroy	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BitvecDestroy(Bitvec *p){$/;"	f
sqlite3BitvecSet	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BitvecSet(Bitvec *p, u32 i){$/;"	f
sqlite3BitvecSize	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3BitvecSize(Bitvec *p){$/;"	f
sqlite3BitvecTest	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BitvecTest(Bitvec *p, u32 i){$/;"	f
sqlite3BlockedList	utilities/sqlite3/sqlite3.c	/^static sqlite3 *SQLITE_WSD sqlite3BlockedList = 0;$/;"	v	file:
sqlite3BtreeBeginStmt	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeBeginStmt(Btree *p, int iStatement){$/;"	f
sqlite3BtreeBeginTrans	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeBeginTrans(Btree *p, int wrflag){$/;"	f
sqlite3BtreeCacheOverflow	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeCacheOverflow(BtCursor *pCur){$/;"	f
sqlite3BtreeCheckpoint	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCheckpoint(Btree *p, int eMode, int *pnLog, int *pnCkpt){$/;"	f
sqlite3BtreeClearCursor	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeClearCursor(BtCursor *pCur){$/;"	f
sqlite3BtreeClearTable	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeClearTable(Btree *p, int iTable, int *pnChange){$/;"	f
sqlite3BtreeClose	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeClose(Btree *p){$/;"	f
sqlite3BtreeCloseCursor	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCloseCursor(BtCursor *pCur){$/;"	f
sqlite3BtreeCommit	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCommit(Btree *p){$/;"	f
sqlite3BtreeCommitPhaseOne	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCommitPhaseOne(Btree *p, const char *zMaster){$/;"	f
sqlite3BtreeCommitPhaseTwo	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCommitPhaseTwo(Btree *p, int bCleanup){$/;"	f
sqlite3BtreeCopyFile	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCopyFile(Btree *pTo, Btree *pFrom){$/;"	f
sqlite3BtreeCount	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCount(BtCursor *pCur, i64 *pnEntry){$/;"	f
sqlite3BtreeCreateTable	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCreateTable(Btree *p, int *piTable, int flags){$/;"	f
sqlite3BtreeCursor	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCursor($/;"	f
sqlite3BtreeCursorHasMoved	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCursorHasMoved(BtCursor *pCur, int *pHasMoved){$/;"	f
sqlite3BtreeCursorIsValid	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCursorIsValid(BtCursor *pCur){$/;"	f
sqlite3BtreeCursorSize	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCursorSize(void){$/;"	f
sqlite3BtreeCursorZero	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeCursorZero(BtCursor *p){$/;"	f
sqlite3BtreeData	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeData(BtCursor *pCur, u32 offset, u32 amt, void *pBuf){$/;"	f
sqlite3BtreeDataFetch	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const void *sqlite3BtreeDataFetch(BtCursor *pCur, int *pAmt){$/;"	f
sqlite3BtreeDataSize	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeDataSize(BtCursor *pCur, u32 *pSize){$/;"	f
sqlite3BtreeDelete	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeDelete(BtCursor *pCur){$/;"	f
sqlite3BtreeDropTable	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeDropTable(Btree *p, int iTable, int *piMoved){$/;"	f
sqlite3BtreeEnter	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeEnter(Btree *p){$/;"	f
sqlite3BtreeEnter	utilities/sqlite3/sqlite3.c	8126;"	d	file:
sqlite3BtreeEnterAll	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeEnterAll(sqlite3 *db){$/;"	f
sqlite3BtreeEnterAll	utilities/sqlite3/sqlite3.c	8127;"	d	file:
sqlite3BtreeEnterCursor	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeEnterCursor(BtCursor *pCur){$/;"	f
sqlite3BtreeEnterCursor	utilities/sqlite3/sqlite3.c	8146;"	d	file:
sqlite3BtreeEof	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeEof(BtCursor *pCur){$/;"	f
sqlite3BtreeFirst	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeFirst(BtCursor *pCur, int *pRes){$/;"	f
sqlite3BtreeGetAutoVacuum	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeGetAutoVacuum(Btree *p){$/;"	f
sqlite3BtreeGetCachedRowid	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE sqlite3_int64 sqlite3BtreeGetCachedRowid(BtCursor *pCur){$/;"	f
sqlite3BtreeGetFilename	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const char *sqlite3BtreeGetFilename(Btree *p){$/;"	f
sqlite3BtreeGetJournalname	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const char *sqlite3BtreeGetJournalname(Btree *p){$/;"	f
sqlite3BtreeGetMeta	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeGetMeta(Btree *p, int idx, u32 *pMeta){$/;"	f
sqlite3BtreeGetPageSize	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeGetPageSize(Btree *p){$/;"	f
sqlite3BtreeGetReserve	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeGetReserve(Btree *p){$/;"	f
sqlite3BtreeHoldsAllMutexes	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeHoldsAllMutexes(sqlite3 *db){$/;"	f
sqlite3BtreeHoldsAllMutexes	utilities/sqlite3/sqlite3.c	8151;"	d	file:
sqlite3BtreeHoldsMutex	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeHoldsMutex(Btree *p){$/;"	f
sqlite3BtreeHoldsMutex	utilities/sqlite3/sqlite3.c	8150;"	d	file:
sqlite3BtreeIncrVacuum	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeIncrVacuum(Btree *p){$/;"	f
sqlite3BtreeInsert	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeInsert($/;"	f
sqlite3BtreeIntegrityCheck	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE char *sqlite3BtreeIntegrityCheck($/;"	f
sqlite3BtreeIsInBackup	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeIsInBackup(Btree *p){$/;"	f
sqlite3BtreeIsInReadTrans	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeIsInReadTrans(Btree *p){$/;"	f
sqlite3BtreeIsInTrans	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeIsInTrans(Btree *p){$/;"	f
sqlite3BtreeKey	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeKey(BtCursor *pCur, u32 offset, u32 amt, void *pBuf){$/;"	f
sqlite3BtreeKeyFetch	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const void *sqlite3BtreeKeyFetch(BtCursor *pCur, int *pAmt){$/;"	f
sqlite3BtreeKeySize	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeKeySize(BtCursor *pCur, i64 *pSize){$/;"	f
sqlite3BtreeLast	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeLast(BtCursor *pCur, int *pRes){$/;"	f
sqlite3BtreeLastPage	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3BtreeLastPage(Btree *p){$/;"	f
sqlite3BtreeLeave	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeLeave(Btree *p){$/;"	f
sqlite3BtreeLeave	utilities/sqlite3/sqlite3.c	8145;"	d	file:
sqlite3BtreeLeaveAll	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeLeaveAll(sqlite3 *db){$/;"	f
sqlite3BtreeLeaveAll	utilities/sqlite3/sqlite3.c	8148;"	d	file:
sqlite3BtreeLeaveCursor	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeLeaveCursor(BtCursor *pCur){$/;"	f
sqlite3BtreeLeaveCursor	utilities/sqlite3/sqlite3.c	8147;"	d	file:
sqlite3BtreeLockTable	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeLockTable(Btree *p, int iTab, u8 isWriteLock){$/;"	f
sqlite3BtreeMaxPageCount	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeMaxPageCount(Btree *p, int mxPage){$/;"	f
sqlite3BtreeMovetoUnpacked	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeMovetoUnpacked($/;"	f
sqlite3BtreeNext	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeNext(BtCursor *pCur, int *pRes){$/;"	f
sqlite3BtreeOpen	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeOpen($/;"	f
sqlite3BtreePager	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Pager *sqlite3BtreePager(Btree *p){$/;"	f
sqlite3BtreePrevious	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreePrevious(BtCursor *pCur, int *pRes){$/;"	f
sqlite3BtreePutData	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreePutData(BtCursor *pCsr, u32 offset, u32 amt, void *z){$/;"	f
sqlite3BtreeRollback	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeRollback(Btree *p){$/;"	f
sqlite3BtreeSavepoint	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeSavepoint(Btree *p, int op, int iSavepoint){$/;"	f
sqlite3BtreeSchema	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3BtreeSchema(Btree *p, int nBytes, void(*xFree)(void *)){$/;"	f
sqlite3BtreeSchemaLocked	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeSchemaLocked(Btree *p){$/;"	f
sqlite3BtreeSecureDelete	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeSecureDelete(Btree *p, int newFlag){$/;"	f
sqlite3BtreeSetAutoVacuum	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeSetAutoVacuum(Btree *p, int autoVacuum){$/;"	f
sqlite3BtreeSetCacheSize	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeSetCacheSize(Btree *p, int mxPage){$/;"	f
sqlite3BtreeSetCachedRowid	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeSetCachedRowid(BtCursor *pCur, sqlite3_int64 iRowid){$/;"	f
sqlite3BtreeSetPageSize	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeSetPageSize(Btree *p, int pageSize, int nReserve, int iFix){$/;"	f
sqlite3BtreeSetSafetyLevel	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeSetSafetyLevel($/;"	f
sqlite3BtreeSetVersion	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeSetVersion(Btree *pBtree, int iVersion){$/;"	f
sqlite3BtreeSharable	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeSharable(Btree *p){$/;"	f
sqlite3BtreeSharable	utilities/sqlite3/sqlite3.c	8144;"	d	file:
sqlite3BtreeSyncDisabled	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeSyncDisabled(Btree *p){$/;"	f
sqlite3BtreeTripAllCursors	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeTripAllCursors(Btree *pBtree, int errCode){$/;"	f
sqlite3BtreeUpdateMeta	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeUpdateMeta(Btree *p, int idx, u32 iMeta){$/;"	f
sqlite3CantopenError	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3CantopenError(int lineno){$/;"	f
sqlite3ChangeCookie	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ChangeCookie(Parse *pParse, int iDb){$/;"	f
sqlite3CheckCollSeq	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3CheckCollSeq(Parse *pParse, CollSeq *pColl){$/;"	f
sqlite3CheckObjectName	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3CheckObjectName(Parse *pParse, const char *zName){$/;"	f
sqlite3Checkpoint	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Checkpoint(sqlite3 *db, int iDb, int eMode, int *pnLog, int *pnCkpt){$/;"	f
sqlite3ClearStatTables	utilities/sqlite3/sqlite3.c	/^static void sqlite3ClearStatTables($/;"	f	file:
sqlite3CloseExtensions	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3CloseExtensions(sqlite3 *db){$/;"	f
sqlite3CloseExtensions	utilities/sqlite3/sqlite3.c	11690;"	d	file:
sqlite3CloseSavepoints	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3CloseSavepoints(sqlite3 *db){$/;"	f
sqlite3CodeRowTrigger	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3CodeRowTrigger($/;"	f
sqlite3CodeRowTrigger	utilities/sqlite3/sqlite3.c	11500;"	d	file:
sqlite3CodeRowTriggerDirect	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3CodeRowTriggerDirect($/;"	f
sqlite3CodeRowTriggerDirect	utilities/sqlite3/sqlite3.c	11501;"	d	file:
sqlite3CodeSubselect	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3CodeSubselect($/;"	f
sqlite3CodeVerifyNamedSchema	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3CodeVerifyNamedSchema(Parse *pParse, const char *zDb){$/;"	f
sqlite3CodeVerifySchema	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3CodeVerifySchema(Parse *pParse, int iDb){$/;"	f
sqlite3ColumnDefault	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ColumnDefault(Vdbe *v, Table *pTab, int i, int iReg){$/;"	f
sqlite3CommitInternalChanges	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3CommitInternalChanges(sqlite3 *db){$/;"	f
sqlite3CommitTransaction	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3CommitTransaction(Parse *pParse){$/;"	f
sqlite3CompareAffinity	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE char sqlite3CompareAffinity(Expr *pExpr, char aff2){$/;"	f
sqlite3CompleteInsertion	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3CompleteInsertion($/;"	f
sqlite3Config	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE SQLITE_WSD struct Sqlite3Config sqlite3Config = {$/;"	v	typeref:struct:Sqlite3Config
sqlite3Config	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE SQLITE_WSD struct Sqlite3Config sqlite3Config;$/;"	v	typeref:struct:Sqlite3Config
sqlite3ConnectionBlocked	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ConnectionBlocked(sqlite3 *db, sqlite3 *pBlocker){$/;"	f
sqlite3ConnectionBlocked	utilities/sqlite3/sqlite3.c	11828;"	d	file:
sqlite3ConnectionClosed	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ConnectionClosed(sqlite3 *db){$/;"	f
sqlite3ConnectionClosed	utilities/sqlite3/sqlite3.c	11830;"	d	file:
sqlite3ConnectionUnlocked	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ConnectionUnlocked(sqlite3 *db){$/;"	f
sqlite3ConnectionUnlocked	utilities/sqlite3/sqlite3.c	11829;"	d	file:
sqlite3CorruptError	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3CorruptError(int lineno){$/;"	f
sqlite3Coverage	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Coverage(int x){$/;"	f
sqlite3CreateColumnExpr	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Expr *sqlite3CreateColumnExpr(sqlite3 *db, SrcList *pSrc, int iSrc, int iCol){$/;"	f
sqlite3CreateForeignKey	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3CreateForeignKey($/;"	f
sqlite3CreateFunc	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3CreateFunc($/;"	f
sqlite3CreateIndex	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Index *sqlite3CreateIndex($/;"	f
sqlite3CreateView	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3CreateView($/;"	f
sqlite3CtypeMap	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const unsigned char sqlite3CtypeMap[256] = {$/;"	v
sqlite3CtypeMap	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const unsigned char sqlite3CtypeMap[];$/;"	v
sqlite3DbFree	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3DbFree(sqlite3 *db, void *p){$/;"	f
sqlite3DbMallocRaw	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3DbMallocRaw(sqlite3 *db, int n){$/;"	f
sqlite3DbMallocSize	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3DbMallocSize(sqlite3 *db, void *p){$/;"	f
sqlite3DbMallocZero	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3DbMallocZero(sqlite3 *db, int n){$/;"	f
sqlite3DbRealloc	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3DbRealloc(sqlite3 *db, void *p, int n){$/;"	f
sqlite3DbReallocOrFree	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3DbReallocOrFree(sqlite3 *db, void *p, int n){$/;"	f
sqlite3DbStrDup	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE char *sqlite3DbStrDup(sqlite3 *db, const char *z){$/;"	f
sqlite3DbStrNDup	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE char *sqlite3DbStrNDup(sqlite3 *db, const char *z, int n){$/;"	f
sqlite3DebugPrintf	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3DebugPrintf(const char *zFormat, ...){$/;"	f
sqlite3DefaultMutex	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE sqlite3_mutex_methods const *sqlite3DefaultMutex(void){$/;"	f
sqlite3DefaultRowEst	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3DefaultRowEst(Index *pIdx){$/;"	f
sqlite3DeferForeignKey	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3DeferForeignKey(Parse *pParse, int isDeferred){$/;"	f
sqlite3DeleteFrom	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3DeleteFrom($/;"	f
sqlite3DeleteIndexSamples	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3DeleteIndexSamples(sqlite3 *db, Index *pIdx){$/;"	f
sqlite3DeleteTable	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3DeleteTable(sqlite3 *db, Table *pTable){$/;"	f
sqlite3DeleteTrigger	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3DeleteTrigger(sqlite3 *db, Trigger *pTrigger){$/;"	f
sqlite3DeleteTrigger	utilities/sqlite3/sqlite3.c	11497;"	d	file:
sqlite3DeleteTriggerStep	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3DeleteTriggerStep(sqlite3 *db, TriggerStep *pTriggerStep){$/;"	f
sqlite3Dequote	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Dequote(char *z){$/;"	f
sqlite3Detach	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Detach(Parse *pParse, Expr *pDbname){$/;"	f
sqlite3DropIndex	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3DropIndex(Parse *pParse, SrcList *pName, int ifExists){$/;"	f
sqlite3DropTable	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3DropTable(Parse *pParse, SrcList *pName, int isView, int noErr){$/;"	f
sqlite3DropTrigger	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3DropTrigger(Parse *pParse, SrcList *pName, int noErr){$/;"	f
sqlite3DropTriggerPtr	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3DropTriggerPtr(Parse *pParse, Trigger *pTrigger){$/;"	f
sqlite3DropTriggerPtr	utilities/sqlite3/sqlite3.c	11498;"	d	file:
sqlite3EndBenignMalloc	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3EndBenignMalloc(void){$/;"	f
sqlite3EndBenignMalloc	utilities/sqlite3/sqlite3.c	11790;"	d	file:
sqlite3EndTable	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3EndTable($/;"	f
sqlite3ErrStr	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const char *sqlite3ErrStr(int rc){$/;"	f
sqlite3Error	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Error(sqlite3 *db, int err_code, const char *zFormat, ...){$/;"	f
sqlite3ErrorMsg	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ErrorMsg(Parse *pParse, const char *zFormat, ...){$/;"	f
sqlite3ExpirePreparedStatements	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExpirePreparedStatements(sqlite3 *db){$/;"	f
sqlite3Expr	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Expr *sqlite3Expr($/;"	f
sqlite3ExprAffinity	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE char sqlite3ExprAffinity(Expr *pExpr){$/;"	f
sqlite3ExprAlloc	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Expr *sqlite3ExprAlloc($/;"	f
sqlite3ExprAnalyzeAggList	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprAnalyzeAggList(NameContext *pNC, ExprList *pList){$/;"	f
sqlite3ExprAnalyzeAggregates	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprAnalyzeAggregates(NameContext *pNC, Expr *pExpr){$/;"	f
sqlite3ExprAnd	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Expr *sqlite3ExprAnd(sqlite3 *db, Expr *pLeft, Expr *pRight){$/;"	f
sqlite3ExprAssignVarNumber	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprAssignVarNumber(Parse *pParse, Expr *pExpr){$/;"	f
sqlite3ExprAttachSubtrees	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprAttachSubtrees($/;"	f
sqlite3ExprCacheAffinityChange	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCacheAffinityChange(Parse *pParse, int iStart, int iCount){$/;"	f
sqlite3ExprCacheClear	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCacheClear(Parse *pParse){$/;"	f
sqlite3ExprCachePinRegister	utilities/sqlite3/sqlite3.c	/^static void sqlite3ExprCachePinRegister(Parse *pParse, int iReg){$/;"	f	file:
sqlite3ExprCachePop	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCachePop(Parse *pParse, int N){$/;"	f
sqlite3ExprCachePush	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCachePush(Parse *pParse){$/;"	f
sqlite3ExprCacheRemove	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCacheRemove(Parse *pParse, int iReg, int nReg){$/;"	f
sqlite3ExprCacheStore	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCacheStore(Parse *pParse, int iTab, int iCol, int iReg){$/;"	f
sqlite3ExprCanBeNull	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprCanBeNull(const Expr *p){$/;"	f
sqlite3ExprCheckHeight	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprCheckHeight(Parse *pParse, int nHeight){$/;"	f
sqlite3ExprCheckHeight	utilities/sqlite3/sqlite3.c	11817;"	d	file:
sqlite3ExprCode	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprCode(Parse *pParse, Expr *pExpr, int target){$/;"	f
sqlite3ExprCodeAndCache	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprCodeAndCache(Parse *pParse, Expr *pExpr, int target){$/;"	f
sqlite3ExprCodeConstants	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCodeConstants(Parse *pParse, Expr *pExpr){$/;"	f
sqlite3ExprCodeCopy	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCodeCopy(Parse *pParse, int iFrom, int iTo, int nReg){$/;"	f
sqlite3ExprCodeExprList	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprCodeExprList($/;"	f
sqlite3ExprCodeGetColumn	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprCodeGetColumn($/;"	f
sqlite3ExprCodeGetColumnOfTable	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCodeGetColumnOfTable($/;"	f
sqlite3ExprCodeIN	utilities/sqlite3/sqlite3.c	/^static void sqlite3ExprCodeIN($/;"	f	file:
sqlite3ExprCodeIsNullJump	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCodeIsNullJump($/;"	f
sqlite3ExprCodeMove	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCodeMove(Parse *pParse, int iFrom, int iTo, int nReg){$/;"	f
sqlite3ExprCodeTarget	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprCodeTarget(Parse *pParse, Expr *pExpr, int target){$/;"	f
sqlite3ExprCodeTemp	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprCodeTemp(Parse *pParse, Expr *pExpr, int *pReg){$/;"	f
sqlite3ExprCollSeq	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE CollSeq *sqlite3ExprCollSeq(Parse *pParse, Expr *pExpr){$/;"	f
sqlite3ExprCompare	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprCompare(Expr *pA, Expr *pB){$/;"	f
sqlite3ExprDelete	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprDelete(sqlite3 *db, Expr *p){$/;"	f
sqlite3ExprDup	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Expr *sqlite3ExprDup(sqlite3 *db, Expr *p, int flags){$/;"	f
sqlite3ExprFunction	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Expr *sqlite3ExprFunction(Parse *pParse, ExprList *pList, Token *pToken){$/;"	f
sqlite3ExprIfFalse	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprIfFalse(Parse *pParse, Expr *pExpr, int dest, int jumpIfNull){$/;"	f
sqlite3ExprIfTrue	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprIfTrue(Parse *pParse, Expr *pExpr, int dest, int jumpIfNull){$/;"	f
sqlite3ExprIsConstant	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprIsConstant(Expr *p){$/;"	f
sqlite3ExprIsConstantNotJoin	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprIsConstantNotJoin(Expr *p){$/;"	f
sqlite3ExprIsConstantOrFunction	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprIsConstantOrFunction(Expr *p){$/;"	f
sqlite3ExprIsInteger	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprIsInteger(Expr *p, int *pValue){$/;"	f
sqlite3ExprListAppend	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE ExprList *sqlite3ExprListAppend($/;"	f
sqlite3ExprListCheckLength	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprListCheckLength($/;"	f
sqlite3ExprListCompare	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprListCompare(ExprList *pA, ExprList *pB){$/;"	f
sqlite3ExprListDelete	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprListDelete(sqlite3 *db, ExprList *pList){$/;"	f
sqlite3ExprListDup	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE ExprList *sqlite3ExprListDup(sqlite3 *db, ExprList *p, int flags){$/;"	f
sqlite3ExprListSetName	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprListSetName($/;"	f
sqlite3ExprListSetSpan	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprListSetSpan($/;"	f
sqlite3ExprNeedsNoAffinityChange	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprNeedsNoAffinityChange(const Expr *p, char aff){$/;"	f
sqlite3ExprSetColl	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Expr *sqlite3ExprSetColl(Expr *pExpr, CollSeq *pColl){$/;"	f
sqlite3ExprSetCollByToken	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Expr *sqlite3ExprSetCollByToken(Parse *pParse, Expr *pExpr, Token *pCollName){$/;"	f
sqlite3ExprSetHeight	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprSetHeight(Parse *pParse, Expr *p){$/;"	f
sqlite3ExprSetHeight	utilities/sqlite3/sqlite3.c	11815;"	d	file:
sqlite3FileSuffix3	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3FileSuffix3(const char *zBaseFilename, char *z){$/;"	f
sqlite3FileSuffix3	utilities/sqlite3/sqlite3.c	11600;"	d	file:
sqlite3FindCollSeq	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE CollSeq *sqlite3FindCollSeq($/;"	f
sqlite3FindDb	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3FindDb(sqlite3 *db, Token *pName){$/;"	f
sqlite3FindDbName	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3FindDbName(sqlite3 *db, const char *zName){$/;"	f
sqlite3FindFunction	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE FuncDef *sqlite3FindFunction($/;"	f
sqlite3FindInIndex	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3FindInIndex(Parse *pParse, Expr *pX, int *prNotFound){$/;"	f
sqlite3FindIndex	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Index *sqlite3FindIndex(sqlite3 *db, const char *zName, const char *zDb){$/;"	f
sqlite3FindTable	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Table *sqlite3FindTable(sqlite3 *db, const char *zName, const char *zDatabase){$/;"	f
sqlite3FinishCoding	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3FinishCoding(Parse *pParse){$/;"	f
sqlite3FinishTrigger	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3FinishTrigger($/;"	f
sqlite3FixExpr	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3FixExpr($/;"	f
sqlite3FixExprList	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3FixExprList($/;"	f
sqlite3FixInit	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3FixInit($/;"	f
sqlite3FixSelect	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3FixSelect($/;"	f
sqlite3FixSrcList	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3FixSrcList($/;"	f
sqlite3FixTriggerStep	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3FixTriggerStep($/;"	f
sqlite3FkActions	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3FkActions($/;"	f
sqlite3FkActions	utilities/sqlite3/sqlite3.c	11761;"	d	file:
sqlite3FkCheck	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3FkCheck($/;"	f
sqlite3FkCheck	utilities/sqlite3/sqlite3.c	11762;"	d	file:
sqlite3FkDelete	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3FkDelete(sqlite3 *db, Table *pTab){$/;"	f
sqlite3FkDelete	utilities/sqlite3/sqlite3.c	11770;"	d	file:
sqlite3FkDropTable	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3FkDropTable(Parse *pParse, SrcList *pName, Table *pTab){$/;"	f
sqlite3FkDropTable	utilities/sqlite3/sqlite3.c	11763;"	d	file:
sqlite3FkOldmask	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3FkOldmask($/;"	f
sqlite3FkOldmask	utilities/sqlite3/sqlite3.c	11764;"	d	file:
sqlite3FkReferences	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE FKey *sqlite3FkReferences(Table *pTab){$/;"	f
sqlite3FkRequired	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3FkRequired($/;"	f
sqlite3FkRequired	utilities/sqlite3/sqlite3.c	11765;"	d	file:
sqlite3Fts3AllSegdirs	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3AllSegdirs($/;"	f
sqlite3Fts3CacheDeferredDoclists	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3CacheDeferredDoclists(Fts3Cursor *pCsr){$/;"	f
sqlite3Fts3DeferToken	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3DeferToken($/;"	f
sqlite3Fts3DeferredTokenList	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3DeferredTokenList($/;"	f
sqlite3Fts3Dequote	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3Dequote(char *z){$/;"	f
sqlite3Fts3DoclistPrev	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3DoclistPrev($/;"	f
sqlite3Fts3EvalPhraseCleanup	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3EvalPhraseCleanup(Fts3Phrase *pPhrase){$/;"	f
sqlite3Fts3EvalPhrasePoslist	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE char *sqlite3Fts3EvalPhrasePoslist($/;"	f
sqlite3Fts3EvalPhraseStats	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3EvalPhraseStats($/;"	f
sqlite3Fts3ExprFree	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3ExprFree(Fts3Expr *p){$/;"	f
sqlite3Fts3ExprInitTestInterface	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3ExprInitTestInterface(sqlite3* db){$/;"	f
sqlite3Fts3ExprParse	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3ExprParse($/;"	f
sqlite3Fts3FreeDeferredDoclists	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3FreeDeferredDoclists(Fts3Cursor *pCsr){$/;"	f
sqlite3Fts3FreeDeferredTokens	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3FreeDeferredTokens(Fts3Cursor *pCsr){$/;"	f
sqlite3Fts3GetVarint	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3GetVarint(const char *p, sqlite_int64 *v){$/;"	f
sqlite3Fts3GetVarint32	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3GetVarint32(const char *p, int *pi){$/;"	f
sqlite3Fts3HashClear	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3HashClear(Fts3Hash *pH){$/;"	f
sqlite3Fts3HashFind	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3Fts3HashFind(const Fts3Hash *pH, const void *pKey, int nKey){$/;"	f
sqlite3Fts3HashFindElem	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Fts3HashElem *sqlite3Fts3HashFindElem($/;"	f
sqlite3Fts3HashInit	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3HashInit(Fts3Hash *pNew, char keyClass, char copyKey){$/;"	f
sqlite3Fts3HashInsert	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3Fts3HashInsert($/;"	f
sqlite3Fts3IcuTokenizerModule	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3IcuTokenizerModule($/;"	f
sqlite3Fts3Init	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3Init(sqlite3 *db){$/;"	f
sqlite3Fts3InitAux	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3InitAux(sqlite3 *db){$/;"	f
sqlite3Fts3InitHashTable	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3InitHashTable($/;"	f
sqlite3Fts3InitTokenizer	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3InitTokenizer($/;"	f
sqlite3Fts3IsIdChar	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3IsIdChar(char c){$/;"	f
sqlite3Fts3Matchinfo	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3Matchinfo($/;"	f
sqlite3Fts3MsrIncrNext	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3MsrIncrNext($/;"	f
sqlite3Fts3MsrIncrRestart	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3MsrIncrRestart(Fts3MultiSegReader *pCsr){$/;"	f
sqlite3Fts3MsrIncrStart	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3MsrIncrStart($/;"	f
sqlite3Fts3MsrOvfl	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3MsrOvfl($/;"	f
sqlite3Fts3NextToken	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const char *sqlite3Fts3NextToken(const char *zStr, int *pn){$/;"	f
sqlite3Fts3Offsets	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3Offsets($/;"	f
sqlite3Fts3Optimize	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3Optimize(Fts3Table *p){$/;"	f
sqlite3Fts3PendingTermsClear	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3PendingTermsClear(Fts3Table *p){$/;"	f
sqlite3Fts3PendingTermsFlush	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3PendingTermsFlush(Fts3Table *p){$/;"	f
sqlite3Fts3PorterTokenizerModule	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3PorterTokenizerModule($/;"	f
sqlite3Fts3PutVarint	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3PutVarint(char *p, sqlite_int64 v){$/;"	f
sqlite3Fts3ReadBlock	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3ReadBlock($/;"	f
sqlite3Fts3ReadLock	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3ReadLock(Fts3Table *p){$/;"	f
sqlite3Fts3SegReaderCursor	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3SegReaderCursor($/;"	f
sqlite3Fts3SegReaderFinish	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3SegReaderFinish($/;"	f
sqlite3Fts3SegReaderFree	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3SegReaderFree(Fts3SegReader *pReader){$/;"	f
sqlite3Fts3SegReaderNew	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3SegReaderNew($/;"	f
sqlite3Fts3SegReaderPending	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3SegReaderPending($/;"	f
sqlite3Fts3SegReaderStart	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3SegReaderStart($/;"	f
sqlite3Fts3SegReaderStep	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3SegReaderStep($/;"	f
sqlite3Fts3SegmentsClose	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3SegmentsClose(Fts3Table *p){$/;"	f
sqlite3Fts3SelectDocsize	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3SelectDocsize($/;"	f
sqlite3Fts3SelectDoctotal	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3SelectDoctotal($/;"	f
sqlite3Fts3SimpleTokenizerModule	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3SimpleTokenizerModule($/;"	f
sqlite3Fts3Snippet	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3Snippet($/;"	f
sqlite3Fts3UpdateMethod	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3UpdateMethod($/;"	f
sqlite3Fts3VarintLen	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3VarintLen(sqlite3_uint64 v){$/;"	f
sqlite3FuncDefInsert	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3FuncDefInsert($/;"	f
sqlite3GenerateConstraintChecks	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3GenerateConstraintChecks($/;"	f
sqlite3GenerateIndexKey	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3GenerateIndexKey($/;"	f
sqlite3GenerateRowDelete	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3GenerateRowDelete($/;"	f
sqlite3GenerateRowIndexDelete	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3GenerateRowIndexDelete($/;"	f
sqlite3Get4byte	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3Get4byte(const u8 *p){$/;"	f
sqlite3GetBoolean	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE u8 sqlite3GetBoolean(const char *z){$/;"	f
sqlite3GetCollSeq	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE CollSeq *sqlite3GetCollSeq($/;"	f
sqlite3GetFuncCollSeq	utilities/sqlite3/sqlite3.c	/^static CollSeq *sqlite3GetFuncCollSeq(sqlite3_context *context){$/;"	f	file:
sqlite3GetInt32	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3GetInt32(const char *zNum, int *pValue){$/;"	f
sqlite3GetTempRange	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3GetTempRange(Parse *pParse, int nReg){$/;"	f
sqlite3GetTempReg	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3GetTempReg(Parse *pParse){$/;"	f
sqlite3GetToken	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3GetToken(const unsigned char *z, int *tokenType){$/;"	f
sqlite3GetVTable	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE VTable *sqlite3GetVTable(sqlite3 *db, Table *pTab){$/;"	f
sqlite3GetVarint	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE u8 sqlite3GetVarint(const unsigned char *p, u64 *v){$/;"	f
sqlite3GetVarint32	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE u8 sqlite3GetVarint32(const unsigned char *p, u32 *v){$/;"	f
sqlite3GetVdbe	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Vdbe *sqlite3GetVdbe(Parse *pParse){$/;"	f
sqlite3GlobalConfig	utilities/sqlite3/sqlite3.c	7834;"	d	file:
sqlite3GlobalConfig	utilities/sqlite3/sqlite3.c	7840;"	d	file:
sqlite3GlobalFunctions	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE SQLITE_WSD FuncDefHash sqlite3GlobalFunctions;$/;"	v
sqlite3HaltConstraint	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3HaltConstraint(Parse *pParse, int onError, char *p4, int p4type){$/;"	f
sqlite3HashClear	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3HashClear(Hash *pH){$/;"	f
sqlite3HashFind	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3HashFind(const Hash *pH, const char *pKey, int nKey){$/;"	f
sqlite3HashInit	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3HashInit(Hash *pNew){$/;"	f
sqlite3HashInsert	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3HashInsert(Hash *pH, const char *pKey, int nKey, void *data){$/;"	f
sqlite3HeapNearlyFull	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3HeapNearlyFull(void){$/;"	f
sqlite3HexToBlob	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3HexToBlob(sqlite3 *db, const char *z, int n){$/;"	f
sqlite3HexToInt	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE u8 sqlite3HexToInt(int h){$/;"	f
sqlite3Hooks	utilities/sqlite3/sqlite3.c	/^} sqlite3Hooks = { 0, 0 };$/;"	v	typeref:struct:BenignMallocHooks	file:
sqlite3Hwtime	utilities/sqlite3/sqlite3.c	/^  __inline__ sqlite_uint64 sqlite3Hwtime(void){$/;"	f
sqlite3Hwtime	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE   sqlite_uint64 sqlite3Hwtime(void){ return ((sqlite_uint64)0); }$/;"	f
sqlite3IcuInit	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3IcuInit(sqlite3 *db){$/;"	f
sqlite3IdListAppend	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE IdList *sqlite3IdListAppend(sqlite3 *db, IdList *pList, Token *pToken){$/;"	f
sqlite3IdListDelete	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3IdListDelete(sqlite3 *db, IdList *pList){$/;"	f
sqlite3IdListDup	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE IdList *sqlite3IdListDup(sqlite3 *db, IdList *p){$/;"	f
sqlite3IdListIndex	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3IdListIndex(IdList *pList, const char *zName){$/;"	f
sqlite3IndexAffinityOk	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3IndexAffinityOk(Expr *pExpr, char idx_affinity){$/;"	f
sqlite3IndexAffinityStr	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const char *sqlite3IndexAffinityStr(Vdbe *v, Index *pIdx){$/;"	f
sqlite3IndexKeyinfo	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE KeyInfo *sqlite3IndexKeyinfo(Parse *pParse, Index *pIdx){$/;"	f
sqlite3IndexedByLookup	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3IndexedByLookup(Parse *pParse, struct SrcList_item *pFrom){$/;"	f
sqlite3Init	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Init(sqlite3 *db, char **pzErrMsg){$/;"	f
sqlite3InitCallback	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3InitCallback(void *pInit, int argc, char **argv, char **NotUsed){$/;"	f
sqlite3InitInfo	utilities/sqlite3/sqlite3.c	/^  struct sqlite3InitInfo {      \/* Information used during initialization *\/$/;"	s	struct:sqlite3	file:
sqlite3InitOne	utilities/sqlite3/sqlite3.c	/^static int sqlite3InitOne(sqlite3 *db, int iDb, char **pzErrMsg){$/;"	f	file:
sqlite3Insert	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Insert($/;"	f
sqlite3IntTokens	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const Token sqlite3IntTokens[] = {$/;"	v
sqlite3IntTokens	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const Token sqlite3IntTokens[];$/;"	v
sqlite3InvalidFunction	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3InvalidFunction($/;"	f
sqlite3InvokeBusyHandler	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3InvokeBusyHandler(BusyHandler *p){$/;"	f
sqlite3IoTrace	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void (*sqlite3IoTrace)(const char*, ...) = 0;$/;"	v
sqlite3IoTrace	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void (*sqlite3IoTrace)(const char*,...);$/;"	v
sqlite3IsEbcdicIdChar	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const char sqlite3IsEbcdicIdChar[] = {$/;"	v
sqlite3IsEbcdicIdChar	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const char sqlite3IsEbcdicIdChar[];$/;"	v
sqlite3IsLikeFunction	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3IsLikeFunction(sqlite3 *db, Expr *pExpr, int *pIsNocase, char *aWc){$/;"	f
sqlite3IsMemJournal	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3IsMemJournal(sqlite3_file *pJfd){$/;"	f
sqlite3IsNaN	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3IsNaN(double x){$/;"	f
sqlite3IsNaN	utilities/sqlite3/sqlite3.c	11274;"	d	file:
sqlite3IsNumericAffinity	utilities/sqlite3/sqlite3.c	9818;"	d	file:
sqlite3IsReadOnly	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3IsReadOnly(Parse *pParse, Table *pTab, int viewOk){$/;"	f
sqlite3IsRowid	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3IsRowid(const char *z){$/;"	f
sqlite3Isalnum	utilities/sqlite3/sqlite3.c	11189;"	d	file:
sqlite3Isalnum	utilities/sqlite3/sqlite3.c	11197;"	d	file:
sqlite3Isalpha	utilities/sqlite3/sqlite3.c	11190;"	d	file:
sqlite3Isalpha	utilities/sqlite3/sqlite3.c	11198;"	d	file:
sqlite3Isdigit	utilities/sqlite3/sqlite3.c	11191;"	d	file:
sqlite3Isdigit	utilities/sqlite3/sqlite3.c	11199;"	d	file:
sqlite3Isspace	utilities/sqlite3/sqlite3.c	11188;"	d	file:
sqlite3Isspace	utilities/sqlite3/sqlite3.c	11196;"	d	file:
sqlite3Isxdigit	utilities/sqlite3/sqlite3.c	11192;"	d	file:
sqlite3Isxdigit	utilities/sqlite3/sqlite3.c	11200;"	d	file:
sqlite3JoinType	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3JoinType(Parse *pParse, Token *pA, Token *pB, Token *pC){$/;"	f
sqlite3JournalCreate	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3JournalCreate(sqlite3_file *p){$/;"	f
sqlite3JournalModename	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const char *sqlite3JournalModename(int eMode){$/;"	f
sqlite3JournalOpen	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3JournalOpen($/;"	f
sqlite3JournalSize	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3JournalSize(sqlite3_vfs *pVfs){$/;"	f
sqlite3JournalSize	utilities/sqlite3/sqlite3.c	11803;"	d	file:
sqlite3KeywordCode	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3KeywordCode(const unsigned char *z, int n){$/;"	f
sqlite3LimitWhere	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Expr *sqlite3LimitWhere($/;"	f
sqlite3LoadExtension	utilities/sqlite3/sqlite3.c	/^static int sqlite3LoadExtension($/;"	f	file:
sqlite3LocateCollSeq	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE CollSeq *sqlite3LocateCollSeq(Parse *pParse, const char *zName){$/;"	f
sqlite3LocateTable	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Table *sqlite3LocateTable($/;"	f
sqlite3LockAndPrepare	utilities/sqlite3/sqlite3.c	/^static int sqlite3LockAndPrepare($/;"	f	file:
sqlite3MAppendf	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE char *sqlite3MAppendf(sqlite3 *db, char *zStr, const char *zFormat, ...){$/;"	f
sqlite3MPrintf	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE char *sqlite3MPrintf(sqlite3 *db, const char *zFormat, ...){$/;"	f
sqlite3Malloc	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3Malloc(int n){$/;"	f
sqlite3MallocAlarm	utilities/sqlite3/sqlite3.c	/^static void sqlite3MallocAlarm(int nByte){$/;"	f	file:
sqlite3MallocEnd	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3MallocEnd(void){$/;"	f
sqlite3MallocInit	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3MallocInit(void){$/;"	f
sqlite3MallocSize	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3MallocSize(void *p){$/;"	f
sqlite3MallocZero	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3MallocZero(int n){$/;"	f
sqlite3MaterializeView	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3MaterializeView($/;"	f
sqlite3MayAbort	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3MayAbort(Parse *pParse){$/;"	f
sqlite3MemCompare	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3MemCompare(const Mem *pMem1, const Mem *pMem2, const CollSeq *pColl){$/;"	f
sqlite3MemFree	utilities/sqlite3/sqlite3.c	/^static void sqlite3MemFree(void *pPrior){ return; }$/;"	f	file:
sqlite3MemFree	utilities/sqlite3/sqlite3.c	/^static void sqlite3MemFree(void *pPrior){$/;"	f	file:
sqlite3MemGetMemsys3	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const sqlite3_mem_methods *sqlite3MemGetMemsys3(void){$/;"	f
sqlite3MemGetMemsys5	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const sqlite3_mem_methods *sqlite3MemGetMemsys5(void){$/;"	f
sqlite3MemGetWin32	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const sqlite3_mem_methods *sqlite3MemGetWin32(void){$/;"	f
sqlite3MemInit	utilities/sqlite3/sqlite3.c	/^static int sqlite3MemInit(void *NotUsed){ return SQLITE_OK; }$/;"	f	file:
sqlite3MemInit	utilities/sqlite3/sqlite3.c	/^static int sqlite3MemInit(void *NotUsed){$/;"	f	file:
sqlite3MemJournalOpen	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3MemJournalOpen(sqlite3_file *pJfd){$/;"	f
sqlite3MemJournalSize	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3MemJournalSize(void){$/;"	f
sqlite3MemMalloc	utilities/sqlite3/sqlite3.c	/^static void *sqlite3MemMalloc(int nByte){ return 0; }$/;"	f	file:
sqlite3MemMalloc	utilities/sqlite3/sqlite3.c	/^static void *sqlite3MemMalloc(int nByte){$/;"	f	file:
sqlite3MemRealloc	utilities/sqlite3/sqlite3.c	/^static void *sqlite3MemRealloc(void *pPrior, int nByte){ return 0; }$/;"	f	file:
sqlite3MemRealloc	utilities/sqlite3/sqlite3.c	/^static void *sqlite3MemRealloc(void *pPrior, int nByte){$/;"	f	file:
sqlite3MemRoundup	utilities/sqlite3/sqlite3.c	/^static int sqlite3MemRoundup(int n){ return n; }$/;"	f	file:
sqlite3MemRoundup	utilities/sqlite3/sqlite3.c	/^static int sqlite3MemRoundup(int n){$/;"	f	file:
sqlite3MemSetDefault	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3MemSetDefault(void){$/;"	f
sqlite3MemShutdown	utilities/sqlite3/sqlite3.c	/^static void sqlite3MemShutdown(void *NotUsed){ return; }$/;"	f	file:
sqlite3MemShutdown	utilities/sqlite3/sqlite3.c	/^static void sqlite3MemShutdown(void *NotUsed){$/;"	f	file:
sqlite3MemSize	utilities/sqlite3/sqlite3.c	/^static int sqlite3MemSize(void *p){$/;"	f	file:
sqlite3MemSize	utilities/sqlite3/sqlite3.c	/^static int sqlite3MemSize(void *pPrior){ return 0; }$/;"	f	file:
sqlite3MemSize	utilities/sqlite3/sqlite3.c	/^static int sqlite3MemSize(void *pPrior){$/;"	f	file:
sqlite3MemdebugBacktrace	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3MemdebugBacktrace(int depth){$/;"	f
sqlite3MemdebugBacktraceCallback	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3MemdebugBacktraceCallback(void (*xBacktrace)(int, int, void **)){$/;"	f
sqlite3MemdebugDump	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3MemdebugDump(const char *zFilename){$/;"	f
sqlite3MemdebugHasType	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3MemdebugHasType(void *p, u8 eType){$/;"	f
sqlite3MemdebugHasType	utilities/sqlite3/sqlite3.c	11885;"	d	file:
sqlite3MemdebugMallocCount	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3MemdebugMallocCount(){$/;"	f
sqlite3MemdebugNoType	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3MemdebugNoType(void *p, u8 eType){$/;"	f
sqlite3MemdebugNoType	utilities/sqlite3/sqlite3.c	11886;"	d	file:
sqlite3MemdebugSetType	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3MemdebugSetType(void *p, u8 eType){$/;"	f
sqlite3MemdebugSetType	utilities/sqlite3/sqlite3.c	11884;"	d	file:
sqlite3MemdebugSettitle	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3MemdebugSettitle(const char *zTitle){$/;"	f
sqlite3MemdebugSync	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3MemdebugSync(){$/;"	f
sqlite3MemoryAlarm	utilities/sqlite3/sqlite3.c	/^static int sqlite3MemoryAlarm($/;"	f	file:
sqlite3Memsys3Dump	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Memsys3Dump(const char *zFilename){$/;"	f
sqlite3Memsys5Dump	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Memsys5Dump(const char *zFilename){$/;"	f
sqlite3MemsysGetHeader	utilities/sqlite3/sqlite3.c	/^static struct MemBlockHdr *sqlite3MemsysGetHeader(void *pAllocation){$/;"	f	file:
sqlite3MinimumFileFormat	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3MinimumFileFormat(Parse *pParse, int iDb, int minFormat){$/;"	f
sqlite3MisuseError	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3MisuseError(int lineno){$/;"	f
sqlite3MulInt64	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3MulInt64(i64 *pA, i64 iB){$/;"	f
sqlite3MultiWrite	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3MultiWrite(Parse *pParse){$/;"	f
sqlite3MutexAlloc	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE sqlite3_mutex *sqlite3MutexAlloc(int id){$/;"	f
sqlite3MutexAlloc	utilities/sqlite3/sqlite3.c	9288;"	d	file:
sqlite3MutexEnd	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3MutexEnd(void){$/;"	f
sqlite3MutexEnd	utilities/sqlite3/sqlite3.c	9290;"	d	file:
sqlite3MutexInit	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3MutexInit(void){ $/;"	f
sqlite3MutexInit	utilities/sqlite3/sqlite3.c	9289;"	d	file:
sqlite3NameFromToken	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE char *sqlite3NameFromToken(sqlite3 *db, Token *pName){$/;"	f
sqlite3NestedParse	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3NestedParse(Parse *pParse, const char *zFormat, ...){$/;"	f
sqlite3NoopMutex	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE sqlite3_mutex_methods const *sqlite3NoopMutex(void){$/;"	f
sqlite3OSTrace	utilities/sqlite3/sqlite3.c	/^  int sqlite3OSTrace = SQLITE_DEBUG_OS_TRACE;$/;"	v
sqlite3OpcodeName	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const char *sqlite3OpcodeName(int i){$/;"	f
sqlite3OpcodeProperty	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const unsigned char sqlite3OpcodeProperty[] = OPFLG_INITIALIZER;$/;"	v
sqlite3OpcodeProperty	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const unsigned char sqlite3OpcodeProperty[];$/;"	v
sqlite3OpenMasterTable	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3OpenMasterTable(Parse *p, int iDb){$/;"	f
sqlite3OpenTable	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3OpenTable($/;"	f
sqlite3OpenTableAndIndices	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OpenTableAndIndices($/;"	f
sqlite3OpenTempDatabase	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OpenTempDatabase(Parse *pParse){$/;"	f
sqlite3OsAccess	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsAccess($/;"	f
sqlite3OsCheckReservedLock	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsCheckReservedLock(sqlite3_file *id, int *pResOut){$/;"	f
sqlite3OsClose	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsClose(sqlite3_file *pId){$/;"	f
sqlite3OsCloseFree	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsCloseFree(sqlite3_file *pFile){$/;"	f
sqlite3OsCurrentTimeInt64	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsCurrentTimeInt64(sqlite3_vfs *pVfs, sqlite3_int64 *pTimeOut){$/;"	f
sqlite3OsDelete	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsDelete(sqlite3_vfs *pVfs, const char *zPath, int dirSync){$/;"	f
sqlite3OsDeviceCharacteristics	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsDeviceCharacteristics(sqlite3_file *id){$/;"	f
sqlite3OsDlClose	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3OsDlClose(sqlite3_vfs *pVfs, void *pHandle){$/;"	f
sqlite3OsDlError	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3OsDlError(sqlite3_vfs *pVfs, int nByte, char *zBufOut){$/;"	f
sqlite3OsDlOpen	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3OsDlOpen(sqlite3_vfs *pVfs, const char *zPath){$/;"	f
sqlite3OsDlSym	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void (*sqlite3OsDlSym(sqlite3_vfs *pVfs, void *pHdle, const char *zSym))(void){$/;"	f
sqlite3OsFileControl	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsFileControl(sqlite3_file *id, int op, void *pArg){$/;"	f
sqlite3OsFileSize	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsFileSize(sqlite3_file *id, i64 *pSize){$/;"	f
sqlite3OsFullPathname	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsFullPathname($/;"	f
sqlite3OsInit	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsInit(void){$/;"	f
sqlite3OsLock	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsLock(sqlite3_file *id, int lockType){$/;"	f
sqlite3OsOpen	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsOpen($/;"	f
sqlite3OsOpenMalloc	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsOpenMalloc($/;"	f
sqlite3OsRandomness	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsRandomness(sqlite3_vfs *pVfs, int nByte, char *zBufOut){$/;"	f
sqlite3OsRead	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsRead(sqlite3_file *id, void *pBuf, int amt, i64 offset){$/;"	f
sqlite3OsSectorSize	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsSectorSize(sqlite3_file *id){$/;"	f
sqlite3OsShmBarrier	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3OsShmBarrier(sqlite3_file *id){$/;"	f
sqlite3OsShmLock	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsShmLock(sqlite3_file *id, int offset, int n, int flags){$/;"	f
sqlite3OsShmMap	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsShmMap($/;"	f
sqlite3OsShmUnmap	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsShmUnmap(sqlite3_file *id, int deleteFlag){$/;"	f
sqlite3OsSleep	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsSleep(sqlite3_vfs *pVfs, int nMicro){$/;"	f
sqlite3OsSync	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsSync(sqlite3_file *id, int flags){$/;"	f
sqlite3OsTruncate	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsTruncate(sqlite3_file *id, i64 size){$/;"	f
sqlite3OsUnlock	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsUnlock(sqlite3_file *id, int lockType){$/;"	f
sqlite3OsWrite	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsWrite(sqlite3_file *id, const void *pBuf, int amt, i64 offset){$/;"	f
sqlite3PCacheBufferSetup	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PCacheBufferSetup(void *pBuf, int sz, int n){$/;"	f
sqlite3PCacheSetDefault	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PCacheSetDefault(void){$/;"	f
sqlite3PExpr	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Expr *sqlite3PExpr($/;"	f
sqlite3PageFree	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PageFree(void *p){$/;"	f
sqlite3PageMalloc	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3PageMalloc(int sz){$/;"	f
sqlite3PagerAcquire	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerAcquire($/;"	f
sqlite3PagerBackupPtr	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE sqlite3_backup **sqlite3PagerBackupPtr(Pager *pPager){$/;"	f
sqlite3PagerBegin	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerBegin(Pager *pPager, int exFlag, int subjInMemory){$/;"	f
sqlite3PagerCheckpoint	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerCheckpoint(Pager *pPager, int eMode, int *pnLog, int *pnCkpt){$/;"	f
sqlite3PagerClose	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerClose(Pager *pPager){$/;"	f
sqlite3PagerCloseWal	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerCloseWal(Pager *pPager){$/;"	f
sqlite3PagerCodec	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3PagerCodec(PgHdr *pPg){$/;"	f
sqlite3PagerCommitPhaseOne	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerCommitPhaseOne($/;"	f
sqlite3PagerCommitPhaseTwo	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerCommitPhaseTwo(Pager *pPager){$/;"	f
sqlite3PagerDontWrite	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerDontWrite(PgHdr *pPg){$/;"	f
sqlite3PagerExclusiveLock	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerExclusiveLock(Pager *pPager){$/;"	f
sqlite3PagerFile	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE sqlite3_file *sqlite3PagerFile(Pager *pPager){$/;"	f
sqlite3PagerFilename	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const char *sqlite3PagerFilename(Pager *pPager){$/;"	f
sqlite3PagerGet	utilities/sqlite3/sqlite3.c	8705;"	d	file:
sqlite3PagerGetCodec	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3PagerGetCodec(Pager *pPager){$/;"	f
sqlite3PagerGetData	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3PagerGetData(DbPage *pPg){$/;"	f
sqlite3PagerGetExtra	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3PagerGetExtra(DbPage *pPg){$/;"	f
sqlite3PagerGetJournalMode	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerGetJournalMode(Pager *pPager){$/;"	f
sqlite3PagerIsMemdb	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerIsMemdb(Pager *pPager){$/;"	f
sqlite3PagerIsreadonly	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE u8 sqlite3PagerIsreadonly(Pager *pPager){$/;"	f
sqlite3PagerIswriteable	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerIswriteable(DbPage *pPg){$/;"	f
sqlite3PagerJournalSizeLimit	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE i64 sqlite3PagerJournalSizeLimit(Pager *pPager, i64 iLimit){$/;"	f
sqlite3PagerJournalname	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const char *sqlite3PagerJournalname(Pager *pPager){$/;"	f
sqlite3PagerLockingMode	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerLockingMode(Pager *pPager, int eMode){$/;"	f
sqlite3PagerLookup	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE DbPage *sqlite3PagerLookup(Pager *pPager, Pgno pgno){$/;"	f
sqlite3PagerMaxPageCount	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerMaxPageCount(Pager *pPager, int mxPage){$/;"	f
sqlite3PagerMemUsed	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerMemUsed(Pager *pPager){$/;"	f
sqlite3PagerMovepage	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerMovepage(Pager *pPager, DbPage *pPg, Pgno pgno, int isCommit){$/;"	f
sqlite3PagerNosync	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerNosync(Pager *pPager){$/;"	f
sqlite3PagerOkToChangeJournalMode	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerOkToChangeJournalMode(Pager *pPager){$/;"	f
sqlite3PagerOpen	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerOpen($/;"	f
sqlite3PagerOpenSavepoint	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerOpenSavepoint(Pager *pPager, int nSavepoint){$/;"	f
sqlite3PagerOpenWal	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerOpenWal($/;"	f
sqlite3PagerPageRefcount	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerPageRefcount(DbPage *pPage){$/;"	f
sqlite3PagerPagecount	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerPagecount(Pager *pPager, int *pnPage){$/;"	f
sqlite3PagerPagenumber	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Pgno sqlite3PagerPagenumber(DbPage *pPg){$/;"	f
sqlite3PagerReadFileheader	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerReadFileheader(Pager *pPager, int N, unsigned char *pDest){$/;"	f
sqlite3PagerRef	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerRef(DbPage *pPg){$/;"	f
sqlite3PagerRefcount	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerRefcount(Pager *pPager){$/;"	f
sqlite3PagerRollback	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerRollback(Pager *pPager){$/;"	f
sqlite3PagerSavepoint	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerSavepoint(Pager *pPager, int op, int iSavepoint){$/;"	f
sqlite3PagerSetBusyhandler	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerSetBusyhandler($/;"	f
sqlite3PagerSetCachesize	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerSetCachesize(Pager *pPager, int mxPage){$/;"	f
sqlite3PagerSetCodec	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerSetCodec($/;"	f
sqlite3PagerSetJournalMode	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerSetJournalMode(Pager *pPager, int eMode){$/;"	f
sqlite3PagerSetPagesize	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerSetPagesize(Pager *pPager, u32 *pPageSize, int nReserve){$/;"	f
sqlite3PagerSetSafetyLevel	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerSetSafetyLevel($/;"	f
sqlite3PagerSharedLock	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerSharedLock(Pager *pPager){$/;"	f
sqlite3PagerStats	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int *sqlite3PagerStats(Pager *pPager){$/;"	f
sqlite3PagerSync	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerSync(Pager *pPager){$/;"	f
sqlite3PagerTempSpace	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3PagerTempSpace(Pager *pPager){$/;"	f
sqlite3PagerTruncateImage	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerTruncateImage(Pager *pPager, Pgno nPage){$/;"	f
sqlite3PagerUnref	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerUnref(DbPage *pPg){$/;"	f
sqlite3PagerVfs	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const sqlite3_vfs *sqlite3PagerVfs(Pager *pPager){$/;"	f
sqlite3PagerWalCallback	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerWalCallback(Pager *pPager){$/;"	f
sqlite3PagerWalSupported	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerWalSupported(Pager *pPager){$/;"	f
sqlite3PagerWrite	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerWrite(DbPage *pDbPage){$/;"	f
sqlite3ParseToplevel	utilities/sqlite3/sqlite3.c	11494;"	d	file:
sqlite3ParseToplevel	utilities/sqlite3/sqlite3.c	11503;"	d	file:
sqlite3ParseUri	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ParseUri($/;"	f
sqlite3Parser	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Parser($/;"	f
sqlite3ParserARG_FETCH	utilities/sqlite3/sqlite3.c	105744;"	d	file:
sqlite3ParserARG_PDECL	utilities/sqlite3/sqlite3.c	105743;"	d	file:
sqlite3ParserARG_SDECL	utilities/sqlite3/sqlite3.c	105742;"	d	file:
sqlite3ParserARG_STORE	utilities/sqlite3/sqlite3.c	105745;"	d	file:
sqlite3ParserAlloc	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3ParserAlloc(void *(*mallocProc)(size_t)){$/;"	f
sqlite3ParserFree	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ParserFree($/;"	f
sqlite3ParserStackPeak	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ParserStackPeak(void *p){$/;"	f
sqlite3ParserTOKENTYPE	utilities/sqlite3/sqlite3.c	105721;"	d	file:
sqlite3ParserTrace	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ParserTrace(FILE *TraceFILE, char *zTracePrompt){$/;"	f
sqlite3PcacheCleanAll	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheCleanAll(PCache *pCache){$/;"	f
sqlite3PcacheClear	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheClear(PCache *pCache){$/;"	f
sqlite3PcacheClearSyncFlags	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheClearSyncFlags(PCache *pCache){$/;"	f
sqlite3PcacheClose	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheClose(PCache *pCache){$/;"	f
sqlite3PcacheDirtyList	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE PgHdr *sqlite3PcacheDirtyList(PCache *pCache){$/;"	f
sqlite3PcacheDrop	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheDrop(PgHdr *p){$/;"	f
sqlite3PcacheFetch	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PcacheFetch($/;"	f
sqlite3PcacheGetCachesize	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PcacheGetCachesize(PCache *pCache){$/;"	f
sqlite3PcacheInitialize	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PcacheInitialize(void){$/;"	f
sqlite3PcacheIterateDirty	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheIterateDirty(PCache *pCache, void (*xIter)(PgHdr *)){$/;"	f
sqlite3PcacheMakeClean	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheMakeClean(PgHdr *p){$/;"	f
sqlite3PcacheMakeDirty	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheMakeDirty(PgHdr *p){$/;"	f
sqlite3PcacheMove	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheMove(PgHdr *p, Pgno newPgno){$/;"	f
sqlite3PcacheOpen	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheOpen($/;"	f
sqlite3PcachePageRefcount	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PcachePageRefcount(PgHdr *p){$/;"	f
sqlite3PcachePagecount	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PcachePagecount(PCache *pCache){$/;"	f
sqlite3PcacheRef	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheRef(PgHdr *p){$/;"	f
sqlite3PcacheRefCount	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PcacheRefCount(PCache *pCache){$/;"	f
sqlite3PcacheRelease	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheRelease(PgHdr *p){$/;"	f
sqlite3PcacheReleaseMemory	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PcacheReleaseMemory(int nReq){$/;"	f
sqlite3PcacheSetCachesize	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheSetCachesize(PCache *pCache, int mxPage){$/;"	f
sqlite3PcacheSetPageSize	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheSetPageSize(PCache *pCache, int szPage){$/;"	f
sqlite3PcacheShutdown	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheShutdown(void){$/;"	f
sqlite3PcacheSize	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PcacheSize(void){ return sizeof(PCache); }$/;"	f
sqlite3PcacheStats	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheStats($/;"	f
sqlite3PcacheTruncate	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheTruncate(PCache *pCache, Pgno pgno){$/;"	f
sqlite3PendingByte	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PendingByte = 0x40000000;$/;"	v
sqlite3PendingByte	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PendingByte;$/;"	v
sqlite3Pragma	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Pragma($/;"	f
sqlite3Prepare	utilities/sqlite3/sqlite3.c	/^static int sqlite3Prepare($/;"	f	file:
sqlite3Prepare16	utilities/sqlite3/sqlite3.c	/^static int sqlite3Prepare16($/;"	f	file:
sqlite3PrintExpr	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PrintExpr(Expr *p){$/;"	f
sqlite3PrintExprList	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PrintExprList(ExprList *pList){$/;"	f
sqlite3PrintSelect	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PrintSelect(Select *p, int indent){$/;"	f
sqlite3Prng	utilities/sqlite3/sqlite3.c	/^} sqlite3Prng;$/;"	v	typeref:struct:sqlite3PrngType	file:
sqlite3PrngResetState	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PrngResetState(void){$/;"	f
sqlite3PrngRestoreState	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PrngRestoreState(void){$/;"	f
sqlite3PrngSaveState	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PrngSaveState(void){$/;"	f
sqlite3PrngType	utilities/sqlite3/sqlite3.c	/^static SQLITE_WSD struct sqlite3PrngType {$/;"	s	file:
sqlite3Put4byte	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Put4byte(unsigned char *p, u32 v){$/;"	f
sqlite3PutVarint	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PutVarint(unsigned char *p, u64 v){$/;"	f
sqlite3PutVarint32	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PutVarint32(unsigned char *p, u32 v){$/;"	f
sqlite3ReadSchema	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ReadSchema(Parse *pParse){$/;"	f
sqlite3Realloc	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3Realloc(void *pOld, int nBytes){$/;"	f
sqlite3RefillIndex	utilities/sqlite3/sqlite3.c	/^static void sqlite3RefillIndex(Parse *pParse, Index *pIndex, int memRootPage){$/;"	f	file:
sqlite3RegisterBuiltinFunctions	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3RegisterBuiltinFunctions(sqlite3 *db){$/;"	f
sqlite3RegisterDateTimeFunctions	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3RegisterDateTimeFunctions(void){$/;"	f
sqlite3RegisterGlobalFunctions	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3RegisterGlobalFunctions(void){$/;"	f
sqlite3RegisterLikeFunctions	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3RegisterLikeFunctions(sqlite3 *db, int caseSensitive){$/;"	f
sqlite3Reindex	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Reindex(Parse *pParse, Token *pName1, Token *pName2){$/;"	f
sqlite3ReleaseTempRange	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ReleaseTempRange(Parse *pParse, int iReg, int nReg){$/;"	f
sqlite3ReleaseTempReg	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ReleaseTempReg(Parse *pParse, int iReg){$/;"	f
sqlite3Reprepare	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Reprepare(Vdbe *p){$/;"	f
sqlite3ResetInternalSchema	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ResetInternalSchema(sqlite3 *db, int iDb){$/;"	f
sqlite3ResolveExprNames	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ResolveExprNames( $/;"	f
sqlite3ResolveOrderGroupBy	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ResolveOrderGroupBy($/;"	f
sqlite3ResolveSelectNames	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ResolveSelectNames($/;"	f
sqlite3ResultSetOfSelect	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Table *sqlite3ResultSetOfSelect(Parse *pParse, Select *pSelect){$/;"	f
sqlite3RollbackAll	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3RollbackAll(sqlite3 *db){$/;"	f
sqlite3RollbackTransaction	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3RollbackTransaction(Parse *pParse){$/;"	f
sqlite3RootPageMoved	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3RootPageMoved(sqlite3 *db, int iDb, int iFrom, int iTo){$/;"	f
sqlite3RowSetClear	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3RowSetClear(RowSet *p){$/;"	f
sqlite3RowSetInit	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE RowSet *sqlite3RowSetInit(sqlite3 *db, void *pSpace, unsigned int N){$/;"	f
sqlite3RowSetInsert	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3RowSetInsert(RowSet *p, i64 rowid){$/;"	f
sqlite3RowSetNext	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3RowSetNext(RowSet *p, i64 *pRowid){$/;"	f
sqlite3RowSetTest	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3RowSetTest(RowSet *pRowSet, u8 iBatch, sqlite3_int64 iRowid){$/;"	f
sqlite3RtreeInit	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3RtreeInit(sqlite3 *db){$/;"	f
sqlite3RunParser	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3RunParser(Parse *pParse, const char *zSql, char **pzErrMsg){$/;"	f
sqlite3RunVacuum	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3RunVacuum(char **pzErrMsg, sqlite3 *db){$/;"	f
sqlite3SafetyCheckOk	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3SafetyCheckOk(sqlite3 *db){$/;"	f
sqlite3SafetyCheckSickOrOk	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3SafetyCheckSickOrOk(sqlite3 *db){$/;"	f
sqlite3SavedPrng	utilities/sqlite3/sqlite3.c	/^static SQLITE_WSD struct sqlite3PrngType sqlite3SavedPrng;$/;"	v	typeref:struct:sqlite3PrngType	file:
sqlite3Savepoint	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Savepoint(Parse *pParse, int op, Token *pName){$/;"	f
sqlite3SchemaClear	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3SchemaClear(void *p){$/;"	f
sqlite3SchemaGet	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Schema *sqlite3SchemaGet(sqlite3 *db, Btree *pBt){$/;"	f
sqlite3SchemaMutexHeld	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3SchemaMutexHeld(sqlite3 *db, int iDb, Schema *pSchema){$/;"	f
sqlite3SchemaMutexHeld	utilities/sqlite3/sqlite3.c	8152;"	d	file:
sqlite3SchemaToIndex	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3SchemaToIndex(sqlite3 *db, Schema *pSchema){$/;"	f
sqlite3ScratchFree	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ScratchFree(void *p){$/;"	f
sqlite3ScratchMalloc	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3ScratchMalloc(int n){$/;"	f
sqlite3Select	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Select($/;"	f
sqlite3SelectAddTypeInfo	utilities/sqlite3/sqlite3.c	/^static void sqlite3SelectAddTypeInfo(Parse *pParse, Select *pSelect){$/;"	f	file:
sqlite3SelectDelete	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3SelectDelete(sqlite3 *db, Select *p){$/;"	f
sqlite3SelectDestInit	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3SelectDestInit(SelectDest *pDest, int eDest, int iParm){$/;"	f
sqlite3SelectDup	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Select *sqlite3SelectDup(sqlite3 *db, Select *p, int flags){$/;"	f
sqlite3SelectExpand	utilities/sqlite3/sqlite3.c	/^static void sqlite3SelectExpand(Parse *pParse, Select *pSelect){$/;"	f	file:
sqlite3SelectExprHeight	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3SelectExprHeight(Select *p){$/;"	f
sqlite3SelectExprHeight	utilities/sqlite3/sqlite3.c	11816;"	d	file:
sqlite3SelectNew	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Select *sqlite3SelectNew($/;"	f
sqlite3SelectPrep	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3SelectPrep($/;"	f
sqlite3SetString	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3SetString(char **pz, sqlite3 *db, const char *zFormat, ...){$/;"	f
sqlite3SharedCacheList	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE BtShared *SQLITE_WSD sqlite3SharedCacheList = 0;$/;"	v
sqlite3SharedCacheList	utilities/sqlite3/sqlite3.c	/^static BtShared *SQLITE_WSD sqlite3SharedCacheList = 0;$/;"	v	file:
sqlite3SrcListAppend	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE SrcList *sqlite3SrcListAppend($/;"	f
sqlite3SrcListAppendFromTerm	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE SrcList *sqlite3SrcListAppendFromTerm($/;"	f
sqlite3SrcListAssignCursors	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3SrcListAssignCursors(Parse *pParse, SrcList *pList){$/;"	f
sqlite3SrcListDelete	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3SrcListDelete(sqlite3 *db, SrcList *pList){$/;"	f
sqlite3SrcListDup	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE SrcList *sqlite3SrcListDup(sqlite3 *db, SrcList *p, int flags){$/;"	f
sqlite3SrcListEnlarge	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE SrcList *sqlite3SrcListEnlarge($/;"	f
sqlite3SrcListIndexedBy	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3SrcListIndexedBy(Parse *pParse, SrcList *p, Token *pIndexedBy){$/;"	f
sqlite3SrcListLookup	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Table *sqlite3SrcListLookup(Parse *pParse, SrcList *pSrc){$/;"	f
sqlite3SrcListShiftJoinType	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3SrcListShiftJoinType(SrcList *p){$/;"	f
sqlite3StackAllocRaw	utilities/sqlite3/sqlite3.c	11242;"	d	file:
sqlite3StackAllocRaw	utilities/sqlite3/sqlite3.c	11246;"	d	file:
sqlite3StackAllocZero	utilities/sqlite3/sqlite3.c	11243;"	d	file:
sqlite3StackAllocZero	utilities/sqlite3/sqlite3.c	11247;"	d	file:
sqlite3StackFree	utilities/sqlite3/sqlite3.c	11244;"	d	file:
sqlite3StackFree	utilities/sqlite3/sqlite3.c	11248;"	d	file:
sqlite3StartTable	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3StartTable($/;"	f
sqlite3Stat	utilities/sqlite3/sqlite3.c	/^} sqlite3Stat = { {0,}, {0,} };$/;"	v	typeref:struct:sqlite3StatType	file:
sqlite3StatType	utilities/sqlite3/sqlite3.c	/^static SQLITE_WSD struct sqlite3StatType {$/;"	s	file:
sqlite3StatType	utilities/sqlite3/sqlite3.c	/^typedef struct sqlite3StatType sqlite3StatType;$/;"	t	typeref:struct:sqlite3StatType	file:
sqlite3StatusAdd	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3StatusAdd(int op, int N){$/;"	f
sqlite3StatusSet	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3StatusSet(int op, int X){$/;"	f
sqlite3StatusValue	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3StatusValue(int op){$/;"	f
sqlite3Step	utilities/sqlite3/sqlite3.c	/^static int sqlite3Step(Vdbe *p){$/;"	f	file:
sqlite3StrAccumAppend	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3StrAccumAppend(StrAccum *p, const char *z, int N){$/;"	f
sqlite3StrAccumFinish	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE char *sqlite3StrAccumFinish(StrAccum *p){$/;"	f
sqlite3StrAccumInit	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3StrAccumInit(StrAccum *p, char *zBase, int n, int mx){$/;"	f
sqlite3StrAccumReset	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3StrAccumReset(StrAccum *p){$/;"	f
sqlite3StrICmp	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3StrICmp(const char *zLeft, const char *zRight){$/;"	f
sqlite3StrNICmp	utilities/sqlite3/sqlite3.c	11209;"	d	file:
sqlite3Strlen30	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Strlen30(const char *z){$/;"	f
sqlite3SubInt64	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3SubInt64(i64 *pA, i64 iB){$/;"	f
sqlite3TableAffinityStr	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3TableAffinityStr(Vdbe *v, Table *pTab){$/;"	f
sqlite3TableLock	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3TableLock($/;"	f
sqlite3TableLock	utilities/sqlite3/sqlite3.c	11696;"	d	file:
sqlite3TempInMemory	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3TempInMemory(const sqlite3 *db){$/;"	f
sqlite3Tolower	utilities/sqlite3/sqlite3.c	11193;"	d	file:
sqlite3Tolower	utilities/sqlite3/sqlite3.c	11201;"	d	file:
sqlite3Toupper	utilities/sqlite3/sqlite3.c	11187;"	d	file:
sqlite3Toupper	utilities/sqlite3/sqlite3.c	11195;"	d	file:
sqlite3TransferBindings	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3TransferBindings(sqlite3_stmt *pFromStmt, sqlite3_stmt *pToStmt){$/;"	f
sqlite3TriggerColmask	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3TriggerColmask($/;"	f
sqlite3TriggerColmask	utilities/sqlite3/sqlite3.c	11504;"	d	file:
sqlite3TriggerDeleteStep	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE TriggerStep *sqlite3TriggerDeleteStep($/;"	f
sqlite3TriggerInsertStep	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE TriggerStep *sqlite3TriggerInsertStep($/;"	f
sqlite3TriggerList	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Trigger *sqlite3TriggerList(Parse *pParse, Table *pTab){$/;"	f
sqlite3TriggerList	utilities/sqlite3/sqlite3.c	11502;"	d	file:
sqlite3TriggerSelectStep	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE TriggerStep *sqlite3TriggerSelectStep(sqlite3 *db, Select *pSelect){$/;"	f
sqlite3TriggerUpdateStep	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE TriggerStep *sqlite3TriggerUpdateStep($/;"	f
sqlite3TriggersExist	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Trigger *sqlite3TriggersExist($/;"	f
sqlite3TriggersExist	utilities/sqlite3/sqlite3.c	11496;"	d	file:
sqlite3TwoPartName	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3TwoPartName($/;"	f
sqlite3UnlinkAndDeleteIndex	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3UnlinkAndDeleteIndex(sqlite3 *db, int iDb, const char *zIdxName){$/;"	f
sqlite3UnlinkAndDeleteTable	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3UnlinkAndDeleteTable(sqlite3 *db, int iDb, const char *zTabName){$/;"	f
sqlite3UnlinkAndDeleteTrigger	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3UnlinkAndDeleteTrigger(sqlite3 *db, int iDb, const char *zName){$/;"	f
sqlite3UnlinkAndDeleteTrigger	utilities/sqlite3/sqlite3.c	11499;"	d	file:
sqlite3Update	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Update($/;"	f
sqlite3UpperToLower	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const unsigned char sqlite3UpperToLower[] = {$/;"	v
sqlite3UpperToLower	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const unsigned char sqlite3UpperToLower[];$/;"	v
sqlite3Utf16ByteLen	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Utf16ByteLen(const void *zIn, int nChar){$/;"	f
sqlite3Utf16to8	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE char *sqlite3Utf16to8(sqlite3 *db, const void *z, int nByte, u8 enc){$/;"	f
sqlite3Utf8CharLen	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Utf8CharLen(const char *zIn, int nByte){$/;"	f
sqlite3Utf8Read	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3Utf8Read($/;"	f
sqlite3Utf8Read	utilities/sqlite3/sqlite3.c	84556;"	d	file:
sqlite3Utf8To8	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Utf8To8(unsigned char *zIn){$/;"	f
sqlite3Utf8Trans1	utilities/sqlite3/sqlite3.c	/^static const unsigned char sqlite3Utf8Trans1[] = {$/;"	v	file:
sqlite3Utf8to16	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE char *sqlite3Utf8to16(sqlite3 *db, u8 enc, char *z, int n, int *pnOut){$/;"	f
sqlite3UtfSelfTest	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3UtfSelfTest(void){$/;"	f
sqlite3VMPrintf	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE char *sqlite3VMPrintf(sqlite3 *db, const char *zFormat, va_list ap){$/;"	f
sqlite3VXPrintf	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VXPrintf($/;"	f
sqlite3Vacuum	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Vacuum(Parse *pParse){$/;"	f
sqlite3ValueApplyAffinity	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ValueApplyAffinity($/;"	f
sqlite3ValueBytes	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ValueBytes(sqlite3_value *pVal, u8 enc){$/;"	f
sqlite3ValueFree	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ValueFree(sqlite3_value *v){$/;"	f
sqlite3ValueFromExpr	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ValueFromExpr($/;"	f
sqlite3ValueNew	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE sqlite3_value *sqlite3ValueNew(sqlite3 *db){$/;"	f
sqlite3ValueSetStr	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ValueSetStr($/;"	f
sqlite3ValueText	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const void *sqlite3ValueText(sqlite3_value* pVal, u8 enc){$/;"	f
sqlite3VarintLen	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VarintLen(u64 v){$/;"	f
sqlite3VdbeAddOp0	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeAddOp0(Vdbe *p, int op){$/;"	f
sqlite3VdbeAddOp1	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeAddOp1(Vdbe *p, int op, int p1){$/;"	f
sqlite3VdbeAddOp2	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeAddOp2(Vdbe *p, int op, int p1, int p2){$/;"	f
sqlite3VdbeAddOp3	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeAddOp3(Vdbe *p, int op, int p1, int p2, int p3){$/;"	f
sqlite3VdbeAddOp4	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeAddOp4($/;"	f
sqlite3VdbeAddOp4Int	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeAddOp4Int($/;"	f
sqlite3VdbeAddOpList	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeAddOpList(Vdbe *p, int nOp, VdbeOpList const *aOp){$/;"	f
sqlite3VdbeAddParseSchemaOp	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeAddParseSchemaOp(Vdbe *p, int iDb, char *zWhere){$/;"	f
sqlite3VdbeAddopTrace	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeAddopTrace = 0;$/;"	v
sqlite3VdbeAllocUnpackedRecord	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE UnpackedRecord *sqlite3VdbeAllocUnpackedRecord($/;"	f
sqlite3VdbeAssertMayAbort	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeAssertMayAbort(Vdbe *v, int mayAbort){$/;"	f
sqlite3VdbeChangeEncoding	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeChangeEncoding(Mem *pMem, int desiredEnc){$/;"	f
sqlite3VdbeChangeP1	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeChangeP1(Vdbe *p, u32 addr, int val){$/;"	f
sqlite3VdbeChangeP2	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeChangeP2(Vdbe *p, u32 addr, int val){$/;"	f
sqlite3VdbeChangeP3	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeChangeP3(Vdbe *p, u32 addr, int val){$/;"	f
sqlite3VdbeChangeP4	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeChangeP4(Vdbe *p, int addr, const char *zP4, int n){$/;"	f
sqlite3VdbeChangeP5	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeChangeP5(Vdbe *p, u8 val){$/;"	f
sqlite3VdbeChangeToNoop	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeChangeToNoop(Vdbe *p, int addr){$/;"	f
sqlite3VdbeCheckFk	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeCheckFk(Vdbe *p, int deferred){$/;"	f
sqlite3VdbeCheckFk	utilities/sqlite3/sqlite3.c	12972;"	d	file:
sqlite3VdbeCloseStatement	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeCloseStatement(Vdbe *p, int eOp){$/;"	f
sqlite3VdbeComment	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeComment(Vdbe *p, const char *zFormat, ...){$/;"	f
sqlite3VdbeCountChanges	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeCountChanges(Vdbe *v){$/;"	f
sqlite3VdbeCreate	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Vdbe *sqlite3VdbeCreate(sqlite3 *db){$/;"	f
sqlite3VdbeCurrentAddr	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeCurrentAddr(Vdbe *p){$/;"	f
sqlite3VdbeCursorMoveto	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeCursorMoveto(VdbeCursor *p){$/;"	f
sqlite3VdbeDb	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE sqlite3 *sqlite3VdbeDb(Vdbe *v){$/;"	f
sqlite3VdbeDelete	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeDelete(Vdbe *p){$/;"	f
sqlite3VdbeDeleteAuxData	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeDeleteAuxData(VdbeFunc *pVdbeFunc, int mask){$/;"	f
sqlite3VdbeDeleteObject	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeDeleteObject(sqlite3 *db, Vdbe *p){$/;"	f
sqlite3VdbeEnter	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeEnter(Vdbe *p){$/;"	f
sqlite3VdbeEnter	utilities/sqlite3/sqlite3.c	12961;"	d	file:
sqlite3VdbeExec	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeExec($/;"	f
sqlite3VdbeExpandSql	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE char *sqlite3VdbeExpandSql($/;"	f
sqlite3VdbeFinalize	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeFinalize(Vdbe *p){$/;"	f
sqlite3VdbeFrameDelete	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeFrameDelete(VdbeFrame *p){$/;"	f
sqlite3VdbeFrameRestore	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeFrameRestore(VdbeFrame *pFrame){$/;"	f
sqlite3VdbeFreeCursor	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeFreeCursor(Vdbe *p, VdbeCursor *pCx){$/;"	f
sqlite3VdbeGetOp	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE VdbeOp *sqlite3VdbeGetOp(Vdbe *p, int addr){$/;"	f
sqlite3VdbeGetValue	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE sqlite3_value *sqlite3VdbeGetValue(Vdbe *v, int iVar, u8 aff){$/;"	f
sqlite3VdbeHalt	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeHalt(Vdbe *p){$/;"	f
sqlite3VdbeIOTraceSql	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeIOTraceSql(Vdbe *p){$/;"	f
sqlite3VdbeIOTraceSql	utilities/sqlite3/sqlite3.c	11848;"	d	file:
sqlite3VdbeIdxKeyCompare	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeIdxKeyCompare($/;"	f
sqlite3VdbeIdxRowid	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeIdxRowid(sqlite3 *db, BtCursor *pCur, i64 *rowid){$/;"	f
sqlite3VdbeIntValue	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE i64 sqlite3VdbeIntValue(Mem *pMem){$/;"	f
sqlite3VdbeIntegerAffinity	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeIntegerAffinity(Mem *pMem){$/;"	f
sqlite3VdbeJumpHere	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeJumpHere(Vdbe *p, int addr){$/;"	f
sqlite3VdbeLeave	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeLeave(Vdbe *p){$/;"	f
sqlite3VdbeLeave	utilities/sqlite3/sqlite3.c	12962;"	d	file:
sqlite3VdbeLinkSubProgram	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeLinkSubProgram(Vdbe *pVdbe, SubProgram *p){$/;"	f
sqlite3VdbeList	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeList($/;"	f
sqlite3VdbeMakeLabel	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMakeLabel(Vdbe *p){$/;"	f
sqlite3VdbeMakeReady	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMakeReady($/;"	f
sqlite3VdbeMemCopy	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemCopy(Mem *pTo, const Mem *pFrom){$/;"	f
sqlite3VdbeMemExpandBlob	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemExpandBlob(Mem *pMem){$/;"	f
sqlite3VdbeMemExpandBlob	utilities/sqlite3/sqlite3.c	12985;"	d	file:
sqlite3VdbeMemFinalize	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemFinalize(Mem *pMem, FuncDef *pFunc){$/;"	f
sqlite3VdbeMemFromBtree	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemFromBtree($/;"	f
sqlite3VdbeMemGrow	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemGrow(Mem *pMem, int n, int preserve){$/;"	f
sqlite3VdbeMemHandleBom	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemHandleBom(Mem *pMem){$/;"	f
sqlite3VdbeMemIntegerify	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemIntegerify(Mem *pMem){$/;"	f
sqlite3VdbeMemMakeWriteable	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemMakeWriteable(Mem *pMem){$/;"	f
sqlite3VdbeMemMove	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemMove(Mem *pTo, Mem *pFrom){$/;"	f
sqlite3VdbeMemNulTerminate	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemNulTerminate(Mem *pMem){$/;"	f
sqlite3VdbeMemNumerify	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemNumerify(Mem *pMem){$/;"	f
sqlite3VdbeMemPrepareToChange	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemPrepareToChange(Vdbe *pVdbe, Mem *pMem){$/;"	f
sqlite3VdbeMemPrettyPrint	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemPrettyPrint(Mem *pMem, char *zBuf){$/;"	f
sqlite3VdbeMemRealify	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemRealify(Mem *pMem){$/;"	f
sqlite3VdbeMemRelease	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemRelease(Mem *p){$/;"	f
sqlite3VdbeMemReleaseExternal	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemReleaseExternal(Mem *p){$/;"	f
sqlite3VdbeMemSetDouble	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemSetDouble(Mem *pMem, double val){$/;"	f
sqlite3VdbeMemSetDouble	utilities/sqlite3/sqlite3.c	12910;"	d	file:
sqlite3VdbeMemSetInt64	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemSetInt64(Mem *pMem, i64 val){$/;"	f
sqlite3VdbeMemSetNull	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemSetNull(Mem *pMem){$/;"	f
sqlite3VdbeMemSetRowSet	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemSetRowSet(Mem *pMem){$/;"	f
sqlite3VdbeMemSetStr	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemSetStr($/;"	f
sqlite3VdbeMemSetZeroBlob	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemSetZeroBlob(Mem *pMem, int n){$/;"	f
sqlite3VdbeMemShallowCopy	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemShallowCopy(Mem *pTo, const Mem *pFrom, int srcType){$/;"	f
sqlite3VdbeMemStoreType	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemStoreType(Mem *pMem){$/;"	f
sqlite3VdbeMemStringify	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemStringify(Mem *pMem, int enc){$/;"	f
sqlite3VdbeMemTooBig	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemTooBig(Mem *p){$/;"	f
sqlite3VdbeMemTranslate	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemTranslate(Mem *pMem, u8 desiredEnc){$/;"	f
sqlite3VdbeNoopComment	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeNoopComment(Vdbe *p, const char *zFormat, ...){$/;"	f
sqlite3VdbeParameterIndex	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeParameterIndex(Vdbe *p, const char *zName, int nName){$/;"	f
sqlite3VdbePrintOp	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbePrintOp(FILE *pOut, int pc, Op *pOp){$/;"	f
sqlite3VdbePrintSql	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbePrintSql(Vdbe *p){$/;"	f
sqlite3VdbeRealValue	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE double sqlite3VdbeRealValue(Mem *pMem){$/;"	f
sqlite3VdbeRecordCompare	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeRecordCompare($/;"	f
sqlite3VdbeRecordUnpack	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeRecordUnpack($/;"	f
sqlite3VdbeReset	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeReset(Vdbe *p){$/;"	f
sqlite3VdbeResetStepResult	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeResetStepResult(Vdbe *p){$/;"	f
sqlite3VdbeResolveLabel	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeResolveLabel(Vdbe *p, int x){$/;"	f
sqlite3VdbeRewind	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeRewind(Vdbe *p){$/;"	f
sqlite3VdbeRunOnlyOnce	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeRunOnlyOnce(Vdbe *p){$/;"	f
sqlite3VdbeSerialGet	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3VdbeSerialGet($/;"	f
sqlite3VdbeSerialPut	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3VdbeSerialPut(u8 *buf, int nBuf, Mem *pMem, int file_format){$/;"	f
sqlite3VdbeSerialType	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3VdbeSerialType(Mem *pMem, int file_format){$/;"	f
sqlite3VdbeSerialTypeLen	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3VdbeSerialTypeLen(u32 serial_type){$/;"	f
sqlite3VdbeSetChanges	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeSetChanges(sqlite3 *db, int nChange){$/;"	f
sqlite3VdbeSetColName	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeSetColName($/;"	f
sqlite3VdbeSetNumCols	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeSetNumCols(Vdbe *p, int nResColumn){$/;"	f
sqlite3VdbeSetSql	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeSetSql(Vdbe *p, const char *z, int n, int isPrepareV2){$/;"	f
sqlite3VdbeSetVarmask	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeSetVarmask(Vdbe *v, int iVar){$/;"	f
sqlite3VdbeSorterClose	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeSorterClose(sqlite3 *db, VdbeCursor *pCsr){$/;"	f
sqlite3VdbeSorterClose	utilities/sqlite3/sqlite3.c	12942;"	d	file:
sqlite3VdbeSorterCompare	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeSorterCompare($/;"	f
sqlite3VdbeSorterCompare	utilities/sqlite3/sqlite3.c	12946;"	d	file:
sqlite3VdbeSorterInit	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeSorterInit(sqlite3 *db, VdbeCursor *pCsr){$/;"	f
sqlite3VdbeSorterInit	utilities/sqlite3/sqlite3.c	12940;"	d	file:
sqlite3VdbeSorterNext	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeSorterNext(sqlite3 *db, VdbeCursor *pCsr, int *pbEof){$/;"	f
sqlite3VdbeSorterNext	utilities/sqlite3/sqlite3.c	12945;"	d	file:
sqlite3VdbeSorterRewind	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeSorterRewind(sqlite3 *db, VdbeCursor *pCsr, int *pbEof){$/;"	f
sqlite3VdbeSorterRewind	utilities/sqlite3/sqlite3.c	12944;"	d	file:
sqlite3VdbeSorterRowkey	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeSorterRowkey(VdbeCursor *pCsr, Mem *pOut){$/;"	f
sqlite3VdbeSorterRowkey	utilities/sqlite3/sqlite3.c	12943;"	d	file:
sqlite3VdbeSorterWrite	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeSorterWrite($/;"	f
sqlite3VdbeSorterWrite	utilities/sqlite3/sqlite3.c	12941;"	d	file:
sqlite3VdbeSwap	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeSwap(Vdbe *pA, Vdbe *pB){$/;"	f
sqlite3VdbeTakeOpArray	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE VdbeOp *sqlite3VdbeTakeOpArray(Vdbe *p, int *pnOp, int *pnMaxArg){$/;"	f
sqlite3VdbeTrace	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeTrace(Vdbe *p, FILE *trace){$/;"	f
sqlite3VdbeUsesBtree	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeUsesBtree(Vdbe *p, int i){$/;"	f
sqlite3ViewGetColumnNames	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ViewGetColumnNames(Parse *pParse, Table *pTable){$/;"	f
sqlite3ViewGetColumnNames	utilities/sqlite3/sqlite3.c	11351;"	d	file:
sqlite3VtabArgExtend	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VtabArgExtend(Parse *pParse, Token *p){$/;"	f
sqlite3VtabArgInit	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VtabArgInit(Parse *pParse){$/;"	f
sqlite3VtabBegin	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VtabBegin(sqlite3 *db, VTable *pVTab){$/;"	f
sqlite3VtabBeginParse	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VtabBeginParse($/;"	f
sqlite3VtabCallConnect	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VtabCallConnect(Parse *pParse, Table *pTab){$/;"	f
sqlite3VtabCallCreate	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VtabCallCreate(sqlite3 *db, int iDb, const char *zTab, char **pzErr){$/;"	f
sqlite3VtabCallDestroy	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VtabCallDestroy(sqlite3 *db, int iDb, const char *zTab){$/;"	f
sqlite3VtabClear	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VtabClear(sqlite3 *db, Table *p){$/;"	f
sqlite3VtabClear	utilities/sqlite3/sqlite3.c	11704;"	d	file:
sqlite3VtabCommit	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VtabCommit(sqlite3 *db){$/;"	f
sqlite3VtabCommit	utilities/sqlite3/sqlite3.c	11707;"	d	file:
sqlite3VtabFinishParse	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VtabFinishParse(Parse *pParse, Token *pEnd){$/;"	f
sqlite3VtabInSync	utilities/sqlite3/sqlite3.c	11708;"	d	file:
sqlite3VtabInSync	utilities/sqlite3/sqlite3.c	11722;"	d	file:
sqlite3VtabLock	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VtabLock(VTable *pVTab){$/;"	f
sqlite3VtabLock	utilities/sqlite3/sqlite3.c	11709;"	d	file:
sqlite3VtabMakeWritable	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VtabMakeWritable(Parse *pParse, Table *pTab){$/;"	f
sqlite3VtabOverloadFunction	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE FuncDef *sqlite3VtabOverloadFunction($/;"	f
sqlite3VtabRollback	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VtabRollback(sqlite3 *db){$/;"	f
sqlite3VtabRollback	utilities/sqlite3/sqlite3.c	11706;"	d	file:
sqlite3VtabSavepoint	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VtabSavepoint(sqlite3 *db, int op, int iSavepoint){$/;"	f
sqlite3VtabSavepoint	utilities/sqlite3/sqlite3.c	11712;"	d	file:
sqlite3VtabSync	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VtabSync(sqlite3 *db, char **pzErrmsg){$/;"	f
sqlite3VtabSync	utilities/sqlite3/sqlite3.c	11705;"	d	file:
sqlite3VtabUnlock	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VtabUnlock(VTable *pVTab){$/;"	f
sqlite3VtabUnlock	utilities/sqlite3/sqlite3.c	11710;"	d	file:
sqlite3VtabUnlockList	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VtabUnlockList(sqlite3 *db){$/;"	f
sqlite3VtabUnlockList	utilities/sqlite3/sqlite3.c	11711;"	d	file:
sqlite3WalBeginReadTransaction	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalBeginReadTransaction(Wal *pWal, int *pChanged){$/;"	f
sqlite3WalBeginReadTransaction	utilities/sqlite3/sqlite3.c	37456;"	d	file:
sqlite3WalBeginWriteTransaction	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalBeginWriteTransaction(Wal *pWal){$/;"	f
sqlite3WalBeginWriteTransaction	utilities/sqlite3/sqlite3.c	37460;"	d	file:
sqlite3WalCallback	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalCallback(Wal *pWal){$/;"	f
sqlite3WalCallback	utilities/sqlite3/sqlite3.c	37467;"	d	file:
sqlite3WalCheckpoint	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalCheckpoint($/;"	f
sqlite3WalCheckpoint	utilities/sqlite3/sqlite3.c	37466;"	d	file:
sqlite3WalClose	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalClose($/;"	f
sqlite3WalClose	utilities/sqlite3/sqlite3.c	37455;"	d	file:
sqlite3WalDbsize	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Pgno sqlite3WalDbsize(Wal *pWal){$/;"	f
sqlite3WalDbsize	utilities/sqlite3/sqlite3.c	37459;"	d	file:
sqlite3WalDefaultHook	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalDefaultHook($/;"	f
sqlite3WalEndReadTransaction	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3WalEndReadTransaction(Wal *pWal){$/;"	f
sqlite3WalEndReadTransaction	utilities/sqlite3/sqlite3.c	37457;"	d	file:
sqlite3WalEndWriteTransaction	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalEndWriteTransaction(Wal *pWal){$/;"	f
sqlite3WalEndWriteTransaction	utilities/sqlite3/sqlite3.c	37461;"	d	file:
sqlite3WalExclusiveMode	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalExclusiveMode(Wal *pWal, int op){$/;"	f
sqlite3WalExclusiveMode	utilities/sqlite3/sqlite3.c	37468;"	d	file:
sqlite3WalFrames	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalFrames($/;"	f
sqlite3WalFrames	utilities/sqlite3/sqlite3.c	37465;"	d	file:
sqlite3WalHeapMemory	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalHeapMemory(Wal *pWal){$/;"	f
sqlite3WalHeapMemory	utilities/sqlite3/sqlite3.c	37469;"	d	file:
sqlite3WalLimit	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3WalLimit(Wal *pWal, i64 iLimit){$/;"	f
sqlite3WalLimit	utilities/sqlite3/sqlite3.c	37454;"	d	file:
sqlite3WalOpen	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalOpen($/;"	f
sqlite3WalOpen	utilities/sqlite3/sqlite3.c	37453;"	d	file:
sqlite3WalRead	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalRead($/;"	f
sqlite3WalRead	utilities/sqlite3/sqlite3.c	37458;"	d	file:
sqlite3WalSavepoint	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3WalSavepoint(Wal *pWal, u32 *aWalData){$/;"	f
sqlite3WalSavepoint	utilities/sqlite3/sqlite3.c	37463;"	d	file:
sqlite3WalSavepointUndo	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalSavepointUndo(Wal *pWal, u32 *aWalData){$/;"	f
sqlite3WalSavepointUndo	utilities/sqlite3/sqlite3.c	37464;"	d	file:
sqlite3WalTrace	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalTrace = 0;$/;"	v
sqlite3WalUndo	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalUndo(Wal *pWal, int (*xUndo)(void *, Pgno), void *pUndoCtx){$/;"	f
sqlite3WalUndo	utilities/sqlite3/sqlite3.c	37462;"	d	file:
sqlite3WalkExpr	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalkExpr(Walker *pWalker, Expr *pExpr){$/;"	f
sqlite3WalkExprList	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalkExprList(Walker *pWalker, ExprList *p){$/;"	f
sqlite3WalkSelect	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalkSelect(Walker *pWalker, Select *p){$/;"	f
sqlite3WalkSelectExpr	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalkSelectExpr(Walker *pWalker, Select *p){$/;"	f
sqlite3WalkSelectFrom	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalkSelectFrom(Walker *pWalker, Select *p){$/;"	f
sqlite3WhereBegin	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE WhereInfo *sqlite3WhereBegin($/;"	f
sqlite3WhereEnd	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3WhereEnd(WhereInfo *pWInfo){$/;"	f
sqlite3WhereTrace	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WhereTrace = 0;$/;"	v
sqlite3XPrintf	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3XPrintf(StrAccum *p, const char *zFormat, ...){$/;"	f
sqlite3_aggregate_context	utilities/sqlite3/sqlite3.c	/^SQLITE_API void *sqlite3_aggregate_context(sqlite3_context *p, int nByte){$/;"	f
sqlite3_aggregate_context	utilities/sqlite3/sqlite3.c	89120;"	d	file:
sqlite3_aggregate_count	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_aggregate_count(sqlite3_context *p){$/;"	f
sqlite3_aggregate_count	utilities/sqlite3/sqlite3.c	89122;"	d	file:
sqlite3_api_routines	utilities/sqlite3/sqlite3.c	/^struct sqlite3_api_routines {$/;"	s	file:
sqlite3_api_routines	utilities/sqlite3/sqlite3.c	/^typedef struct sqlite3_api_routines sqlite3_api_routines;$/;"	t	typeref:struct:sqlite3_api_routines	file:
sqlite3_auto_extension	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_auto_extension(void (*xInit)(void)){$/;"	f
sqlite3_backup	utilities/sqlite3/sqlite3.c	/^struct sqlite3_backup {$/;"	s	file:
sqlite3_backup	utilities/sqlite3/sqlite3.c	/^typedef struct sqlite3_backup sqlite3_backup;$/;"	t	typeref:struct:sqlite3_backup	file:
sqlite3_backup	utilities/sqlite3/sqlite3.h	/^typedef struct sqlite3_backup sqlite3_backup;$/;"	t	typeref:struct:sqlite3_backup
sqlite3_backup_finish	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_backup_finish(sqlite3_backup *p){$/;"	f
sqlite3_backup_finish	utilities/sqlite3/sqlite3.c	89285;"	d	file:
sqlite3_backup_init	utilities/sqlite3/sqlite3.c	/^SQLITE_API sqlite3_backup *sqlite3_backup_init($/;"	f
sqlite3_backup_init	utilities/sqlite3/sqlite3.c	89286;"	d	file:
sqlite3_backup_pagecount	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_backup_pagecount(sqlite3_backup *p){$/;"	f
sqlite3_backup_pagecount	utilities/sqlite3/sqlite3.c	89287;"	d	file:
sqlite3_backup_remaining	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_backup_remaining(sqlite3_backup *p){$/;"	f
sqlite3_backup_remaining	utilities/sqlite3/sqlite3.c	89288;"	d	file:
sqlite3_backup_step	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_backup_step(sqlite3_backup *p, int nPage){$/;"	f
sqlite3_backup_step	utilities/sqlite3/sqlite3.c	89289;"	d	file:
sqlite3_bind_blob	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_bind_blob($/;"	f
sqlite3_bind_blob	utilities/sqlite3/sqlite3.c	89124;"	d	file:
sqlite3_bind_double	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_bind_double(sqlite3_stmt *pStmt, int i, double rValue){$/;"	f
sqlite3_bind_double	utilities/sqlite3/sqlite3.c	89125;"	d	file:
sqlite3_bind_int	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_bind_int(sqlite3_stmt *p, int i, int iValue){$/;"	f
sqlite3_bind_int	utilities/sqlite3/sqlite3.c	89126;"	d	file:
sqlite3_bind_int64	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_bind_int64(sqlite3_stmt *pStmt, int i, sqlite_int64 iValue){$/;"	f
sqlite3_bind_int64	utilities/sqlite3/sqlite3.c	89127;"	d	file:
sqlite3_bind_null	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_bind_null(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_bind_null	utilities/sqlite3/sqlite3.c	89128;"	d	file:
sqlite3_bind_parameter_count	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_bind_parameter_count(sqlite3_stmt *pStmt){$/;"	f
sqlite3_bind_parameter_count	utilities/sqlite3/sqlite3.c	89129;"	d	file:
sqlite3_bind_parameter_index	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_bind_parameter_index(sqlite3_stmt *pStmt, const char *zName){$/;"	f
sqlite3_bind_parameter_index	utilities/sqlite3/sqlite3.c	89130;"	d	file:
sqlite3_bind_parameter_name	utilities/sqlite3/sqlite3.c	/^SQLITE_API const char *sqlite3_bind_parameter_name(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_bind_parameter_name	utilities/sqlite3/sqlite3.c	89131;"	d	file:
sqlite3_bind_text	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_bind_text( $/;"	f
sqlite3_bind_text	utilities/sqlite3/sqlite3.c	89132;"	d	file:
sqlite3_bind_text16	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_bind_text16($/;"	f
sqlite3_bind_text16	utilities/sqlite3/sqlite3.c	89133;"	d	file:
sqlite3_bind_text16	utilities/sqlite3/sqlite3.c	89342;"	d	file:
sqlite3_bind_value	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_bind_value(sqlite3_stmt *pStmt, int i, const sqlite3_value *pValue){$/;"	f
sqlite3_bind_value	utilities/sqlite3/sqlite3.c	89134;"	d	file:
sqlite3_bind_zeroblob	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_bind_zeroblob(sqlite3_stmt *pStmt, int i, int n){$/;"	f
sqlite3_bind_zeroblob	utilities/sqlite3/sqlite3.c	89250;"	d	file:
sqlite3_bind_zeroblob	utilities/sqlite3/sqlite3.c	89403;"	d	file:
sqlite3_blob	utilities/sqlite3/sqlite3.c	/^typedef struct sqlite3_blob sqlite3_blob;$/;"	t	typeref:struct:sqlite3_blob	file:
sqlite3_blob	utilities/sqlite3/sqlite3.h	/^typedef struct sqlite3_blob sqlite3_blob;$/;"	t	typeref:struct:sqlite3_blob
sqlite3_blob_bytes	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_blob_bytes(sqlite3_blob *pBlob){$/;"	f
sqlite3_blob_bytes	utilities/sqlite3/sqlite3.c	89251;"	d	file:
sqlite3_blob_bytes	utilities/sqlite3/sqlite3.c	89404;"	d	file:
sqlite3_blob_close	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_blob_close(sqlite3_blob *pBlob){$/;"	f
sqlite3_blob_close	utilities/sqlite3/sqlite3.c	89252;"	d	file:
sqlite3_blob_close	utilities/sqlite3/sqlite3.c	89405;"	d	file:
sqlite3_blob_open	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_blob_open($/;"	f
sqlite3_blob_open	utilities/sqlite3/sqlite3.c	89253;"	d	file:
sqlite3_blob_open	utilities/sqlite3/sqlite3.c	89406;"	d	file:
sqlite3_blob_read	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_blob_read(sqlite3_blob *pBlob, void *z, int n, int iOffset){$/;"	f
sqlite3_blob_read	utilities/sqlite3/sqlite3.c	89254;"	d	file:
sqlite3_blob_read	utilities/sqlite3/sqlite3.c	89407;"	d	file:
sqlite3_blob_reopen	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_blob_reopen(sqlite3_blob *pBlob, sqlite3_int64 iRow){$/;"	f
sqlite3_blob_reopen	utilities/sqlite3/sqlite3.c	89306;"	d	file:
sqlite3_blob_reopen	utilities/sqlite3/sqlite3.c	89409;"	d	file:
sqlite3_blob_write	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_blob_write(sqlite3_blob *pBlob, const void *z, int n, int iOffset){$/;"	f
sqlite3_blob_write	utilities/sqlite3/sqlite3.c	89255;"	d	file:
sqlite3_blob_write	utilities/sqlite3/sqlite3.c	89408;"	d	file:
sqlite3_busy_handler	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_busy_handler($/;"	f
sqlite3_busy_handler	utilities/sqlite3/sqlite3.c	89135;"	d	file:
sqlite3_busy_timeout	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_busy_timeout(sqlite3 *db, int ms){$/;"	f
sqlite3_busy_timeout	utilities/sqlite3/sqlite3.c	89136;"	d	file:
sqlite3_callback	utilities/sqlite3/sqlite3.c	/^typedef int (*sqlite3_callback)(void*,int,char**, char**);$/;"	t	file:
sqlite3_callback	utilities/sqlite3/sqlite3.h	/^typedef int (*sqlite3_callback)(void*,int,char**, char**);$/;"	t
sqlite3_changes	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_changes(sqlite3 *db){$/;"	f
sqlite3_changes	utilities/sqlite3/sqlite3.c	89137;"	d	file:
sqlite3_clear_bindings	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_clear_bindings(sqlite3_stmt *pStmt){$/;"	f
sqlite3_clear_bindings	utilities/sqlite3/sqlite3.c	89249;"	d	file:
sqlite3_close	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_close(sqlite3 *db){$/;"	f
sqlite3_close	utilities/sqlite3/sqlite3.c	89138;"	d	file:
sqlite3_collation_needed	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_collation_needed($/;"	f
sqlite3_collation_needed	utilities/sqlite3/sqlite3.c	89139;"	d	file:
sqlite3_collation_needed16	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_collation_needed16($/;"	f
sqlite3_collation_needed16	utilities/sqlite3/sqlite3.c	89140;"	d	file:
sqlite3_collation_needed16	utilities/sqlite3/sqlite3.c	89343;"	d	file:
sqlite3_column_blob	utilities/sqlite3/sqlite3.c	/^SQLITE_API const void *sqlite3_column_blob(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_blob	utilities/sqlite3/sqlite3.c	89141;"	d	file:
sqlite3_column_bytes	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_column_bytes(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_bytes	utilities/sqlite3/sqlite3.c	89142;"	d	file:
sqlite3_column_bytes16	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_column_bytes16(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_bytes16	utilities/sqlite3/sqlite3.c	89143;"	d	file:
sqlite3_column_count	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_column_count(sqlite3_stmt *pStmt){$/;"	f
sqlite3_column_count	utilities/sqlite3/sqlite3.c	89144;"	d	file:
sqlite3_column_database_name	utilities/sqlite3/sqlite3.c	/^SQLITE_API const char *sqlite3_column_database_name(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_database_name	utilities/sqlite3/sqlite3.c	89145;"	d	file:
sqlite3_column_database_name	utilities/sqlite3/sqlite3.c	89328;"	d	file:
sqlite3_column_database_name16	utilities/sqlite3/sqlite3.c	/^SQLITE_API const void *sqlite3_column_database_name16(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_database_name16	utilities/sqlite3/sqlite3.c	89146;"	d	file:
sqlite3_column_database_name16	utilities/sqlite3/sqlite3.c	89329;"	d	file:
sqlite3_column_database_name16	utilities/sqlite3/sqlite3.c	89361;"	d	file:
sqlite3_column_decltype	utilities/sqlite3/sqlite3.c	/^SQLITE_API const char *sqlite3_column_decltype(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_decltype	utilities/sqlite3/sqlite3.c	89147;"	d	file:
sqlite3_column_decltype	utilities/sqlite3/sqlite3.c	89373;"	d	file:
sqlite3_column_decltype16	utilities/sqlite3/sqlite3.c	/^SQLITE_API const void *sqlite3_column_decltype16(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_decltype16	utilities/sqlite3/sqlite3.c	89148;"	d	file:
sqlite3_column_decltype16	utilities/sqlite3/sqlite3.c	89344;"	d	file:
sqlite3_column_decltype16	utilities/sqlite3/sqlite3.c	89372;"	d	file:
sqlite3_column_double	utilities/sqlite3/sqlite3.c	/^SQLITE_API double sqlite3_column_double(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_double	utilities/sqlite3/sqlite3.c	89149;"	d	file:
sqlite3_column_int	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_column_int(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_int	utilities/sqlite3/sqlite3.c	89150;"	d	file:
sqlite3_column_int64	utilities/sqlite3/sqlite3.c	/^SQLITE_API sqlite_int64 sqlite3_column_int64(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_int64	utilities/sqlite3/sqlite3.c	89151;"	d	file:
sqlite3_column_name	utilities/sqlite3/sqlite3.c	/^SQLITE_API const char *sqlite3_column_name(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_name	utilities/sqlite3/sqlite3.c	89152;"	d	file:
sqlite3_column_name16	utilities/sqlite3/sqlite3.c	/^SQLITE_API const void *sqlite3_column_name16(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_name16	utilities/sqlite3/sqlite3.c	89153;"	d	file:
sqlite3_column_name16	utilities/sqlite3/sqlite3.c	89345;"	d	file:
sqlite3_column_origin_name	utilities/sqlite3/sqlite3.c	/^SQLITE_API const char *sqlite3_column_origin_name(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_origin_name	utilities/sqlite3/sqlite3.c	89154;"	d	file:
sqlite3_column_origin_name	utilities/sqlite3/sqlite3.c	89332;"	d	file:
sqlite3_column_origin_name16	utilities/sqlite3/sqlite3.c	/^SQLITE_API const void *sqlite3_column_origin_name16(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_origin_name16	utilities/sqlite3/sqlite3.c	89155;"	d	file:
sqlite3_column_origin_name16	utilities/sqlite3/sqlite3.c	89333;"	d	file:
sqlite3_column_origin_name16	utilities/sqlite3/sqlite3.c	89363;"	d	file:
sqlite3_column_table_name	utilities/sqlite3/sqlite3.c	/^SQLITE_API const char *sqlite3_column_table_name(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_table_name	utilities/sqlite3/sqlite3.c	89156;"	d	file:
sqlite3_column_table_name	utilities/sqlite3/sqlite3.c	89330;"	d	file:
sqlite3_column_table_name16	utilities/sqlite3/sqlite3.c	/^SQLITE_API const void *sqlite3_column_table_name16(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_table_name16	utilities/sqlite3/sqlite3.c	89157;"	d	file:
sqlite3_column_table_name16	utilities/sqlite3/sqlite3.c	89331;"	d	file:
sqlite3_column_table_name16	utilities/sqlite3/sqlite3.c	89362;"	d	file:
sqlite3_column_text	utilities/sqlite3/sqlite3.c	/^SQLITE_API const unsigned char *sqlite3_column_text(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_text	utilities/sqlite3/sqlite3.c	89158;"	d	file:
sqlite3_column_text16	utilities/sqlite3/sqlite3.c	/^SQLITE_API const void *sqlite3_column_text16(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_text16	utilities/sqlite3/sqlite3.c	89159;"	d	file:
sqlite3_column_text16	utilities/sqlite3/sqlite3.c	89346;"	d	file:
sqlite3_column_type	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_column_type(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_type	utilities/sqlite3/sqlite3.c	89160;"	d	file:
sqlite3_column_value	utilities/sqlite3/sqlite3.c	/^SQLITE_API sqlite3_value *sqlite3_column_value(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_value	utilities/sqlite3/sqlite3.c	89161;"	d	file:
sqlite3_commit_hook	utilities/sqlite3/sqlite3.c	/^SQLITE_API void *sqlite3_commit_hook($/;"	f
sqlite3_commit_hook	utilities/sqlite3/sqlite3.c	89162;"	d	file:
sqlite3_compileoption_get	utilities/sqlite3/sqlite3.c	/^SQLITE_API const char *sqlite3_compileoption_get(int N){$/;"	f
sqlite3_compileoption_get	utilities/sqlite3/sqlite3.c	89290;"	d	file:
sqlite3_compileoption_used	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_compileoption_used(const char *zOptName){$/;"	f
sqlite3_compileoption_used	utilities/sqlite3/sqlite3.c	89291;"	d	file:
sqlite3_complete	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_complete(const char *zSql){$/;"	f
sqlite3_complete	utilities/sqlite3/sqlite3.c	89163;"	d	file:
sqlite3_complete	utilities/sqlite3/sqlite3.c	89367;"	d	file:
sqlite3_complete16	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_complete16(const void *zSql){$/;"	f
sqlite3_complete16	utilities/sqlite3/sqlite3.c	89164;"	d	file:
sqlite3_complete16	utilities/sqlite3/sqlite3.c	89347;"	d	file:
sqlite3_complete16	utilities/sqlite3/sqlite3.c	89368;"	d	file:
sqlite3_config	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_config(int op, ...){$/;"	f
sqlite3_context	utilities/sqlite3/sqlite3.c	/^struct sqlite3_context {$/;"	s	file:
sqlite3_context	utilities/sqlite3/sqlite3.c	/^typedef struct sqlite3_context sqlite3_context;$/;"	t	typeref:struct:sqlite3_context	file:
sqlite3_context	utilities/sqlite3/sqlite3.h	/^typedef struct sqlite3_context sqlite3_context;$/;"	t	typeref:struct:sqlite3_context
sqlite3_context_db_handle	utilities/sqlite3/sqlite3.c	/^SQLITE_API sqlite3 *sqlite3_context_db_handle(sqlite3_context *p){$/;"	f
sqlite3_context_db_handle	utilities/sqlite3/sqlite3.c	89279;"	d	file:
sqlite3_create_collation	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_create_collation($/;"	f
sqlite3_create_collation	utilities/sqlite3/sqlite3.c	89165;"	d	file:
sqlite3_create_collation16	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_create_collation16($/;"	f
sqlite3_create_collation16	utilities/sqlite3/sqlite3.c	89166;"	d	file:
sqlite3_create_collation16	utilities/sqlite3/sqlite3.c	89348;"	d	file:
sqlite3_create_collation_v2	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_create_collation_v2($/;"	f
sqlite3_create_collation_v2	utilities/sqlite3/sqlite3.c	89256;"	d	file:
sqlite3_create_function	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_create_function($/;"	f
sqlite3_create_function	utilities/sqlite3/sqlite3.c	89167;"	d	file:
sqlite3_create_function16	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_create_function16($/;"	f
sqlite3_create_function16	utilities/sqlite3/sqlite3.c	89168;"	d	file:
sqlite3_create_function16	utilities/sqlite3/sqlite3.c	89349;"	d	file:
sqlite3_create_function_v2	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_create_function_v2($/;"	f
sqlite3_create_function_v2	utilities/sqlite3/sqlite3.c	89292;"	d	file:
sqlite3_create_module	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_create_module($/;"	f
sqlite3_create_module	utilities/sqlite3/sqlite3.c	89169;"	d	file:
sqlite3_create_module	utilities/sqlite3/sqlite3.c	89381;"	d	file:
sqlite3_create_module_v2	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_create_module_v2($/;"	f
sqlite3_create_module_v2	utilities/sqlite3/sqlite3.c	89170;"	d	file:
sqlite3_create_module_v2	utilities/sqlite3/sqlite3.c	89382;"	d	file:
sqlite3_current_time	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_current_time = 0;  \/* Fake system time in seconds since 1970. *\/$/;"	v
sqlite3_current_time	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_current_time = 0;$/;"	v
sqlite3_data_count	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_data_count(sqlite3_stmt *pStmt){$/;"	f
sqlite3_data_count	utilities/sqlite3/sqlite3.c	89171;"	d	file:
sqlite3_db_config	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_db_config(sqlite3 *db, int op, ...){$/;"	f
sqlite3_db_config	utilities/sqlite3/sqlite3.c	89293;"	d	file:
sqlite3_db_handle	utilities/sqlite3/sqlite3.c	/^SQLITE_API sqlite3 *sqlite3_db_handle(sqlite3_stmt *pStmt){$/;"	f
sqlite3_db_handle	utilities/sqlite3/sqlite3.c	89172;"	d	file:
sqlite3_db_mutex	utilities/sqlite3/sqlite3.c	/^SQLITE_API sqlite3_mutex *sqlite3_db_mutex(sqlite3 *db){$/;"	f
sqlite3_db_mutex	utilities/sqlite3/sqlite3.c	89294;"	d	file:
sqlite3_db_status	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_db_status($/;"	f
sqlite3_db_status	utilities/sqlite3/sqlite3.c	89295;"	d	file:
sqlite3_debug_mutex	utilities/sqlite3/sqlite3.c	/^typedef struct sqlite3_debug_mutex {$/;"	s	file:
sqlite3_debug_mutex	utilities/sqlite3/sqlite3.c	/^} sqlite3_debug_mutex;$/;"	t	typeref:struct:sqlite3_debug_mutex	file:
sqlite3_declare_vtab	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_declare_vtab(sqlite3 *db, const char *zCreateTable){$/;"	f
sqlite3_declare_vtab	utilities/sqlite3/sqlite3.c	89173;"	d	file:
sqlite3_declare_vtab	utilities/sqlite3/sqlite3.c	89383;"	d	file:
sqlite3_destructor_type	utilities/sqlite3/sqlite3.c	/^typedef void (*sqlite3_destructor_type)(void*);$/;"	t	file:
sqlite3_destructor_type	utilities/sqlite3/sqlite3.h	/^typedef void (*sqlite3_destructor_type)(void*);$/;"	t
sqlite3_diskfull	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_diskfull = 0;$/;"	v
sqlite3_diskfull_pending	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_diskfull_pending = 0;$/;"	v
sqlite3_enable_load_extension	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_enable_load_extension(sqlite3 *db, int onoff){$/;"	f
sqlite3_enable_shared_cache	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_enable_shared_cache(int enable){$/;"	f
sqlite3_enable_shared_cache	utilities/sqlite3/sqlite3.c	89174;"	d	file:
sqlite3_enable_shared_cache	utilities/sqlite3/sqlite3.c	89389;"	d	file:
sqlite3_errcode	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_errcode(sqlite3 *db){$/;"	f
sqlite3_errcode	utilities/sqlite3/sqlite3.c	89175;"	d	file:
sqlite3_errmsg	utilities/sqlite3/sqlite3.c	/^SQLITE_API const char *sqlite3_errmsg(sqlite3 *db){$/;"	f
sqlite3_errmsg	utilities/sqlite3/sqlite3.c	89176;"	d	file:
sqlite3_errmsg16	utilities/sqlite3/sqlite3.c	/^SQLITE_API const void *sqlite3_errmsg16(sqlite3 *db){$/;"	f
sqlite3_errmsg16	utilities/sqlite3/sqlite3.c	89177;"	d	file:
sqlite3_errmsg16	utilities/sqlite3/sqlite3.c	89350;"	d	file:
sqlite3_exec	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_exec($/;"	f
sqlite3_exec	utilities/sqlite3/sqlite3.c	89178;"	d	file:
sqlite3_expired	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_expired(sqlite3_stmt *pStmt){$/;"	f
sqlite3_expired	utilities/sqlite3/sqlite3.c	89180;"	d	file:
sqlite3_extended_errcode	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_extended_errcode(sqlite3 *db){$/;"	f
sqlite3_extended_errcode	utilities/sqlite3/sqlite3.c	89296;"	d	file:
sqlite3_extended_result_codes	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_extended_result_codes(sqlite3 *db, int onoff){$/;"	f
sqlite3_extended_result_codes	utilities/sqlite3/sqlite3.c	89280;"	d	file:
sqlite3_extension_init	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_extension_init($/;"	f
sqlite3_file	utilities/sqlite3/sqlite3.c	/^struct sqlite3_file {$/;"	s	file:
sqlite3_file	utilities/sqlite3/sqlite3.c	/^typedef struct sqlite3_file sqlite3_file;$/;"	t	typeref:struct:sqlite3_file	file:
sqlite3_file	utilities/sqlite3/sqlite3.h	/^struct sqlite3_file {$/;"	s
sqlite3_file	utilities/sqlite3/sqlite3.h	/^typedef struct sqlite3_file sqlite3_file;$/;"	t	typeref:struct:sqlite3_file
sqlite3_file_control	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_file_control(sqlite3 *db, const char *zDbName, int op, void *pArg){$/;"	f
sqlite3_file_control	utilities/sqlite3/sqlite3.c	89257;"	d	file:
sqlite3_finalize	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_finalize(sqlite3_stmt *pStmt){$/;"	f
sqlite3_finalize	utilities/sqlite3/sqlite3.c	89182;"	d	file:
sqlite3_found_count	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_found_count = 0;$/;"	v
sqlite3_free	utilities/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_free(void *p){$/;"	f
sqlite3_free	utilities/sqlite3/sqlite3.c	89183;"	d	file:
sqlite3_free_table	utilities/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_free_table($/;"	f
sqlite3_free_table	utilities/sqlite3/sqlite3.c	89184;"	d	file:
sqlite3_free_table	utilities/sqlite3/sqlite3.c	89398;"	d	file:
sqlite3_fts3_enable_parentheses	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_fts3_enable_parentheses = 0;$/;"	v
sqlite3_fts3_enable_parentheses	utilities/sqlite3/sqlite3.c	119604;"	d	file:
sqlite3_fts3_enable_parentheses	utilities/sqlite3/sqlite3.c	119606;"	d	file:
sqlite3_fullsync_count	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_fullsync_count = 0;$/;"	v
sqlite3_get_autocommit	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_get_autocommit(sqlite3 *db){$/;"	f
sqlite3_get_autocommit	utilities/sqlite3/sqlite3.c	89185;"	d	file:
sqlite3_get_auxdata	utilities/sqlite3/sqlite3.c	/^SQLITE_API void *sqlite3_get_auxdata(sqlite3_context *pCtx, int iArg){$/;"	f
sqlite3_get_auxdata	utilities/sqlite3/sqlite3.c	89186;"	d	file:
sqlite3_get_table	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_get_table($/;"	f
sqlite3_get_table	utilities/sqlite3/sqlite3.c	89187;"	d	file:
sqlite3_get_table	utilities/sqlite3/sqlite3.c	89399;"	d	file:
sqlite3_get_table_cb	utilities/sqlite3/sqlite3.c	/^static int sqlite3_get_table_cb(void *pArg, int nCol, char **argv, char **colv){$/;"	f	file:
sqlite3_global_recover	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_global_recover(void){$/;"	f
sqlite3_global_recover	utilities/sqlite3/sqlite3.c	89189;"	d	file:
sqlite3_hostid_num	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_hostid_num = 0;$/;"	v
sqlite3_index_constraint	utilities/sqlite3/sqlite3.c	/^  struct sqlite3_index_constraint {$/;"	s	struct:sqlite3_index_info	file:
sqlite3_index_constraint	utilities/sqlite3/sqlite3.h	/^  struct sqlite3_index_constraint {$/;"	s	struct:sqlite3_index_info
sqlite3_index_constraint_usage	utilities/sqlite3/sqlite3.c	/^  struct sqlite3_index_constraint_usage {$/;"	s	struct:sqlite3_index_info	file:
sqlite3_index_constraint_usage	utilities/sqlite3/sqlite3.h	/^  struct sqlite3_index_constraint_usage {$/;"	s	struct:sqlite3_index_info
sqlite3_index_info	utilities/sqlite3/sqlite3.c	/^struct sqlite3_index_info {$/;"	s	file:
sqlite3_index_info	utilities/sqlite3/sqlite3.c	/^typedef struct sqlite3_index_info sqlite3_index_info;$/;"	t	typeref:struct:sqlite3_index_info	file:
sqlite3_index_info	utilities/sqlite3/sqlite3.h	/^struct sqlite3_index_info {$/;"	s
sqlite3_index_info	utilities/sqlite3/sqlite3.h	/^typedef struct sqlite3_index_info sqlite3_index_info;$/;"	t	typeref:struct:sqlite3_index_info
sqlite3_index_orderby	utilities/sqlite3/sqlite3.c	/^  struct sqlite3_index_orderby {$/;"	s	struct:sqlite3_index_info	file:
sqlite3_index_orderby	utilities/sqlite3/sqlite3.h	/^  struct sqlite3_index_orderby {$/;"	s	struct:sqlite3_index_info
sqlite3_initialize	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_initialize(void){$/;"	f
sqlite3_int64	utilities/sqlite3/sqlite3.c	/^typedef sqlite_int64 sqlite3_int64;$/;"	t	file:
sqlite3_int64	utilities/sqlite3/sqlite3.h	/^typedef sqlite_int64 sqlite3_int64;$/;"	t
sqlite3_interrupt	utilities/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_interrupt(sqlite3 *db){$/;"	f
sqlite3_interrupt	utilities/sqlite3/sqlite3.c	89191;"	d	file:
sqlite3_interrupt_count	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_interrupt_count = 0;$/;"	v
sqlite3_io_error_benign	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_io_error_benign = 0;         \/* True if errors are benign *\/$/;"	v
sqlite3_io_error_hardhit	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_io_error_hardhit = 0;        \/* Number of non-benign errors *\/$/;"	v
sqlite3_io_error_hit	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_io_error_hit = 0;            \/* Total number of I\/O Errors *\/$/;"	v
sqlite3_io_error_pending	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_io_error_pending = 0;        \/* Count down to first I\/O error *\/$/;"	v
sqlite3_io_error_persist	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_io_error_persist = 0;        \/* True if I\/O errors persist *\/$/;"	v
sqlite3_io_methods	utilities/sqlite3/sqlite3.c	/^struct sqlite3_io_methods {$/;"	s	file:
sqlite3_io_methods	utilities/sqlite3/sqlite3.c	/^typedef struct sqlite3_io_methods sqlite3_io_methods;$/;"	t	typeref:struct:sqlite3_io_methods	file:
sqlite3_io_methods	utilities/sqlite3/sqlite3.h	/^struct sqlite3_io_methods {$/;"	s
sqlite3_io_methods	utilities/sqlite3/sqlite3.h	/^typedef struct sqlite3_io_methods sqlite3_io_methods;$/;"	t	typeref:struct:sqlite3_io_methods
sqlite3_last_insert_rowid	utilities/sqlite3/sqlite3.c	/^SQLITE_API sqlite_int64 sqlite3_last_insert_rowid(sqlite3 *db){$/;"	f
sqlite3_last_insert_rowid	utilities/sqlite3/sqlite3.c	89192;"	d	file:
sqlite3_libversion	utilities/sqlite3/sqlite3.c	/^SQLITE_API const char *sqlite3_libversion(void){ return sqlite3_version; }$/;"	f
sqlite3_libversion	utilities/sqlite3/sqlite3.c	89193;"	d	file:
sqlite3_libversion_number	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_libversion_number(void){ return SQLITE_VERSION_NUMBER; }$/;"	f
sqlite3_libversion_number	utilities/sqlite3/sqlite3.c	89194;"	d	file:
sqlite3_like_count	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_like_count = 0;$/;"	v
sqlite3_limit	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_limit(sqlite3 *db, int limitId, int newLimit){$/;"	f
sqlite3_limit	utilities/sqlite3/sqlite3.c	89281;"	d	file:
sqlite3_load_extension	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_load_extension($/;"	f
sqlite3_log	utilities/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_log(int iErrCode, const char *zFormat, ...){$/;"	f
sqlite3_log	utilities/sqlite3/sqlite3.c	89297;"	d	file:
sqlite3_malloc	utilities/sqlite3/sqlite3.c	/^SQLITE_API void *sqlite3_malloc(int n){$/;"	f
sqlite3_malloc	utilities/sqlite3/sqlite3.c	89195;"	d	file:
sqlite3_max_blobsize	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_max_blobsize = 0;$/;"	v
sqlite3_mem_methods	utilities/sqlite3/sqlite3.c	/^struct sqlite3_mem_methods {$/;"	s	file:
sqlite3_mem_methods	utilities/sqlite3/sqlite3.c	/^typedef struct sqlite3_mem_methods sqlite3_mem_methods;$/;"	t	typeref:struct:sqlite3_mem_methods	file:
sqlite3_mem_methods	utilities/sqlite3/sqlite3.h	/^struct sqlite3_mem_methods {$/;"	s
sqlite3_mem_methods	utilities/sqlite3/sqlite3.h	/^typedef struct sqlite3_mem_methods sqlite3_mem_methods;$/;"	t	typeref:struct:sqlite3_mem_methods
sqlite3_memdebug_vfs_oom_test	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_memdebug_vfs_oom_test = 1;$/;"	v
sqlite3_memory_alarm	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_memory_alarm($/;"	f
sqlite3_memory_highwater	utilities/sqlite3/sqlite3.c	/^SQLITE_API sqlite3_int64 sqlite3_memory_highwater(int resetFlag){$/;"	f
sqlite3_memory_highwater	utilities/sqlite3/sqlite3.c	89258;"	d	file:
sqlite3_memory_used	utilities/sqlite3/sqlite3.c	/^SQLITE_API sqlite3_int64 sqlite3_memory_used(void){$/;"	f
sqlite3_memory_used	utilities/sqlite3/sqlite3.c	89259;"	d	file:
sqlite3_module	utilities/sqlite3/sqlite3.c	/^struct sqlite3_module {$/;"	s	file:
sqlite3_module	utilities/sqlite3/sqlite3.c	/^typedef struct sqlite3_module sqlite3_module;$/;"	t	typeref:struct:sqlite3_module	file:
sqlite3_module	utilities/sqlite3/sqlite3.h	/^struct sqlite3_module {$/;"	s
sqlite3_module	utilities/sqlite3/sqlite3.h	/^typedef struct sqlite3_module sqlite3_module;$/;"	t	typeref:struct:sqlite3_module
sqlite3_mprintf	utilities/sqlite3/sqlite3.c	/^SQLITE_API char *sqlite3_mprintf(const char *zFormat, ...){$/;"	f
sqlite3_mprintf	utilities/sqlite3/sqlite3.c	89196;"	d	file:
sqlite3_mutex	utilities/sqlite3/sqlite3.c	/^struct sqlite3_mutex {$/;"	s	file:
sqlite3_mutex	utilities/sqlite3/sqlite3.c	/^typedef struct sqlite3_mutex sqlite3_mutex;$/;"	t	typeref:struct:sqlite3_mutex	file:
sqlite3_mutex	utilities/sqlite3/sqlite3.h	/^typedef struct sqlite3_mutex sqlite3_mutex;$/;"	t	typeref:struct:sqlite3_mutex
sqlite3_mutex_alloc	utilities/sqlite3/sqlite3.c	/^SQLITE_API sqlite3_mutex *sqlite3_mutex_alloc(int id){$/;"	f
sqlite3_mutex_alloc	utilities/sqlite3/sqlite3.c	89260;"	d	file:
sqlite3_mutex_alloc	utilities/sqlite3/sqlite3.c	9281;"	d	file:
sqlite3_mutex_enter	utilities/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_mutex_enter(sqlite3_mutex *p){$/;"	f
sqlite3_mutex_enter	utilities/sqlite3/sqlite3.c	89261;"	d	file:
sqlite3_mutex_enter	utilities/sqlite3/sqlite3.c	9283;"	d	file:
sqlite3_mutex_free	utilities/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_mutex_free(sqlite3_mutex *p){$/;"	f
sqlite3_mutex_free	utilities/sqlite3/sqlite3.c	89262;"	d	file:
sqlite3_mutex_free	utilities/sqlite3/sqlite3.c	9282;"	d	file:
sqlite3_mutex_held	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_mutex_held(sqlite3_mutex *p){$/;"	f
sqlite3_mutex_held	utilities/sqlite3/sqlite3.c	9286;"	d	file:
sqlite3_mutex_leave	utilities/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_mutex_leave(sqlite3_mutex *p){$/;"	f
sqlite3_mutex_leave	utilities/sqlite3/sqlite3.c	89263;"	d	file:
sqlite3_mutex_leave	utilities/sqlite3/sqlite3.c	9285;"	d	file:
sqlite3_mutex_methods	utilities/sqlite3/sqlite3.c	/^struct sqlite3_mutex_methods {$/;"	s	file:
sqlite3_mutex_methods	utilities/sqlite3/sqlite3.c	/^typedef struct sqlite3_mutex_methods sqlite3_mutex_methods;$/;"	t	typeref:struct:sqlite3_mutex_methods	file:
sqlite3_mutex_methods	utilities/sqlite3/sqlite3.h	/^struct sqlite3_mutex_methods {$/;"	s
sqlite3_mutex_methods	utilities/sqlite3/sqlite3.h	/^typedef struct sqlite3_mutex_methods sqlite3_mutex_methods;$/;"	t	typeref:struct:sqlite3_mutex_methods
sqlite3_mutex_notheld	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_mutex_notheld(sqlite3_mutex *p){$/;"	f
sqlite3_mutex_notheld	utilities/sqlite3/sqlite3.c	9287;"	d	file:
sqlite3_mutex_try	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_mutex_try(sqlite3_mutex *p){$/;"	f
sqlite3_mutex_try	utilities/sqlite3/sqlite3.c	89264;"	d	file:
sqlite3_mutex_try	utilities/sqlite3/sqlite3.c	9284;"	d	file:
sqlite3_next_stmt	utilities/sqlite3/sqlite3.c	/^SQLITE_API sqlite3_stmt *sqlite3_next_stmt(sqlite3 *pDb, sqlite3_stmt *pStmt){$/;"	f
sqlite3_next_stmt	utilities/sqlite3/sqlite3.c	89282;"	d	file:
sqlite3_open	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_open($/;"	f
sqlite3_open	utilities/sqlite3/sqlite3.c	89197;"	d	file:
sqlite3_open16	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_open16($/;"	f
sqlite3_open16	utilities/sqlite3/sqlite3.c	89198;"	d	file:
sqlite3_open16	utilities/sqlite3/sqlite3.c	89351;"	d	file:
sqlite3_open_file_count	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_open_file_count = 0;$/;"	v
sqlite3_open_v2	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_open_v2($/;"	f
sqlite3_open_v2	utilities/sqlite3/sqlite3.c	89265;"	d	file:
sqlite3_opentemp_count	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_opentemp_count = 0;$/;"	v
sqlite3_os_end	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_os_end(void){ $/;"	f
sqlite3_os_end	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_os_end(void){$/;"	f
sqlite3_os_init	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_os_init(void){ $/;"	f
sqlite3_os_init	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_os_init(void){$/;"	f
sqlite3_os_type	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_os_type = 0;$/;"	v
sqlite3_os_type	utilities/sqlite3/sqlite3.c	/^static int sqlite3_os_type = 0;$/;"	v	file:
sqlite3_overload_function	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_overload_function($/;"	f
sqlite3_overload_function	utilities/sqlite3/sqlite3.c	89246;"	d	file:
sqlite3_pager_readdb_count	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_pager_readdb_count = 0;    \/* Number of full pages read from DB *\/$/;"	v
sqlite3_pager_writedb_count	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_pager_writedb_count = 0;   \/* Number of full pages written to DB *\/$/;"	v
sqlite3_pager_writej_count	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_pager_writej_count = 0;    \/* Number of pages written to journal *\/$/;"	v
sqlite3_pcache	utilities/sqlite3/sqlite3.c	/^typedef struct sqlite3_pcache sqlite3_pcache;$/;"	t	typeref:struct:sqlite3_pcache	file:
sqlite3_pcache	utilities/sqlite3/sqlite3.h	/^typedef struct sqlite3_pcache sqlite3_pcache;$/;"	t	typeref:struct:sqlite3_pcache
sqlite3_pcache_methods	utilities/sqlite3/sqlite3.c	/^struct sqlite3_pcache_methods {$/;"	s	file:
sqlite3_pcache_methods	utilities/sqlite3/sqlite3.c	/^typedef struct sqlite3_pcache_methods sqlite3_pcache_methods;$/;"	t	typeref:struct:sqlite3_pcache_methods	file:
sqlite3_pcache_methods	utilities/sqlite3/sqlite3.h	/^struct sqlite3_pcache_methods {$/;"	s
sqlite3_pcache_methods	utilities/sqlite3/sqlite3.h	/^typedef struct sqlite3_pcache_methods sqlite3_pcache_methods;$/;"	t	typeref:struct:sqlite3_pcache_methods
sqlite3_prepare	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_prepare($/;"	f
sqlite3_prepare	utilities/sqlite3/sqlite3.c	89199;"	d	file:
sqlite3_prepare16	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_prepare16($/;"	f
sqlite3_prepare16	utilities/sqlite3/sqlite3.c	89200;"	d	file:
sqlite3_prepare16	utilities/sqlite3/sqlite3.c	89352;"	d	file:
sqlite3_prepare16_v2	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_prepare16_v2($/;"	f
sqlite3_prepare16_v2	utilities/sqlite3/sqlite3.c	89202;"	d	file:
sqlite3_prepare16_v2	utilities/sqlite3/sqlite3.c	89248;"	d	file:
sqlite3_prepare16_v2	utilities/sqlite3/sqlite3.c	89353;"	d	file:
sqlite3_prepare_v2	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_prepare_v2($/;"	f
sqlite3_prepare_v2	utilities/sqlite3/sqlite3.c	89201;"	d	file:
sqlite3_prepare_v2	utilities/sqlite3/sqlite3.c	89247;"	d	file:
sqlite3_profile	utilities/sqlite3/sqlite3.c	/^SQLITE_API void *sqlite3_profile($/;"	f
sqlite3_profile	utilities/sqlite3/sqlite3.c	89203;"	d	file:
sqlite3_profile	utilities/sqlite3/sqlite3.c	89393;"	d	file:
sqlite3_progress_handler	utilities/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_progress_handler($/;"	f
sqlite3_progress_handler	utilities/sqlite3/sqlite3.c	89204;"	d	file:
sqlite3_progress_handler	utilities/sqlite3/sqlite3.c	89377;"	d	file:
sqlite3_query_plan	utilities/sqlite3/sqlite3.c	/^SQLITE_API char sqlite3_query_plan[BMS*2*40];  \/* Text of the join *\/$/;"	v
sqlite3_randomness	utilities/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_randomness(int N, void *pBuf){$/;"	f
sqlite3_randomness	utilities/sqlite3/sqlite3.c	89278;"	d	file:
sqlite3_realloc	utilities/sqlite3/sqlite3.c	/^SQLITE_API void *sqlite3_realloc(void *pOld, int n){$/;"	f
sqlite3_realloc	utilities/sqlite3/sqlite3.c	89205;"	d	file:
sqlite3_release_memory	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_release_memory(int n){$/;"	f
sqlite3_release_memory	utilities/sqlite3/sqlite3.c	89266;"	d	file:
sqlite3_reset	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_reset(sqlite3_stmt *pStmt){$/;"	f
sqlite3_reset	utilities/sqlite3/sqlite3.c	89206;"	d	file:
sqlite3_reset_auto_extension	utilities/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_reset_auto_extension(void){$/;"	f
sqlite3_result_blob	utilities/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_result_blob($/;"	f
sqlite3_result_blob	utilities/sqlite3/sqlite3.c	89207;"	d	file:
sqlite3_result_double	utilities/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_result_double(sqlite3_context *pCtx, double rVal){$/;"	f
sqlite3_result_double	utilities/sqlite3/sqlite3.c	89208;"	d	file:
sqlite3_result_error	utilities/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_result_error(sqlite3_context *pCtx, const char *z, int n){$/;"	f
sqlite3_result_error	utilities/sqlite3/sqlite3.c	89209;"	d	file:
sqlite3_result_error16	utilities/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_result_error16(sqlite3_context *pCtx, const void *z, int n){$/;"	f
sqlite3_result_error16	utilities/sqlite3/sqlite3.c	89210;"	d	file:
sqlite3_result_error16	utilities/sqlite3/sqlite3.c	89354;"	d	file:
sqlite3_result_error_code	utilities/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_result_error_code(sqlite3_context *pCtx, int errCode){$/;"	f
sqlite3_result_error_code	utilities/sqlite3/sqlite3.c	89276;"	d	file:
sqlite3_result_error_nomem	utilities/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_result_error_nomem(sqlite3_context *pCtx){$/;"	f
sqlite3_result_error_nomem	utilities/sqlite3/sqlite3.c	89267;"	d	file:
sqlite3_result_error_toobig	utilities/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_result_error_toobig(sqlite3_context *pCtx){$/;"	f
sqlite3_result_error_toobig	utilities/sqlite3/sqlite3.c	89268;"	d	file:
sqlite3_result_int	utilities/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_result_int(sqlite3_context *pCtx, int iVal){$/;"	f
sqlite3_result_int	utilities/sqlite3/sqlite3.c	89211;"	d	file:
sqlite3_result_int64	utilities/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_result_int64(sqlite3_context *pCtx, i64 iVal){$/;"	f
sqlite3_result_int64	utilities/sqlite3/sqlite3.c	89212;"	d	file:
sqlite3_result_null	utilities/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_result_null(sqlite3_context *pCtx){$/;"	f
sqlite3_result_null	utilities/sqlite3/sqlite3.c	89213;"	d	file:
sqlite3_result_text	utilities/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_result_text($/;"	f
sqlite3_result_text	utilities/sqlite3/sqlite3.c	89214;"	d	file:
sqlite3_result_text16	utilities/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_result_text16($/;"	f
sqlite3_result_text16	utilities/sqlite3/sqlite3.c	89215;"	d	file:
sqlite3_result_text16	utilities/sqlite3/sqlite3.c	89355;"	d	file:
sqlite3_result_text16be	utilities/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_result_text16be($/;"	f
sqlite3_result_text16be	utilities/sqlite3/sqlite3.c	89216;"	d	file:
sqlite3_result_text16be	utilities/sqlite3/sqlite3.c	89356;"	d	file:
sqlite3_result_text16le	utilities/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_result_text16le($/;"	f
sqlite3_result_text16le	utilities/sqlite3/sqlite3.c	89217;"	d	file:
sqlite3_result_text16le	utilities/sqlite3/sqlite3.c	89357;"	d	file:
sqlite3_result_value	utilities/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_result_value(sqlite3_context *pCtx, sqlite3_value *pValue){$/;"	f
sqlite3_result_value	utilities/sqlite3/sqlite3.c	89218;"	d	file:
sqlite3_result_zeroblob	utilities/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_result_zeroblob(sqlite3_context *pCtx, int n){$/;"	f
sqlite3_result_zeroblob	utilities/sqlite3/sqlite3.c	89275;"	d	file:
sqlite3_rollback_hook	utilities/sqlite3/sqlite3.c	/^SQLITE_API void *sqlite3_rollback_hook($/;"	f
sqlite3_rollback_hook	utilities/sqlite3/sqlite3.c	89219;"	d	file:
sqlite3_rtree_geometry	utilities/sqlite3/sqlite3.c	/^struct sqlite3_rtree_geometry {$/;"	s	file:
sqlite3_rtree_geometry	utilities/sqlite3/sqlite3.c	/^typedef struct sqlite3_rtree_geometry sqlite3_rtree_geometry;$/;"	t	typeref:struct:sqlite3_rtree_geometry	file:
sqlite3_rtree_geometry	utilities/sqlite3/sqlite3.h	/^struct sqlite3_rtree_geometry {$/;"	s
sqlite3_rtree_geometry	utilities/sqlite3/sqlite3.h	/^typedef struct sqlite3_rtree_geometry sqlite3_rtree_geometry;$/;"	t	typeref:struct:sqlite3_rtree_geometry
sqlite3_rtree_geometry_callback	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_rtree_geometry_callback($/;"	f
sqlite3_search_count	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_search_count = 0;$/;"	v
sqlite3_set_authorizer	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_set_authorizer($/;"	f
sqlite3_set_authorizer	utilities/sqlite3/sqlite3.c	89220;"	d	file:
sqlite3_set_authorizer	utilities/sqlite3/sqlite3.c	89338;"	d	file:
sqlite3_set_auxdata	utilities/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_set_auxdata($/;"	f
sqlite3_set_auxdata	utilities/sqlite3/sqlite3.c	89221;"	d	file:
sqlite3_shutdown	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_shutdown(void){$/;"	f
sqlite3_sleep	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_sleep(int ms){$/;"	f
sqlite3_sleep	utilities/sqlite3/sqlite3.c	89269;"	d	file:
sqlite3_snprintf	utilities/sqlite3/sqlite3.c	/^SQLITE_API char *sqlite3_snprintf(int n, char *zBuf, const char *zFormat, ...){$/;"	f
sqlite3_snprintf	utilities/sqlite3/sqlite3.c	89222;"	d	file:
sqlite3_soft_heap_limit	utilities/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_soft_heap_limit(int n){$/;"	f
sqlite3_soft_heap_limit	utilities/sqlite3/sqlite3.c	89270;"	d	file:
sqlite3_soft_heap_limit64	utilities/sqlite3/sqlite3.c	/^SQLITE_API sqlite3_int64 sqlite3_soft_heap_limit64(sqlite3_int64 n){$/;"	f
sqlite3_soft_heap_limit64	utilities/sqlite3/sqlite3.c	89298;"	d	file:
sqlite3_sort_count	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_sort_count = 0;$/;"	v
sqlite3_sourceid	utilities/sqlite3/sqlite3.c	/^SQLITE_API const char *sqlite3_sourceid(void){ return SQLITE_SOURCE_ID; }$/;"	f
sqlite3_sourceid	utilities/sqlite3/sqlite3.c	89299;"	d	file:
sqlite3_sql	utilities/sqlite3/sqlite3.c	/^SQLITE_API const char *sqlite3_sql(sqlite3_stmt *pStmt){$/;"	f
sqlite3_sql	utilities/sqlite3/sqlite3.c	89283;"	d	file:
sqlite3_status	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_status(int op, int *pCurrent, int *pHighwater, int resetFlag){$/;"	f
sqlite3_status	utilities/sqlite3/sqlite3.c	89284;"	d	file:
sqlite3_step	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_step(sqlite3_stmt *pStmt){$/;"	f
sqlite3_step	utilities/sqlite3/sqlite3.c	89223;"	d	file:
sqlite3_stmt	utilities/sqlite3/sqlite3.c	/^typedef struct sqlite3_stmt sqlite3_stmt;$/;"	t	typeref:struct:sqlite3_stmt	file:
sqlite3_stmt	utilities/sqlite3/sqlite3.h	/^typedef struct sqlite3_stmt sqlite3_stmt;$/;"	t	typeref:struct:sqlite3_stmt
sqlite3_stmt_readonly	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_stmt_readonly(sqlite3_stmt *pStmt){$/;"	f
sqlite3_stmt_status	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_stmt_status(sqlite3_stmt *pStmt, int op, int resetFlag){$/;"	f
sqlite3_stmt_status	utilities/sqlite3/sqlite3.c	89300;"	d	file:
sqlite3_strnicmp	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_strnicmp(const char *zLeft, const char *zRight, int N){$/;"	f
sqlite3_strnicmp	utilities/sqlite3/sqlite3.c	89301;"	d	file:
sqlite3_sync_count	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_sync_count = 0;$/;"	v
sqlite3_syscall_ptr	utilities/sqlite3/sqlite3.c	/^typedef void (*sqlite3_syscall_ptr)(void);$/;"	t	file:
sqlite3_syscall_ptr	utilities/sqlite3/sqlite3.h	/^typedef void (*sqlite3_syscall_ptr)(void);$/;"	t
sqlite3_table_column_metadata	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_table_column_metadata($/;"	f
sqlite3_table_column_metadata	utilities/sqlite3/sqlite3.c	89224;"	d	file:
sqlite3_table_column_metadata	utilities/sqlite3/sqlite3.c	89334;"	d	file:
sqlite3_temp_directory	utilities/sqlite3/sqlite3.c	/^SQLITE_API char *sqlite3_temp_directory = 0;$/;"	v
sqlite3_temp_directory	utilities/sqlite3/sqlite3.c	/^SQLITE_API char *sqlite3_temp_directory;$/;"	v
sqlite3_temp_directory	utilities/sqlite3/sqlite3.h	/^SQLITE_API SQLITE_EXTERN char *sqlite3_temp_directory;$/;"	v
sqlite3_test_control	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_test_control(int op, ...){$/;"	f
sqlite3_test_control	utilities/sqlite3/sqlite3.c	89277;"	d	file:
sqlite3_thread_cleanup	utilities/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_thread_cleanup(void){$/;"	f
sqlite3_thread_cleanup	utilities/sqlite3/sqlite3.c	89225;"	d	file:
sqlite3_threadsafe	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_threadsafe(void){ return SQLITE_THREADSAFE; }$/;"	f
sqlite3_threadsafe	utilities/sqlite3/sqlite3.c	89274;"	d	file:
sqlite3_tokenizer	utilities/sqlite3/sqlite3.c	/^struct sqlite3_tokenizer {$/;"	s	file:
sqlite3_tokenizer	utilities/sqlite3/sqlite3.c	/^typedef struct sqlite3_tokenizer sqlite3_tokenizer;$/;"	t	typeref:struct:sqlite3_tokenizer	file:
sqlite3_tokenizer_cursor	utilities/sqlite3/sqlite3.c	/^struct sqlite3_tokenizer_cursor {$/;"	s	file:
sqlite3_tokenizer_cursor	utilities/sqlite3/sqlite3.c	/^typedef struct sqlite3_tokenizer_cursor sqlite3_tokenizer_cursor;$/;"	t	typeref:struct:sqlite3_tokenizer_cursor	file:
sqlite3_tokenizer_module	utilities/sqlite3/sqlite3.c	/^struct sqlite3_tokenizer_module {$/;"	s	file:
sqlite3_tokenizer_module	utilities/sqlite3/sqlite3.c	/^typedef struct sqlite3_tokenizer_module sqlite3_tokenizer_module;$/;"	t	typeref:struct:sqlite3_tokenizer_module	file:
sqlite3_total_changes	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_total_changes(sqlite3 *db){$/;"	f
sqlite3_total_changes	utilities/sqlite3/sqlite3.c	89226;"	d	file:
sqlite3_trace	utilities/sqlite3/sqlite3.c	/^SQLITE_API void *sqlite3_trace(sqlite3 *db, void (*xTrace)(void*,const char*), void *pArg){$/;"	f
sqlite3_trace	utilities/sqlite3/sqlite3.c	89227;"	d	file:
sqlite3_trace	utilities/sqlite3/sqlite3.c	89394;"	d	file:
sqlite3_transfer_bindings	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_transfer_bindings(sqlite3_stmt *pFromStmt, sqlite3_stmt *pToStmt){$/;"	f
sqlite3_transfer_bindings	utilities/sqlite3/sqlite3.c	89229;"	d	file:
sqlite3_uint64	utilities/sqlite3/sqlite3.c	/^typedef sqlite_uint64 sqlite3_uint64;$/;"	t	file:
sqlite3_uint64	utilities/sqlite3/sqlite3.h	/^typedef sqlite_uint64 sqlite3_uint64;$/;"	t
sqlite3_unlock_notify	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_unlock_notify($/;"	f
sqlite3_unlock_notify	utilities/sqlite3/sqlite3.c	89302;"	d	file:
sqlite3_update_hook	utilities/sqlite3/sqlite3.c	/^SQLITE_API void *sqlite3_update_hook($/;"	f
sqlite3_update_hook	utilities/sqlite3/sqlite3.c	89231;"	d	file:
sqlite3_uri_parameter	utilities/sqlite3/sqlite3.c	/^SQLITE_API const char *sqlite3_uri_parameter(const char *zFilename, const char *zParam){$/;"	f
sqlite3_user_data	utilities/sqlite3/sqlite3.c	/^SQLITE_API void *sqlite3_user_data(sqlite3_context *p){$/;"	f
sqlite3_user_data	utilities/sqlite3/sqlite3.c	89232;"	d	file:
sqlite3_value	utilities/sqlite3/sqlite3.c	/^typedef struct Mem sqlite3_value;$/;"	t	typeref:struct:Mem	file:
sqlite3_value	utilities/sqlite3/sqlite3.h	/^typedef struct Mem sqlite3_value;$/;"	t	typeref:struct:Mem
sqlite3_value_blob	utilities/sqlite3/sqlite3.c	/^SQLITE_API const void *sqlite3_value_blob(sqlite3_value *pVal){$/;"	f
sqlite3_value_blob	utilities/sqlite3/sqlite3.c	89233;"	d	file:
sqlite3_value_bytes	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_value_bytes(sqlite3_value *pVal){$/;"	f
sqlite3_value_bytes	utilities/sqlite3/sqlite3.c	89234;"	d	file:
sqlite3_value_bytes16	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_value_bytes16(sqlite3_value *pVal){$/;"	f
sqlite3_value_bytes16	utilities/sqlite3/sqlite3.c	89235;"	d	file:
sqlite3_value_double	utilities/sqlite3/sqlite3.c	/^SQLITE_API double sqlite3_value_double(sqlite3_value *pVal){$/;"	f
sqlite3_value_double	utilities/sqlite3/sqlite3.c	89236;"	d	file:
sqlite3_value_int	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_value_int(sqlite3_value *pVal){$/;"	f
sqlite3_value_int	utilities/sqlite3/sqlite3.c	89237;"	d	file:
sqlite3_value_int64	utilities/sqlite3/sqlite3.c	/^SQLITE_API sqlite_int64 sqlite3_value_int64(sqlite3_value *pVal){$/;"	f
sqlite3_value_int64	utilities/sqlite3/sqlite3.c	89238;"	d	file:
sqlite3_value_numeric_type	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_value_numeric_type(sqlite3_value *pVal){$/;"	f
sqlite3_value_numeric_type	utilities/sqlite3/sqlite3.c	89239;"	d	file:
sqlite3_value_text	utilities/sqlite3/sqlite3.c	/^SQLITE_API const unsigned char *sqlite3_value_text(sqlite3_value *pVal){$/;"	f
sqlite3_value_text	utilities/sqlite3/sqlite3.c	89240;"	d	file:
sqlite3_value_text16	utilities/sqlite3/sqlite3.c	/^SQLITE_API const void *sqlite3_value_text16(sqlite3_value* pVal){$/;"	f
sqlite3_value_text16	utilities/sqlite3/sqlite3.c	89241;"	d	file:
sqlite3_value_text16	utilities/sqlite3/sqlite3.c	89358;"	d	file:
sqlite3_value_text16be	utilities/sqlite3/sqlite3.c	/^SQLITE_API const void *sqlite3_value_text16be(sqlite3_value *pVal){$/;"	f
sqlite3_value_text16be	utilities/sqlite3/sqlite3.c	89242;"	d	file:
sqlite3_value_text16be	utilities/sqlite3/sqlite3.c	89359;"	d	file:
sqlite3_value_text16le	utilities/sqlite3/sqlite3.c	/^SQLITE_API const void *sqlite3_value_text16le(sqlite3_value *pVal){$/;"	f
sqlite3_value_text16le	utilities/sqlite3/sqlite3.c	89243;"	d	file:
sqlite3_value_text16le	utilities/sqlite3/sqlite3.c	89360;"	d	file:
sqlite3_value_type	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_value_type(sqlite3_value* pVal){$/;"	f
sqlite3_value_type	utilities/sqlite3/sqlite3.c	89244;"	d	file:
sqlite3_version	utilities/sqlite3/sqlite3.c	/^SQLITE_API const char sqlite3_version[] = SQLITE_VERSION;$/;"	v
sqlite3_version	utilities/sqlite3/sqlite3.h	/^SQLITE_API SQLITE_EXTERN const char sqlite3_version[];$/;"	v
sqlite3_vfs	utilities/sqlite3/sqlite3.c	/^struct sqlite3_vfs {$/;"	s	file:
sqlite3_vfs	utilities/sqlite3/sqlite3.c	/^typedef struct sqlite3_vfs sqlite3_vfs;$/;"	t	typeref:struct:sqlite3_vfs	file:
sqlite3_vfs	utilities/sqlite3/sqlite3.h	/^struct sqlite3_vfs {$/;"	s
sqlite3_vfs	utilities/sqlite3/sqlite3.h	/^typedef struct sqlite3_vfs sqlite3_vfs;$/;"	t	typeref:struct:sqlite3_vfs
sqlite3_vfs_find	utilities/sqlite3/sqlite3.c	/^SQLITE_API sqlite3_vfs *sqlite3_vfs_find(const char *zVfs){$/;"	f
sqlite3_vfs_find	utilities/sqlite3/sqlite3.c	89271;"	d	file:
sqlite3_vfs_register	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_vfs_register(sqlite3_vfs *pVfs, int makeDflt){$/;"	f
sqlite3_vfs_register	utilities/sqlite3/sqlite3.c	89272;"	d	file:
sqlite3_vfs_unregister	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_vfs_unregister(sqlite3_vfs *pVfs){$/;"	f
sqlite3_vfs_unregister	utilities/sqlite3/sqlite3.c	89273;"	d	file:
sqlite3_vmprintf	utilities/sqlite3/sqlite3.c	/^SQLITE_API char *sqlite3_vmprintf(const char *zFormat, va_list ap){$/;"	f
sqlite3_vmprintf	utilities/sqlite3/sqlite3.c	89245;"	d	file:
sqlite3_vsnprintf	utilities/sqlite3/sqlite3.c	/^SQLITE_API char *sqlite3_vsnprintf(int n, char *zBuf, const char *zFormat, va_list ap){$/;"	f
sqlite3_vtab	utilities/sqlite3/sqlite3.c	/^struct sqlite3_vtab {$/;"	s	file:
sqlite3_vtab	utilities/sqlite3/sqlite3.c	/^typedef struct sqlite3_vtab sqlite3_vtab;$/;"	t	typeref:struct:sqlite3_vtab	file:
sqlite3_vtab	utilities/sqlite3/sqlite3.h	/^struct sqlite3_vtab {$/;"	s
sqlite3_vtab	utilities/sqlite3/sqlite3.h	/^typedef struct sqlite3_vtab sqlite3_vtab;$/;"	t	typeref:struct:sqlite3_vtab
sqlite3_vtab_config	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_vtab_config(sqlite3 *db, int op, ...){$/;"	f
sqlite3_vtab_config	utilities/sqlite3/sqlite3.c	89307;"	d	file:
sqlite3_vtab_config	utilities/sqlite3/sqlite3.c	89384;"	d	file:
sqlite3_vtab_cursor	utilities/sqlite3/sqlite3.c	/^struct sqlite3_vtab_cursor {$/;"	s	file:
sqlite3_vtab_cursor	utilities/sqlite3/sqlite3.c	/^typedef struct sqlite3_vtab_cursor sqlite3_vtab_cursor;$/;"	t	typeref:struct:sqlite3_vtab_cursor	file:
sqlite3_vtab_cursor	utilities/sqlite3/sqlite3.h	/^struct sqlite3_vtab_cursor {$/;"	s
sqlite3_vtab_cursor	utilities/sqlite3/sqlite3.h	/^typedef struct sqlite3_vtab_cursor sqlite3_vtab_cursor;$/;"	t	typeref:struct:sqlite3_vtab_cursor
sqlite3_vtab_on_conflict	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_vtab_on_conflict(sqlite3 *db){$/;"	f
sqlite3_vtab_on_conflict	utilities/sqlite3/sqlite3.c	89308;"	d	file:
sqlite3_vtab_on_conflict	utilities/sqlite3/sqlite3.c	89385;"	d	file:
sqlite3_wal_autocheckpoint	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_wal_autocheckpoint(sqlite3 *db, int nFrame){$/;"	f
sqlite3_wal_autocheckpoint	utilities/sqlite3/sqlite3.c	89303;"	d	file:
sqlite3_wal_checkpoint	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_wal_checkpoint(sqlite3 *db, const char *zDb){$/;"	f
sqlite3_wal_checkpoint	utilities/sqlite3/sqlite3.c	89304;"	d	file:
sqlite3_wal_checkpoint_v2	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_wal_checkpoint_v2($/;"	f
sqlite3_wal_hook	utilities/sqlite3/sqlite3.c	/^SQLITE_API void *sqlite3_wal_hook($/;"	f
sqlite3_wal_hook	utilities/sqlite3/sqlite3.c	89305;"	d	file:
sqlite3_win32_mbcs_to_utf8	utilities/sqlite3/sqlite3.c	/^SQLITE_API char *sqlite3_win32_mbcs_to_utf8(const char *zFilename){$/;"	f
sqlite3_win32_utf8_to_mbcs	utilities/sqlite3/sqlite3.c	/^SQLITE_API char *sqlite3_win32_utf8_to_mbcs(const char *zFilename){$/;"	f
sqlite3_xferopt_count	utilities/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_xferopt_count;$/;"	v
sqlite3one	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const int sqlite3one = 1;$/;"	v
sqlite3one	utilities/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const int sqlite3one;$/;"	v
sqliteAuthBadReturnCode	utilities/sqlite3/sqlite3.c	/^static void sqliteAuthBadReturnCode(Parse *pParse){$/;"	f	file:
sqliteDefaultBusyCallback	utilities/sqlite3/sqlite3.c	/^static int sqliteDefaultBusyCallback($/;"	f	file:
sqliteDeleteColumnNames	utilities/sqlite3/sqlite3.c	/^static void sqliteDeleteColumnNames(sqlite3 *db, Table *pTable){$/;"	f	file:
sqliteErrorFromPosixError	utilities/sqlite3/sqlite3.c	/^static int sqliteErrorFromPosixError(int posixError, int sqliteIOErr) {$/;"	f	file:
sqliteHashData	utilities/sqlite3/sqlite3.c	7398;"	d	file:
sqliteHashFirst	utilities/sqlite3/sqlite3.c	7396;"	d	file:
sqliteHashNext	utilities/sqlite3/sqlite3.c	7397;"	d	file:
sqliteProcessJoin	utilities/sqlite3/sqlite3.c	/^static int sqliteProcessJoin(Parse *pParse, Select *p){$/;"	f	file:
sqliteViewResetAll	utilities/sqlite3/sqlite3.c	/^static void sqliteViewResetAll(sqlite3 *db, int idx){$/;"	f	file:
sqliteViewResetAll	utilities/sqlite3/sqlite3.c	80983;"	d	file:
sqlite_int64	utilities/sqlite3/sqlite3.c	/^  typedef SQLITE_INT64_TYPE sqlite_int64;$/;"	t	file:
sqlite_int64	utilities/sqlite3/sqlite3.c	/^  typedef __int64 sqlite_int64;$/;"	t	file:
sqlite_int64	utilities/sqlite3/sqlite3.c	/^  typedef long long int sqlite_int64;$/;"	t	file:
sqlite_int64	utilities/sqlite3/sqlite3.h	/^  typedef SQLITE_INT64_TYPE sqlite_int64;$/;"	t
sqlite_int64	utilities/sqlite3/sqlite3.h	/^  typedef __int64 sqlite_int64;$/;"	t
sqlite_int64	utilities/sqlite3/sqlite3.h	/^  typedef long long int sqlite_int64;$/;"	t
sqlite_uint64	utilities/sqlite3/sqlite3.c	/^  typedef unsigned SQLITE_INT64_TYPE sqlite_uint64;$/;"	t	file:
sqlite_uint64	utilities/sqlite3/sqlite3.c	/^  typedef unsigned __int64 sqlite_uint64;$/;"	t	file:
sqlite_uint64	utilities/sqlite3/sqlite3.c	/^  typedef unsigned long long int sqlite_uint64;$/;"	t	file:
sqlite_uint64	utilities/sqlite3/sqlite3.h	/^  typedef unsigned SQLITE_INT64_TYPE sqlite_uint64;$/;"	t
sqlite_uint64	utilities/sqlite3/sqlite3.h	/^  typedef unsigned __int64 sqlite_uint64;$/;"	t
sqlite_uint64	utilities/sqlite3/sqlite3.h	/^  typedef unsigned long long int sqlite_uint64;$/;"	t
ssize_t	utilities/modbus/modbus-private.h	/^typedef int ssize_t;$/;"	t
star_oh	utilities/sqlite3/sqlite3.c	/^static int star_oh(const char *z){$/;"	f	file:
startEndFlag	utilities/sqlite3/sqlite3.c	/^  unsigned char startEndFlag;       \/* 1=rel to end of fork, 0=rel to start *\/$/;"	m	struct:ByteRangeLockPB2	file:
startTime	utilities/sqlite3/sqlite3.c	/^  i64 startTime;          \/* Time when query started - used for profiling *\/$/;"	m	struct:Vdbe	file:
stateno	utilities/sqlite3/sqlite3.c	/^  YYACTIONTYPE stateno;  \/* The state-number *\/$/;"	m	struct:yyStackEntry	file:
status	utilities/sqlite3/sqlite3.c	/^  int (*status)(int,int*,int*,int);$/;"	m	struct:sqlite3_api_routines	file:
stem	utilities/sqlite3/sqlite3.c	/^static int stem($/;"	f	file:
step	utilities/sqlite3/sqlite3.c	/^  int  (*step)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	file:
step_list	utilities/sqlite3/sqlite3.c	/^  TriggerStep *step_list; \/* Link list of trigger program steps             *\/$/;"	m	struct:Trigger	file:
stmt_status	utilities/sqlite3/sqlite3.c	/^  int (*stmt_status)(sqlite3_stmt*,int,int);$/;"	m	struct:sqlite3_api_routines	file:
stop_bit	utilities/modbus/modbus-rtu-private.h	/^    uint8_t stop_bit;$/;"	m	struct:_modbus_rtu
stopbit	include/common.h	/^	int stopbit; $/;"	m	struct:uart_setting
strHash	utilities/sqlite3/sqlite3.c	/^static unsigned int strHash(const char *z, int nKey){$/;"	f	file:
strftimeFunc	utilities/sqlite3/sqlite3.c	/^static void strftimeFunc($/;"	f	file:
strlcpy	utilities/modbus/modbus.c	/^size_t strlcpy(char *dest, const char *src, size_t dest_size)$/;"	f
strnicmp	utilities/sqlite3/sqlite3.c	/^  int (*strnicmp)(const char*,const char*,int);$/;"	m	struct:sqlite3_api_routines	file:
subjInMemory	utilities/sqlite3/sqlite3.c	/^  u8 subjInMemory;            \/* True to use in-memory sub-journals *\/$/;"	m	struct:Pager	file:
subjRequiresPage	utilities/sqlite3/sqlite3.c	/^static int subjRequiresPage(PgHdr *pPg){$/;"	f	file:
subjournalPage	utilities/sqlite3/sqlite3.c	/^static int subjournalPage(PgHdr *pPg){$/;"	f	file:
substExpr	utilities/sqlite3/sqlite3.c	/^static Expr *substExpr($/;"	f	file:
substExprList	utilities/sqlite3/sqlite3.c	/^static void substExprList($/;"	f	file:
substSelect	utilities/sqlite3/sqlite3.c	/^static void substSelect($/;"	f	file:
substrFunc	utilities/sqlite3/sqlite3.c	/^static void substrFunc($/;"	f	file:
sumFinalize	utilities/sqlite3/sqlite3.c	/^static void sumFinalize(sqlite3_context *context){$/;"	f	file:
sumStep	utilities/sqlite3/sqlite3.c	/^static void sumStep(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
suppressErr	utilities/sqlite3/sqlite3.c	/^  u8 suppressErr;               \/* Do not issue error messages if true *\/$/;"	m	struct:sqlite3	file:
swapMixedEndianFloat	utilities/sqlite3/sqlite3.c	60965;"	d	file:
swapMixedEndianFloat	utilities/sqlite3/sqlite3.c	60967;"	d	file:
switchLockProxyPath	utilities/sqlite3/sqlite3.c	/^static int switchLockProxyPath(unixFile *pFile, const char *path) {$/;"	f	file:
syncFlags	utilities/sqlite3/sqlite3.c	/^  u8 syncFlags;               \/* SYNC_NORMAL or SYNC_FULL otherwise *\/$/;"	m	struct:Pager	file:
syncJournal	utilities/sqlite3/sqlite3.c	/^static int syncJournal(Pager *pPager, int newHdr){$/;"	f	file:
synthCollSeq	utilities/sqlite3/sqlite3.c	/^static int synthCollSeq(sqlite3 *db, CollSeq *pColl){$/;"	f	file:
system_threads	src/application/init.c	/^static int system_threads(void)$/;"	f	file:
sz	utilities/sqlite3/sqlite3.c	/^  u16 sz;                 \/* Size of each buffer in bytes *\/$/;"	m	struct:Lookaside	file:
szAtom	utilities/sqlite3/sqlite3.c	/^  int szAtom;      \/* Smallest possible allocation in bytes *\/$/;"	m	struct:Mem5Global	file:
szChunk	utilities/sqlite3/sqlite3.c	/^  int szChunk;                        \/* Configured by FCNTL_CHUNK_SIZE *\/$/;"	m	struct:unixFile	file:
szChunk	utilities/sqlite3/sqlite3.c	/^  int szChunk;              \/* Chunk size configured by FCNTL_CHUNK_SIZE *\/$/;"	m	struct:os2File	file:
szChunk	utilities/sqlite3/sqlite3.c	/^  int szChunk;            \/* Chunk size configured by FCNTL_CHUNK_SIZE *\/$/;"	m	struct:winFile	file:
szExtra	utilities/sqlite3/sqlite3.c	/^  int szExtra;                        \/* Size of extra space for each page *\/$/;"	m	struct:PCache	file:
szLookaside	utilities/sqlite3/sqlite3.c	/^  int szLookaside;                  \/* Default lookaside buffer size *\/$/;"	m	struct:Sqlite3Config	file:
szMaster	utilities/sqlite3/sqlite3.c	/^  u32 szMaster;$/;"	m	struct:Mem3Global	file:
szOsFile	utilities/sqlite3/sqlite3.c	/^  int szOsFile;            \/* Size of subclassed sqlite3_file *\/$/;"	m	struct:sqlite3_vfs	file:
szOsFile	utilities/sqlite3/sqlite3.h	/^  int szOsFile;            \/* Size of subclassed sqlite3_file *\/$/;"	m	struct:sqlite3_vfs
szPage	utilities/sqlite3/sqlite3.c	/^  int szPage;                         \/* Size of allocated pages in bytes *\/$/;"	m	struct:PCache1	file:
szPage	utilities/sqlite3/sqlite3.c	/^  int szPage;                         \/* Size of every page in this cache *\/$/;"	m	struct:PCache	file:
szPage	utilities/sqlite3/sqlite3.c	/^  int szPage;                       \/* Size of each page in pPage[] *\/$/;"	m	struct:Sqlite3Config	file:
szPage	utilities/sqlite3/sqlite3.c	/^  u16 szPage;                     \/* Database page size in bytes. 1==64K *\/$/;"	m	struct:WalIndexHdr	file:
szPage	utilities/sqlite3/sqlite3.c	/^  u32 szPage;                \/* Database page size *\/$/;"	m	struct:Wal	file:
szRegion	utilities/sqlite3/sqlite3.c	/^  int szRegion;              \/* Size of shared-memory regions *\/$/;"	m	struct:os2ShmNode	file:
szRegion	utilities/sqlite3/sqlite3.c	/^  int szRegion;              \/* Size of shared-memory regions *\/$/;"	m	struct:unixShmNode	file:
szRegion	utilities/sqlite3/sqlite3.c	/^  int szRegion;              \/* Size of shared-memory regions *\/$/;"	m	struct:winShmNode	file:
szScratch	utilities/sqlite3/sqlite3.c	/^  int szScratch;                    \/* Size of each scratch buffer *\/$/;"	m	struct:Sqlite3Config	file:
szSlot	utilities/sqlite3/sqlite3.c	/^  int szSlot;                    \/* Size of each free slot *\/$/;"	m	struct:PCacheGlobal	file:
t_id	utilities/modbus/modbus-private.h	/^    int t_id;$/;"	m	struct:_sft
tabFlags	utilities/sqlite3/sqlite3.c	/^  u8 tabFlags;         \/* Mask of TF_* values *\/$/;"	m	struct:Table	file:
tab_bits	utilities/modbus/modbus.h	/^    uint8_t *tab_bits;$/;"	m	struct:__anon3
tab_input_bits	utilities/modbus/modbus.h	/^    uint8_t *tab_input_bits;$/;"	m	struct:__anon3
tab_input_registers	utilities/modbus/modbus.h	/^    uint16_t *tab_input_registers;$/;"	m	struct:__anon3
tab_registers	utilities/modbus/modbus.h	/^    uint16_t *tab_registers;$/;"	m	struct:__anon3
table	utilities/sqlite3/sqlite3.c	/^  char *table;            \/* The table or view to which the trigger applies *\/$/;"	m	struct:Trigger	file:
tableAndColumnIndex	utilities/sqlite3/sqlite3.c	/^static int tableAndColumnIndex($/;"	f	file:
tableOfTrigger	utilities/sqlite3/sqlite3.c	/^static Table *tableOfTrigger(Trigger *pTrigger){$/;"	f	file:
table_column_metadata	utilities/sqlite3/sqlite3.c	/^  int  (*table_column_metadata)(sqlite3*,const char*,const char*,const char*,char const**,char const**,int*,int*,int*);$/;"	m	struct:sqlite3_api_routines	file:
table_crc_hi	utilities/modbus/modbus-rtu.c	/^static const uint8_t table_crc_hi[] = {$/;"	v	file:
table_crc_lo	utilities/modbus/modbus-rtu.c	/^static const uint8_t table_crc_lo[] = {$/;"	v	file:
target	utilities/sqlite3/sqlite3.c	/^  Token target;        \/* Target table for DELETE, UPDATE, INSERT *\/$/;"	m	struct:TriggerStep	file:
targetSrcList	utilities/sqlite3/sqlite3.c	/^static SrcList *targetSrcList($/;"	f	file:
tblHash	utilities/sqlite3/sqlite3.c	/^  Hash tblHash;        \/* All tables indexed by name *\/$/;"	m	struct:Schema	file:
tcp_close	components/io/tcp.c	/^static void tcp_close(object_t parent)$/;"	f	file:
tcp_connect	components/io/tcp.c	/^static int tcp_connect(object_t parent)$/;"	f	file:
tcp_info	components/io/tcp.c	/^static void tcp_info(void)$/;"	f	file:
tcp_init	components/io/tcp.c	/^static int tcp_init(object_t parent, void *info, object_buf_t read_buf, object_buf_t send_buf)$/;"	f	file:
tcp_poll	components/io/tcp.c	/^static int tcp_poll(object_t parent, int timeout)$/;"	f	file:
tcp_readbuf	components/io/tcp.c	/^int tcp_readbuf(object_t parent, char *buffer, int size)$/;"	f
tcp_recv	components/io/tcp.c	/^static int tcp_recv(object_t parent, char *buffer, int size)$/;"	f	file:
tcp_send	components/io/tcp.c	/^static int tcp_send(object_t parent, const char *buffer, const int size)$/;"	f	file:
tcp_sendbuf	components/io/tcp.c	/^int tcp_sendbuf(object_t parent, const char *buffer, const int size)$/;"	f
tcp_state	components/io/tcp.c	/^static int tcp_state(object_t parent)$/;"	f	file:
tempFile	utilities/sqlite3/sqlite3.c	/^  u8 tempFile;                \/* zFilename is a temporary file *\/$/;"	m	struct:Pager	file:
tempReg	utilities/sqlite3/sqlite3.c	/^    u8 tempReg;           \/* iReg is a temp register that needs to be freed *\/$/;"	m	struct:Parse::yColCache	file:
temp_store	utilities/sqlite3/sqlite3.c	/^  u8 temp_store;                \/* 1: file 2: memory 0: default *\/$/;"	m	struct:sqlite3	file:
termCanDriveIndex	utilities/sqlite3/sqlite3.c	/^static int termCanDriveIndex($/;"	f	file:
testFunc	utilities/sqlite3/sqlite3.c	/^static void testFunc($/;"	f	file:
testRtreeCell	utilities/sqlite3/sqlite3.c	/^static int testRtreeCell(Rtree *pRtree, RtreeCursor *pCursor, int *pbEof){$/;"	f	file:
testRtreeEntry	utilities/sqlite3/sqlite3.c	/^static int testRtreeEntry(Rtree *pRtree, RtreeCursor *pCursor, int *pbEof){$/;"	f	file:
testRtreeGeom	utilities/sqlite3/sqlite3.c	/^static int testRtreeGeom($/;"	f	file:
test_control	utilities/sqlite3/sqlite3.c	/^  int (*test_control)(int, ...);$/;"	m	struct:sqlite3_api_routines	file:
test_fts3_node_chunk_threshold	utilities/sqlite3/sqlite3.c	/^int test_fts3_node_chunk_threshold = (4*1024)*4;$/;"	v
test_fts3_node_chunksize	utilities/sqlite3/sqlite3.c	/^int test_fts3_node_chunksize = (4*1024);$/;"	v
testcase	utilities/sqlite3/sqlite3.c	114094;"	d	file:
testcase	utilities/sqlite3/sqlite3.c	471;"	d	file:
testcase	utilities/sqlite3/sqlite3.c	473;"	d	file:
thread_cleanup	utilities/sqlite3/sqlite3.c	/^  void  (*thread_cleanup)(void);$/;"	m	struct:sqlite3_api_routines	file:
thread_entry	src/application/daemon.c	/^static void *thread_entry(void *parameter)$/;"	f	file:
thread_proc	include/def.h	/^	thread_proc_t thread_proc;	\/\/\/<线程处理函数$/;"	m	struct:object_thread
thread_proc	src/application/daemon.c	/^static int thread_proc(HMOD hmod, int message, WPARAM wparam, LPARAM lparam)$/;"	f	file:
thread_proc_t	include/def.h	/^typedef int (*thread_proc_t)(HMOD, int, WPARAM, LPARAM);	\/\/\/<线程处理函数类型$/;"	t
thread_timer_entry	src/kernel/timer.c	/^void *thread_timer_entry(void *parameter)$/;"	f
threadid	utilities/sqlite3/sqlite3.c	24864;"	d	file:
threadid	utilities/sqlite3/sqlite3.c	24866;"	d	file:
tid	include/def.h	/^	pthread_t tid;	\/\/\/<线程ID$/;"	m	struct:object_thread
timeFunc	utilities/sqlite3/sqlite3.c	/^static void timeFunc($/;"	f	file:
time_10min	utilities/common/tools.c	/^time_t time_10min(time_t t)$/;"	f
time_no_day	utilities/common/tools.c	/^time_t time_no_day(time_t now)$/;"	f
time_no_hour	utilities/common/tools.c	/^time_t time_no_hour(time_t now)$/;"	f
time_no_min	utilities/common/tools.c	/^time_t time_no_min(time_t now)$/;"	f
time_no_month	utilities/common/tools.c	/^time_t time_no_month(time_t now)$/;"	f
time_no_sec	utilities/common/tools.c	/^time_t time_no_sec(time_t now)$/;"	f
timeout_tick	include/def.h	/^	int timeout_tick;	\/\/\/<当前定时计数$/;"	m	struct:object_timer
timer_add	src/kernel/timer.c	/^void timer_add(HMOD hmod, int id, int init_tick)$/;"	f
timer_control	src/kernel/timer.c	/^void timer_control(HMOD hmod, int id, int init_tick)$/;"	f
timer_func_t	include/def.h	/^typedef void (*timer_func_t)(void *parameter);$/;"	t
timer_remove	src/kernel/timer.c	/^void timer_remove(HMOD hmod, int id)$/;"	f
timer_start	src/kernel/timer.c	/^void timer_start(HMOD hmod, int id)$/;"	f
timer_stop	src/kernel/timer.c	/^void timer_stop(HMOD hmod, int id)$/;"	f
tkCREATE	utilities/sqlite3/sqlite3.c	109812;"	d	file:
tkEND	utilities/sqlite3/sqlite3.c	109815;"	d	file:
tkEXPLAIN	utilities/sqlite3/sqlite3.c	109811;"	d	file:
tkOTHER	utilities/sqlite3/sqlite3.c	109809;"	d	file:
tkSEMI	utilities/sqlite3/sqlite3.c	109807;"	d	file:
tkTEMP	utilities/sqlite3/sqlite3.c	109813;"	d	file:
tkTRIGGER	utilities/sqlite3/sqlite3.c	109814;"	d	file:
tkWS	utilities/sqlite3/sqlite3.c	109808;"	d	file:
tmask	utilities/sqlite3/sqlite3.c	87935;"	d	file:
tnum	utilities/sqlite3/sqlite3.c	/^  int tnum;            \/* Root BTree node for this table (see note above) *\/$/;"	m	struct:Table	file:
tnum	utilities/sqlite3/sqlite3.c	/^  int tnum;        \/* Page containing root of this index in database file *\/$/;"	m	struct:Index	file:
token	utilities/sqlite3/sqlite3.c	/^  void *token;                  \/* id that may be used to recursive triggers *\/$/;"	m	struct:SubProgram	file:
token	utilities/sqlite3/sqlite3.c	/^  void *token;            \/* Copy of SubProgram.token *\/$/;"	m	struct:VdbeFrame	file:
tooBig	utilities/sqlite3/sqlite3.c	/^  u8   tooBig;         \/* Becomes true if string size exceeds limits *\/$/;"	m	struct:StrAccum	file:
totalAlloc	utilities/sqlite3/sqlite3.c	/^  u64 totalAlloc;     \/* Total of all malloc calls - includes internal frag *\/$/;"	m	struct:Mem5Global	file:
totalExcess	utilities/sqlite3/sqlite3.c	/^  u64 totalExcess;    \/* Total internal fragmentation *\/$/;"	m	struct:Mem5Global	file:
totalFinalize	utilities/sqlite3/sqlite3.c	/^static void totalFinalize(sqlite3_context *context){$/;"	f	file:
total_changes	utilities/sqlite3/sqlite3.c	/^  int  (*total_changes)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
total_changes	utilities/sqlite3/sqlite3.c	/^static void total_changes($/;"	f	file:
tr_tm	utilities/sqlite3/sqlite3.c	/^  u8 tr_tm;               \/* One of TRIGGER_BEFORE, TRIGGER_AFTER *\/$/;"	m	struct:Trigger	file:
trace	utilities/sqlite3/sqlite3.c	/^  FILE *trace;            \/* Write an execution trace here, if not NULL *\/$/;"	m	struct:Vdbe	file:
trace	utilities/sqlite3/sqlite3.c	/^  int trace;                 \/* True to trace changes *\/$/;"	m	struct:sqlite3_mutex	file:
trace	utilities/sqlite3/sqlite3.c	/^  void * (*trace)(sqlite3*,void(*xTrace)(void*,const char*),void*);$/;"	m	struct:sqlite3_api_routines	file:
trace	utilities/sqlite3/sqlite3.c	/^ int   trace;       \/* True to trace changes *\/$/;"	m	struct:sqlite3_mutex	file:
transCntrChng	utilities/sqlite3/sqlite3.c	/^  unsigned char transCntrChng;   \/* True if the transaction counter changed *\/$/;"	m	struct:unixFile	file:
transferJoinMarkings	utilities/sqlite3/sqlite3.c	/^static void transferJoinMarkings(Expr *pDerived, Expr *pBase){$/;"	f	file:
transferParseError	utilities/sqlite3/sqlite3.c	/^static void transferParseError(Parse *pTo, Parse *pFrom){$/;"	f	file:
transfer_bindings	utilities/sqlite3/sqlite3.c	/^  int  (*transfer_bindings)(sqlite3_stmt*,sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	file:
trigHash	utilities/sqlite3/sqlite3.c	/^  Hash trigHash;       \/* All triggers indexed by name *\/$/;"	m	struct:Schema	file:
triggerStepAllocate	utilities/sqlite3/sqlite3.c	/^static TriggerStep *triggerStepAllocate($/;"	f	file:
trimFunc	utilities/sqlite3/sqlite3.c	/^static void trimFunc($/;"	f	file:
tty_raw	utilities/common/serial_port.c	/^static int tty_raw(int fd)$/;"	f	file:
type	include/def.h	/^	enum object_class_type type;	\/\/\/<类型$/;"	m	struct:object_information	typeref:enum:object_information::object_class_type
type	include/def.h	/^	int type;		\/\/\/<对象类型$/;"	m	struct:object
type	utilities/sqlite3/sqlite3.c	/^  etByte type;             \/* Conversion paradigm *\/$/;"	m	struct:et_info	file:
type	utilities/sqlite3/sqlite3.c	/^  u8  type;           \/* One of SQLITE_NULL, SQLITE_TEXT, SQLITE_INTEGER, etc *\/$/;"	m	struct:Mem	file:
type	utilities/sqlite3/sqlite3.c	/^  u8 type;              \/* One of the SQLITE_COLL_... values below *\/$/;"	m	struct:CollSeq	file:
type	utilities/sqlite3/sqlite3.c	/^struct AttachKey { int type;  Token key; };$/;"	m	struct:AttachKey	file:
typeofFunc	utilities/sqlite3/sqlite3.c	/^static void typeofFunc($/;"	f	file:
tz	utilities/sqlite3/sqlite3.c	/^  int tz;            \/* Timezone offset in minutes *\/$/;"	m	struct:DateTime	file:
u	utilities/sqlite3/sqlite3.c	/^  } u;$/;"	m	struct:Bitvec	typeref:union:Bitvec::__anon22	file:
u	utilities/sqlite3/sqlite3.c	/^  } u;$/;"	m	struct:Expr	typeref:union:Expr::__anon10	file:
u	utilities/sqlite3/sqlite3.c	/^  } u;$/;"	m	struct:IndexSample	typeref:union:IndexSample::__anon9	file:
u	utilities/sqlite3/sqlite3.c	/^  } u;$/;"	m	struct:Mem	typeref:union:Mem::__anon17	file:
u	utilities/sqlite3/sqlite3.c	/^  } u;$/;"	m	struct:Mem3Block	typeref:union:Mem3Block::__anon19	file:
u	utilities/sqlite3/sqlite3.c	/^  } u;$/;"	m	struct:Walker	typeref:union:Walker::__anon16	file:
u	utilities/sqlite3/sqlite3.c	/^  } u;$/;"	m	struct:WhereLevel	typeref:union:WhereLevel::__anon13	file:
u	utilities/sqlite3/sqlite3.c	/^  } u;$/;"	m	struct:WherePlan	typeref:union:WherePlan::__anon12	file:
u	utilities/sqlite3/sqlite3.c	/^  } u;$/;"	m	struct:WhereTerm	typeref:union:WhereTerm::__anon23	file:
u1	utilities/sqlite3/sqlite3.c	/^  } u1;$/;"	m	struct:sqlite3	typeref:union:sqlite3::__anon8	file:
u16	utilities/sqlite3/sqlite3.c	/^typedef UINT16_TYPE u16;           \/* 2-byte unsigned integer *\/$/;"	t	file:
u32	utilities/sqlite3/sqlite3.c	/^typedef UINT32_TYPE u32;           \/* 4-byte unsigned integer *\/$/;"	t	file:
u32	utilities/sqlite3/sqlite3.c	/^typedef unsigned int u32;         \/* 4-byte unsigned integer *\/$/;"	t	file:
u32	utilities/sqlite3/sqlite3.c	/^typedef unsigned int u32;$/;"	t	file:
u64	utilities/sqlite3/sqlite3.c	/^typedef sqlite3_uint64 u64;       \/* 8-byte unsigned integer *\/$/;"	t	file:
u64	utilities/sqlite3/sqlite3.c	/^typedef sqlite_uint64 u64;         \/* 8-byte unsigned integer *\/$/;"	t	file:
u8	utilities/sqlite3/sqlite3.c	/^typedef UINT8_TYPE u8;             \/* 1-byte unsigned integer *\/$/;"	t	file:
u8	utilities/sqlite3/sqlite3.c	/^typedef unsigned char u8;         \/* 1-byte (or larger) unsigned integer *\/$/;"	t	file:
u8	utilities/sqlite3/sqlite3.c	/^typedef unsigned char u8;$/;"	t	file:
u_to_c	utilities/common/tools.c	/^int u_to_c(time_t time, char *buf)$/;"	f
uart_close	components/io/uart.c	/^static void uart_close(object_t parent)$/;"	f	file:
uart_connect	components/io/uart.c	/^static int uart_connect(object_t parent)$/;"	f	file:
uart_info	components/io/uart.c	/^static void uart_info(void)$/;"	f	file:
uart_init	components/io/uart.c	/^static int uart_init(object_t parent, void *info, object_buf_t read_buf, object_buf_t send_buf)$/;"	f	file:
uart_poll	components/io/uart.c	/^static int uart_poll(object_t parent, int timeout)$/;"	f	file:
uart_readbuf	components/io/uart.c	/^int uart_readbuf(object_t parent, char *buffer, int size)$/;"	f
uart_recv	components/io/uart.c	/^static int uart_recv(object_t parent, char *buffer, int size)$/;"	f	file:
uart_send	components/io/uart.c	/^static int uart_send(object_t parent, const char *buffer, const int size)$/;"	f	file:
uart_sendbuf	components/io/uart.c	/^int uart_sendbuf(object_t parent, const char *buffer, const int size)$/;"	f
uart_setting	include/common.h	/^struct uart_setting$/;"	s
uart_state	components/io/uart.c	/^static int uart_state(object_t parent)$/;"	f	file:
ucUtf8	utilities/sqlite3/sqlite3.c	/^static UconvObject ucUtf8 = NULL; \/* convert between UTF-8 and UCS-2 *\/$/;"	v	file:
uclCp	utilities/sqlite3/sqlite3.c	/^static UconvObject uclCp = NULL;  \/* convert between local codepage and UCS-2 *\/$/;"	v	file:
udp_close	components/io/udp.c	/^static void udp_close(object_t parent)$/;"	f	file:
udp_connect	components/io/udp.c	/^static int udp_connect(object_t parent)$/;"	f	file:
udp_info	components/io/udp.c	/^static void udp_info(void)$/;"	f	file:
udp_init	components/io/udp.c	/^static int udp_init(object_t parent, void *info, object_buf_t read_buf, object_buf_t send_buf)$/;"	f	file:
udp_poll	components/io/udp.c	/^static int udp_poll(object_t parent, int timeout)$/;"	f	file:
udp_readbuf	components/io/udp.c	/^int udp_readbuf(object_t parent, char *buffer, int size)$/;"	f
udp_recv	components/io/udp.c	/^static int udp_recv(object_t parent, char *buffer, int size)$/;"	f	file:
udp_send	components/io/udp.c	/^static int udp_send(object_t parent, const char *buffer, const int size)$/;"	f	file:
udp_sendbuf	components/io/udp.c	/^int udp_sendbuf(object_t parent, const char *buffer, const int size)$/;"	f
udp_state	components/io/udp.c	/^static int udp_state(object_t parent)$/;"	f	file:
unLockFlag	utilities/sqlite3/sqlite3.c	/^  unsigned char unLockFlag;         \/* 1 = unlock, 0 = lock *\/$/;"	m	struct:ByteRangeLockPB2	file:
unicodeToMbcs	utilities/sqlite3/sqlite3.c	/^static char *unicodeToMbcs(const WCHAR *zWideFilename){$/;"	f	file:
unicodeToUtf8	utilities/sqlite3/sqlite3.c	/^static char *unicodeToUtf8(const WCHAR *zWideFilename){$/;"	f	file:
unixAccess	utilities/sqlite3/sqlite3.c	/^static int unixAccess($/;"	f	file:
unixCheckReservedLock	utilities/sqlite3/sqlite3.c	/^static int unixCheckReservedLock(sqlite3_file *id, int *pResOut){$/;"	f	file:
unixClose	utilities/sqlite3/sqlite3.c	/^static int unixClose(sqlite3_file *id){$/;"	f	file:
unixCurrentTime	utilities/sqlite3/sqlite3.c	/^static int unixCurrentTime(sqlite3_vfs *NotUsed, double *prNow){$/;"	f	file:
unixCurrentTimeInt64	utilities/sqlite3/sqlite3.c	/^static int unixCurrentTimeInt64(sqlite3_vfs *NotUsed, sqlite3_int64 *piNow){$/;"	f	file:
unixDelete	utilities/sqlite3/sqlite3.c	/^static int unixDelete($/;"	f	file:
unixDeviceCharacteristics	utilities/sqlite3/sqlite3.c	/^static int unixDeviceCharacteristics(sqlite3_file *NotUsed){$/;"	f	file:
unixDlClose	utilities/sqlite3/sqlite3.c	/^static void unixDlClose(sqlite3_vfs *NotUsed, void *pHandle){$/;"	f	file:
unixDlClose	utilities/sqlite3/sqlite3.c	29910;"	d	file:
unixDlError	utilities/sqlite3/sqlite3.c	/^static void unixDlError(sqlite3_vfs *NotUsed, int nBuf, char *zBufOut){$/;"	f	file:
unixDlError	utilities/sqlite3/sqlite3.c	29908;"	d	file:
unixDlOpen	utilities/sqlite3/sqlite3.c	/^static void *unixDlOpen(sqlite3_vfs *NotUsed, const char *zFilename){$/;"	f	file:
unixDlOpen	utilities/sqlite3/sqlite3.c	29907;"	d	file:
unixDlSym	utilities/sqlite3/sqlite3.c	/^static void (*unixDlSym(sqlite3_vfs *NotUsed, void *p, const char*zSym))(void){$/;"	f	file:
unixDlSym	utilities/sqlite3/sqlite3.c	29909;"	d	file:
unixEnterMutex	utilities/sqlite3/sqlite3.c	/^static void unixEnterMutex(void){$/;"	f	file:
unixFile	utilities/sqlite3/sqlite3.c	/^struct unixFile {$/;"	s	file:
unixFile	utilities/sqlite3/sqlite3.c	/^typedef struct unixFile unixFile;$/;"	t	typeref:struct:unixFile	file:
unixFileControl	utilities/sqlite3/sqlite3.c	/^static int unixFileControl(sqlite3_file *id, int op, void *pArg){$/;"	f	file:
unixFileId	utilities/sqlite3/sqlite3.c	/^struct unixFileId {$/;"	s	file:
unixFileLock	utilities/sqlite3/sqlite3.c	/^static int unixFileLock(unixFile *pFile, struct flock *pLock){$/;"	f	file:
unixFileSize	utilities/sqlite3/sqlite3.c	/^static int unixFileSize(sqlite3_file *id, i64 *pSize){$/;"	f	file:
unixFullPathname	utilities/sqlite3/sqlite3.c	/^static int unixFullPathname($/;"	f	file:
unixGetLastError	utilities/sqlite3/sqlite3.c	/^static int unixGetLastError(sqlite3_vfs *NotUsed, int NotUsed2, char *NotUsed3){$/;"	f	file:
unixGetSystemCall	utilities/sqlite3/sqlite3.c	/^static sqlite3_syscall_ptr unixGetSystemCall($/;"	f	file:
unixGetTempname	utilities/sqlite3/sqlite3.c	/^static int unixGetTempname(int nBuf, char *zBuf){$/;"	f	file:
unixInodeInfo	utilities/sqlite3/sqlite3.c	/^struct unixInodeInfo {$/;"	s	file:
unixInodeInfo	utilities/sqlite3/sqlite3.c	/^typedef struct unixInodeInfo unixInodeInfo;   \/* An i-node *\/$/;"	t	typeref:struct:unixInodeInfo	file:
unixLeaveMutex	utilities/sqlite3/sqlite3.c	/^static void unixLeaveMutex(void){$/;"	f	file:
unixLock	utilities/sqlite3/sqlite3.c	/^static int unixLock(sqlite3_file *id, int eFileLock){$/;"	f	file:
unixLogError	utilities/sqlite3/sqlite3.c	25574;"	d	file:
unixLogErrorAtLine	utilities/sqlite3/sqlite3.c	/^static int unixLogErrorAtLine($/;"	f	file:
unixMutexHeld	utilities/sqlite3/sqlite3.c	/^static int unixMutexHeld(void) {$/;"	f	file:
unixNextSystemCall	utilities/sqlite3/sqlite3.c	/^static const char *unixNextSystemCall(sqlite3_vfs *p, const char *zName){$/;"	f	file:
unixOpen	utilities/sqlite3/sqlite3.c	/^static int unixOpen($/;"	f	file:
unixOpenSharedMemory	utilities/sqlite3/sqlite3.c	/^static int unixOpenSharedMemory(unixFile *pDbFd){$/;"	f	file:
unixRandomness	utilities/sqlite3/sqlite3.c	/^static int unixRandomness(sqlite3_vfs *NotUsed, int nBuf, char *zBuf){$/;"	f	file:
unixRead	utilities/sqlite3/sqlite3.c	/^static int unixRead($/;"	f	file:
unixSectorSize	utilities/sqlite3/sqlite3.c	/^static int unixSectorSize(sqlite3_file *NotUsed){$/;"	f	file:
unixSetSystemCall	utilities/sqlite3/sqlite3.c	/^static int unixSetSystemCall($/;"	f	file:
unixShm	utilities/sqlite3/sqlite3.c	/^struct unixShm {$/;"	s	file:
unixShm	utilities/sqlite3/sqlite3.c	/^typedef struct unixShm unixShm;               \/* Connection shared memory *\/$/;"	t	typeref:struct:unixShm	file:
unixShmBarrier	utilities/sqlite3/sqlite3.c	/^static void unixShmBarrier($/;"	f	file:
unixShmBarrier	utilities/sqlite3/sqlite3.c	28798;"	d	file:
unixShmLock	utilities/sqlite3/sqlite3.c	/^static int unixShmLock($/;"	f	file:
unixShmLock	utilities/sqlite3/sqlite3.c	28797;"	d	file:
unixShmMap	utilities/sqlite3/sqlite3.c	/^static int unixShmMap($/;"	f	file:
unixShmMap	utilities/sqlite3/sqlite3.c	28796;"	d	file:
unixShmNode	utilities/sqlite3/sqlite3.c	/^struct unixShmNode {$/;"	s	file:
unixShmNode	utilities/sqlite3/sqlite3.c	/^typedef struct unixShmNode unixShmNode;       \/* Shared memory instance *\/$/;"	t	typeref:struct:unixShmNode	file:
unixShmPurge	utilities/sqlite3/sqlite3.c	/^static void unixShmPurge(unixFile *pFd){$/;"	f	file:
unixShmSystemLock	utilities/sqlite3/sqlite3.c	/^static int unixShmSystemLock($/;"	f	file:
unixShmUnmap	utilities/sqlite3/sqlite3.c	/^static int unixShmUnmap($/;"	f	file:
unixShmUnmap	utilities/sqlite3/sqlite3.c	28799;"	d	file:
unixSleep	utilities/sqlite3/sqlite3.c	/^static int unixSleep(sqlite3_vfs *NotUsed, int microseconds){$/;"	f	file:
unixSync	utilities/sqlite3/sqlite3.c	/^static int unixSync(sqlite3_file *id, int flags){$/;"	f	file:
unixTempFileDir	utilities/sqlite3/sqlite3.c	/^static const char *unixTempFileDir(void){$/;"	f	file:
unixTruncate	utilities/sqlite3/sqlite3.c	/^static int unixTruncate(sqlite3_file *id, i64 nByte){$/;"	f	file:
unixUnlock	utilities/sqlite3/sqlite3.c	/^static int unixUnlock(sqlite3_file *id, int eFileLock){$/;"	f	file:
unixWrite	utilities/sqlite3/sqlite3.c	/^static int unixWrite($/;"	f	file:
unix_syscall	utilities/sqlite3/sqlite3.c	/^static struct unix_syscall {$/;"	s	file:
unlikely	utilities/sqlite3/sqlite3.c	542;"	d	file:
unlikely	utilities/sqlite3/sqlite3.c	545;"	d	file:
unlockBtreeIfUnused	utilities/sqlite3/sqlite3.c	/^static void unlockBtreeIfUnused(BtShared *pBt){$/;"	f	file:
unlockBtreeMutex	utilities/sqlite3/sqlite3.c	/^static void unlockBtreeMutex(Btree *p){$/;"	f	file:
unlockReadLock	utilities/sqlite3/sqlite3.c	/^static int unlockReadLock( os2File *id ){$/;"	f	file:
unlockReadLock	utilities/sqlite3/sqlite3.c	/^static int unlockReadLock(winFile *pFile){$/;"	f	file:
unlock_notify	utilities/sqlite3/sqlite3.c	/^  int (*unlock_notify)(sqlite3*,void(*)(void**,int),void*);$/;"	m	struct:sqlite3_api_routines	file:
untestedTerms	utilities/sqlite3/sqlite3.c	/^  u8 untestedTerms;    \/* Not all WHERE terms resolved by outer loop *\/$/;"	m	struct:WhereInfo	file:
unused	utilities/sqlite3/sqlite3.c	/^  u32 unused;                     \/* Unused (padding) field *\/$/;"	m	struct:WalIndexHdr	file:
updateAccumulator	utilities/sqlite3/sqlite3.c	/^static void updateAccumulator(Parse *pParse, AggInfo *pAggInfo){$/;"	f	file:
updateMapping	utilities/sqlite3/sqlite3.c	/^static int updateMapping($/;"	f	file:
updateMaxBlobsize	utilities/sqlite3/sqlite3.c	/^static void updateMaxBlobsize(Mem *p){$/;"	f	file:
updateVirtualTable	utilities/sqlite3/sqlite3.c	/^static void updateVirtualTable($/;"	f	file:
update_hook	utilities/sqlite3/sqlite3.c	/^  void * (*update_hook)(sqlite3*,void(*)(void*,int ,char const*,char const*,sqlite_int64),void*);$/;"	m	struct:sqlite3_api_routines	file:
upperFunc	utilities/sqlite3/sqlite3.c	/^static void upperFunc(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
usable	utilities/sqlite3/sqlite3.c	/^     unsigned char usable;     \/* True if this constraint is usable *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint	file:
usable	utilities/sqlite3/sqlite3.h	/^     unsigned char usable;     \/* True if this constraint is usable *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint
usableSize	utilities/sqlite3/sqlite3.c	/^  u32 usableSize;       \/* Number of usable bytes on each page *\/$/;"	m	struct:BtShared	file:
useJournal	utilities/sqlite3/sqlite3.c	/^  u8 useJournal;              \/* Use a rollback journal on this file *\/$/;"	m	struct:Pager	file:
useMalloc	utilities/sqlite3/sqlite3.c	/^  u8   useMalloc;      \/* 0: none,  1: sqlite3DbMalloc,  2: sqlite3_malloc *\/$/;"	m	struct:StrAccum	file:
useRandomRowid	utilities/sqlite3/sqlite3.c	/^  Bool useRandomRowid;  \/* Generate new record numbers semi-randomly *\/$/;"	m	struct:VdbeCursor	file:
useSortingIdx	utilities/sqlite3/sqlite3.c	/^  u8 useSortingIdx;       \/* In direct mode, reference the sorting index rather$/;"	m	struct:AggInfo	file:
used	utilities/sqlite3/sqlite3.c	/^  Bitmask used;      \/* Bitmask of cursors used by this plan *\/$/;"	m	struct:WhereCost	file:
usedAsColumnCache	utilities/sqlite3/sqlite3.c	/^static int usedAsColumnCache(Parse *pParse, int iFrom, int iTo){$/;"	f	file:
user_data	include/def.h	/^	void *user_data;$/;"	m	struct:object_io
user_data	utilities/sqlite3/sqlite3.c	/^  void * (*user_data)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines	file:
usesStmtJournal	utilities/sqlite3/sqlite3.c	/^  u8 usesStmtJournal;     \/* True if uses a statement journal *\/$/;"	m	struct:Vdbe	file:
utf8ToUnicode	utilities/sqlite3/sqlite3.c	/^static WCHAR *utf8ToUnicode(const char *zFilename){$/;"	f	file:
utf8_2_gbk	utilities/common/iconv.c	/^int utf8_2_gbk(char *inbuf, size_t inlen, char *outbuf, size_t outlen)$/;"	f
v	utilities/sqlite3/sqlite3.c	/^  Vdbe *v;                   \/* Vdbe to iterate through the opcodes of *\/$/;"	m	struct:VdbeOpIter	file:
v	utilities/sqlite3/sqlite3.c	/^  Vdbe *v;                \/* VM this frame belongs to *\/$/;"	m	struct:VdbeFrame	file:
v	utilities/sqlite3/sqlite3.c	/^  i64 v;                        \/* ROWID value for this entry *\/$/;"	m	struct:RowSetEntry	file:
vacuumFinalize	utilities/sqlite3/sqlite3.c	/^static int vacuumFinalize(sqlite3 *db, sqlite3_stmt *pStmt, char **pzErrMsg){$/;"	f	file:
val	utilities/common/sem.c	/^	int              val;    \/* Value for SETVAL *\/$/;"	m	union:semun	file:
validHMS	utilities/sqlite3/sqlite3.c	/^  char validHMS;     \/* True (1) if h,m,s are valid *\/$/;"	m	struct:DateTime	file:
validJD	utilities/sqlite3/sqlite3.c	/^  char validJD;      \/* True (1) if iJD is valid *\/$/;"	m	struct:DateTime	file:
validNKey	utilities/sqlite3/sqlite3.c	/^  u8 validNKey;             \/* True if info.nKey is valid *\/$/;"	m	struct:BtCursor	file:
validTZ	utilities/sqlite3/sqlite3.c	/^  char validTZ;      \/* True (1) if tz is valid *\/$/;"	m	struct:DateTime	file:
validYMD	utilities/sqlite3/sqlite3.c	/^  char validYMD;     \/* True (1) if Y,M,D are valid *\/$/;"	m	struct:DateTime	file:
value	utilities/sqlite3/sqlite3.c	/^  struct {int value; int mask;} yy215;$/;"	m	struct:__anon24::__anon25	file:
valueFromExpr	utilities/sqlite3/sqlite3.c	/^static int valueFromExpr($/;"	f	file:
value_blob	utilities/sqlite3/sqlite3.c	/^  const void * (*value_blob)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_bytes	utilities/sqlite3/sqlite3.c	/^  int  (*value_bytes)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_bytes16	utilities/sqlite3/sqlite3.c	/^  int  (*value_bytes16)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_double	utilities/sqlite3/sqlite3.c	/^  double  (*value_double)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_int	utilities/sqlite3/sqlite3.c	/^  int  (*value_int)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_int64	utilities/sqlite3/sqlite3.c	/^  sqlite_int64  (*value_int64)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_numeric_type	utilities/sqlite3/sqlite3.c	/^  int  (*value_numeric_type)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_text	utilities/sqlite3/sqlite3.c	/^  const unsigned char * (*value_text)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_text16	utilities/sqlite3/sqlite3.c	/^  const void * (*value_text16)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_text16be	utilities/sqlite3/sqlite3.c	/^  const void * (*value_text16be)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_text16le	utilities/sqlite3/sqlite3.c	/^  const void * (*value_text16le)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_type	utilities/sqlite3/sqlite3.c	/^  int  (*value_type)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
vdbeCommit	utilities/sqlite3/sqlite3.c	/^static int vdbeCommit(sqlite3 *db, Vdbe *p){$/;"	f	file:
vdbeExecCnt	utilities/sqlite3/sqlite3.c	/^  int vdbeExecCnt;              \/* Number of nested calls to VdbeExec() *\/$/;"	m	struct:sqlite3	file:
vdbeFreeOpArray	utilities/sqlite3/sqlite3.c	/^static void vdbeFreeOpArray(sqlite3 *db, Op *aOp, int nOp){$/;"	f	file:
vdbeSafety	utilities/sqlite3/sqlite3.c	/^static int vdbeSafety(Vdbe *p){$/;"	f	file:
vdbeSafetyNotNull	utilities/sqlite3/sqlite3.c	/^static int vdbeSafetyNotNull(Vdbe *p){$/;"	f	file:
vdbeSorterCompare	utilities/sqlite3/sqlite3.c	/^static void vdbeSorterCompare($/;"	f	file:
vdbeSorterDoCompare	utilities/sqlite3/sqlite3.c	/^static int vdbeSorterDoCompare(VdbeCursor *pCsr, int iOut){$/;"	f	file:
vdbeSorterInitMerge	utilities/sqlite3/sqlite3.c	/^static int vdbeSorterInitMerge($/;"	f	file:
vdbeSorterIterInit	utilities/sqlite3/sqlite3.c	/^static int vdbeSorterIterInit($/;"	f	file:
vdbeSorterIterNext	utilities/sqlite3/sqlite3.c	/^static int vdbeSorterIterNext($/;"	f	file:
vdbeSorterIterZero	utilities/sqlite3/sqlite3.c	/^static void vdbeSorterIterZero(sqlite3 *db, VdbeSorterIter *pIter){$/;"	f	file:
vdbeSorterListToPMA	utilities/sqlite3/sqlite3.c	/^static int vdbeSorterListToPMA(sqlite3 *db, VdbeCursor *pCsr){$/;"	f	file:
vdbeSorterMerge	utilities/sqlite3/sqlite3.c	/^static void vdbeSorterMerge($/;"	f	file:
vdbeSorterOpenTempFile	utilities/sqlite3/sqlite3.c	/^static int vdbeSorterOpenTempFile(sqlite3 *db, sqlite3_file **ppFile){$/;"	f	file:
vdbeSorterReadVarint	utilities/sqlite3/sqlite3.c	/^static int vdbeSorterReadVarint($/;"	f	file:
vdbeSorterRecordFree	utilities/sqlite3/sqlite3.c	/^static void vdbeSorterRecordFree(sqlite3 *db, SorterRecord *pRecord){$/;"	f	file:
vdbeSorterRowkey	utilities/sqlite3/sqlite3.c	/^static void *vdbeSorterRowkey($/;"	f	file:
vdbeSorterSort	utilities/sqlite3/sqlite3.c	/^static int vdbeSorterSort(VdbeCursor *pCsr){$/;"	f	file:
vdbeSorterWriteVarint	utilities/sqlite3/sqlite3.c	/^static int vdbeSorterWriteVarint($/;"	f	file:
vdbeUnbind	utilities/sqlite3/sqlite3.c	/^static int vdbeUnbind(Vdbe *p, int i){$/;"	f	file:
versionFunc	utilities/sqlite3/sqlite3.c	/^static void versionFunc($/;"	f	file:
vfsFlags	utilities/sqlite3/sqlite3.c	/^  u32 vfsFlags;               \/* Flags for sqlite3_vfs.xOpen() *\/$/;"	m	struct:Pager	file:
vfsList	utilities/sqlite3/sqlite3.c	/^static sqlite3_vfs * SQLITE_WSD vfsList = 0;$/;"	v	file:
vfsList	utilities/sqlite3/sqlite3.c	14577;"	d	file:
vfsUnlink	utilities/sqlite3/sqlite3.c	/^static void vfsUnlink(sqlite3_vfs *pVfs){$/;"	f	file:
vfs_find	utilities/sqlite3/sqlite3.c	/^  sqlite3_vfs *(*vfs_find)(const char*);$/;"	m	struct:sqlite3_api_routines	file:
vfs_register	utilities/sqlite3/sqlite3.c	/^  int (*vfs_register)(sqlite3_vfs*,int);$/;"	m	struct:sqlite3_api_routines	file:
vfs_unregister	utilities/sqlite3/sqlite3.c	/^  int (*vfs_unregister)(sqlite3_vfs*);$/;"	m	struct:sqlite3_api_routines	file:
vmask	utilities/sqlite3/sqlite3.c	/^  Bitmask vmask;           \/* Bitmask identifying virtual table cursors *\/$/;"	m	struct:WhereClause	file:
vmprintf	utilities/sqlite3/sqlite3.c	/^  char *(*vmprintf)(const char*,va_list);$/;"	m	struct:sqlite3_api_routines	file:
vtabBestIndex	utilities/sqlite3/sqlite3.c	/^static int vtabBestIndex(Parse *pParse, Table *pTab, sqlite3_index_info *p){$/;"	f	file:
vtabCallConstructor	utilities/sqlite3/sqlite3.c	/^static int vtabCallConstructor($/;"	f	file:
vtabDisconnectAll	utilities/sqlite3/sqlite3.c	/^static VTable *vtabDisconnectAll(sqlite3 *db, Table *p){$/;"	f	file:
vtabOnConflict	utilities/sqlite3/sqlite3.c	/^  u8 vtabOnConflict;            \/* Value to return for s3_vtab_on_conflict() *\/$/;"	m	struct:sqlite3	file:
vtab_config	utilities/sqlite3/sqlite3.c	/^  int (*vtab_config)(sqlite3*,int op,...);$/;"	m	struct:sqlite3_api_routines	file:
vtab_on_conflict	utilities/sqlite3/sqlite3.c	/^  int (*vtab_on_conflict)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
vxworksFileId	utilities/sqlite3/sqlite3.c	/^struct vxworksFileId {$/;"	s	file:
vxworksFileList	utilities/sqlite3/sqlite3.c	/^static struct vxworksFileId *vxworksFileList = 0;$/;"	v	typeref:struct:vxworksFileId	file:
vxworksFindFileId	utilities/sqlite3/sqlite3.c	/^static struct vxworksFileId *vxworksFindFileId(const char *zAbsoluteName){$/;"	f	file:
vxworksReleaseFileId	utilities/sqlite3/sqlite3.c	/^static void vxworksReleaseFileId(struct vxworksFileId *pId){$/;"	f	file:
vxworksSimplifyName	utilities/sqlite3/sqlite3.c	/^static int vxworksSimplifyName(char *z, int n){$/;"	f	file:
w_ser	utilities/modbus/modbus-rtu-private.h	/^    struct win32_ser w_ser;$/;"	m	struct:_modbus_rtu	typeref:struct:_modbus_rtu::win32_ser
wait	include/def.h	/^	sem_t wait;$/;"	m	struct:msgqueue
walBusyLock	utilities/sqlite3/sqlite3.c	/^static int walBusyLock($/;"	f	file:
walCheckpoint	utilities/sqlite3/sqlite3.c	/^static int walCheckpoint($/;"	f	file:
walChecksumBytes	utilities/sqlite3/sqlite3.c	/^static void walChecksumBytes($/;"	f	file:
walCkptInfo	utilities/sqlite3/sqlite3.c	/^static volatile WalCkptInfo *walCkptInfo(Wal *pWal){$/;"	f	file:
walCleanupHash	utilities/sqlite3/sqlite3.c	/^static void walCleanupHash(Wal *pWal){$/;"	f	file:
walDecodeFrame	utilities/sqlite3/sqlite3.c	/^static int walDecodeFrame($/;"	f	file:
walEncodeFrame	utilities/sqlite3/sqlite3.c	/^static void walEncodeFrame($/;"	f	file:
walFrameOffset	utilities/sqlite3/sqlite3.c	44767;"	d	file:
walFramePage	utilities/sqlite3/sqlite3.c	/^static int walFramePage(u32 iFrame){$/;"	f	file:
walFramePgno	utilities/sqlite3/sqlite3.c	/^static u32 walFramePgno(Wal *pWal, u32 iFrame){$/;"	f	file:
walHash	utilities/sqlite3/sqlite3.c	/^static int walHash(u32 iPage){$/;"	f	file:
walHashGet	utilities/sqlite3/sqlite3.c	/^static int walHashGet($/;"	f	file:
walIndexAppend	utilities/sqlite3/sqlite3.c	/^static int walIndexAppend(Wal *pWal, u32 iFrame, u32 iPage){$/;"	f	file:
walIndexClose	utilities/sqlite3/sqlite3.c	/^static void walIndexClose(Wal *pWal, int isDelete){$/;"	f	file:
walIndexHdr	utilities/sqlite3/sqlite3.c	/^static volatile WalIndexHdr *walIndexHdr(Wal *pWal){$/;"	f	file:
walIndexPage	utilities/sqlite3/sqlite3.c	/^static int walIndexPage(Wal *pWal, int iPage, volatile u32 **ppPage){$/;"	f	file:
walIndexReadHdr	utilities/sqlite3/sqlite3.c	/^static int walIndexReadHdr(Wal *pWal, int *pChanged){$/;"	f	file:
walIndexRecover	utilities/sqlite3/sqlite3.c	/^static int walIndexRecover(Wal *pWal){$/;"	f	file:
walIndexTryHdr	utilities/sqlite3/sqlite3.c	/^static int walIndexTryHdr(Wal *pWal, int *pChanged){$/;"	f	file:
walIndexWriteHdr	utilities/sqlite3/sqlite3.c	/^static void walIndexWriteHdr(Wal *pWal){$/;"	f	file:
walIteratorFree	utilities/sqlite3/sqlite3.c	/^static void walIteratorFree(WalIterator *p){$/;"	f	file:
walIteratorInit	utilities/sqlite3/sqlite3.c	/^static int walIteratorInit(Wal *pWal, WalIterator **pp){$/;"	f	file:
walIteratorNext	utilities/sqlite3/sqlite3.c	/^static int walIteratorNext($/;"	f	file:
walLockExclusive	utilities/sqlite3/sqlite3.c	/^static int walLockExclusive(Wal *pWal, int lockIdx, int n){$/;"	f	file:
walLockName	utilities/sqlite3/sqlite3.c	/^static const char *walLockName(int lockIdx){$/;"	f	file:
walLockShared	utilities/sqlite3/sqlite3.c	/^static int walLockShared(Wal *pWal, int lockIdx){$/;"	f	file:
walMerge	utilities/sqlite3/sqlite3.c	/^static void walMerge($/;"	f	file:
walMergesort	utilities/sqlite3/sqlite3.c	/^static void walMergesort($/;"	f	file:
walNextHash	utilities/sqlite3/sqlite3.c	/^static int walNextHash(int iPriorHash){$/;"	f	file:
walPagesize	utilities/sqlite3/sqlite3.c	/^static int walPagesize(Wal *pWal){$/;"	f	file:
walRestartLog	utilities/sqlite3/sqlite3.c	/^static int walRestartLog(Wal *pWal){$/;"	f	file:
walShmBarrier	utilities/sqlite3/sqlite3.c	/^static void walShmBarrier(Wal *pWal){$/;"	f	file:
walTryBeginRead	utilities/sqlite3/sqlite3.c	/^static int walTryBeginRead(Wal *pWal, int *pChanged, int useWal, int cnt){$/;"	f	file:
walUnlockExclusive	utilities/sqlite3/sqlite3.c	/^static void walUnlockExclusive(Wal *pWal, int lockIdx, int n){$/;"	f	file:
walUnlockShared	utilities/sqlite3/sqlite3.c	/^static void walUnlockShared(Wal *pWal, int lockIdx){$/;"	f	file:
wal_autocheckpoint	utilities/sqlite3/sqlite3.c	/^  int (*wal_autocheckpoint)(sqlite3*,int);$/;"	m	struct:sqlite3_api_routines	file:
wal_checkpoint	utilities/sqlite3/sqlite3.c	/^  int (*wal_checkpoint)(sqlite3*,const char*);$/;"	m	struct:sqlite3_api_routines	file:
wal_hook	utilities/sqlite3/sqlite3.c	/^  void *(*wal_hook)(sqlite3*,int(*)(void*,sqlite3*,const char*,int),void*);$/;"	m	struct:sqlite3_api_routines	file:
wantToLock	utilities/sqlite3/sqlite3.c	/^  int wantToLock;    \/* Number of nested calls to sqlite3BtreeEnter() *\/$/;"	m	struct:Btree	file:
wc	utilities/sqlite3/sqlite3.c	/^  WhereClause wc;          \/* Decomposition into subterms *\/$/;"	m	struct:WhereOrInfo	file:
wc	utilities/sqlite3/sqlite3.c	/^  WhereClause wc;          \/* The subexpression broken out *\/$/;"	m	struct:WhereAndInfo	file:
wctrlFlags	utilities/sqlite3/sqlite3.c	/^  u16 wctrlFlags;      \/* Flags originally passed to sqlite3WhereBegin() *\/$/;"	m	struct:WhereInfo	file:
whereAndInfoDelete	utilities/sqlite3/sqlite3.c	/^static void whereAndInfoDelete(sqlite3 *db, WhereAndInfo *p){$/;"	f	file:
whereClauseClear	utilities/sqlite3/sqlite3.c	/^static void whereClauseClear(WhereClause *pWC){$/;"	f	file:
whereClauseInit	utilities/sqlite3/sqlite3.c	/^static void whereClauseInit($/;"	f	file:
whereClauseInsert	utilities/sqlite3/sqlite3.c	/^static int whereClauseInsert(WhereClause *pWC, Expr *p, u8 wtFlags){$/;"	f	file:
whereEqualScanEst	utilities/sqlite3/sqlite3.c	/^static int whereEqualScanEst($/;"	f	file:
whereForeignKeys	utilities/sqlite3/sqlite3.c	/^static char *whereForeignKeys(Parse *pParse, Table *pTab){$/;"	f	file:
whereInScanEst	utilities/sqlite3/sqlite3.c	/^static int whereInScanEst($/;"	f	file:
whereInfoFree	utilities/sqlite3/sqlite3.c	/^static void whereInfoFree(sqlite3 *db, WhereInfo *pWInfo){$/;"	f	file:
whereOrInfoDelete	utilities/sqlite3/sqlite3.c	/^static void whereOrInfoDelete(sqlite3 *db, WhereOrInfo *p){$/;"	f	file:
whereOrName	utilities/sqlite3/sqlite3.c	/^static char *whereOrName(sqlite3 *db, char *zWhere, char *zConstant){$/;"	f	file:
whereRangeRegion	utilities/sqlite3/sqlite3.c	/^static int whereRangeRegion($/;"	f	file:
whereRangeScanEst	utilities/sqlite3/sqlite3.c	/^static int whereRangeScanEst($/;"	f	file:
whereSplit	utilities/sqlite3/sqlite3.c	/^static void whereSplit(WhereClause *pWC, Expr *pExpr, int op){$/;"	f	file:
whereTempTriggers	utilities/sqlite3/sqlite3.c	/^static char *whereTempTriggers(Parse *pParse, Table *pTab){$/;"	f	file:
which	include/common.h	/^	int which;$/;"	m	struct:uart_setting
who	include/version.h	24;"	d
win32IoerrRetry	utilities/sqlite3/sqlite3.c	/^static int win32IoerrRetry = SQLITE_WIN32_IOERR_RETRY;$/;"	v	file:
win32IoerrRetryDelay	utilities/sqlite3/sqlite3.c	/^static int win32IoerrRetryDelay = SQLITE_WIN32_IOERR_RETRY_DELAY;$/;"	v	file:
win32_ser	utilities/modbus/modbus-rtu-private.h	/^struct win32_ser {$/;"	s
win32_ser_init	utilities/modbus/modbus-rtu.c	/^static void win32_ser_init(struct win32_ser *ws) {$/;"	f	file:
win32_ser_read	utilities/modbus/modbus-rtu.c	/^static int win32_ser_read(struct win32_ser *ws, uint8_t *p_msg,$/;"	f	file:
win32_ser_select	utilities/modbus/modbus-rtu.c	/^static int win32_ser_select(struct win32_ser *ws, int max_len,$/;"	f	file:
winAccess	utilities/sqlite3/sqlite3.c	/^static int winAccess($/;"	f	file:
winCheckReservedLock	utilities/sqlite3/sqlite3.c	/^static int winCheckReservedLock(sqlite3_file *id, int *pResOut){$/;"	f	file:
winClose	utilities/sqlite3/sqlite3.c	/^static int winClose(sqlite3_file *id){$/;"	f	file:
winCurrentTime	utilities/sqlite3/sqlite3.c	/^int winCurrentTime(sqlite3_vfs *pVfs, double *prNow){$/;"	f
winCurrentTimeInt64	utilities/sqlite3/sqlite3.c	/^static int winCurrentTimeInt64(sqlite3_vfs *pVfs, sqlite3_int64 *piNow){$/;"	f	file:
winDelete	utilities/sqlite3/sqlite3.c	/^static int winDelete($/;"	f	file:
winDeviceCharacteristics	utilities/sqlite3/sqlite3.c	/^static int winDeviceCharacteristics(sqlite3_file *id){$/;"	f	file:
winDlClose	utilities/sqlite3/sqlite3.c	/^void winDlClose(sqlite3_vfs *pVfs, void *pHandle){$/;"	f
winDlClose	utilities/sqlite3/sqlite3.c	34559;"	d	file:
winDlError	utilities/sqlite3/sqlite3.c	/^static void winDlError(sqlite3_vfs *pVfs, int nBuf, char *zBufOut){$/;"	f	file:
winDlError	utilities/sqlite3/sqlite3.c	34557;"	d	file:
winDlOpen	utilities/sqlite3/sqlite3.c	/^static void *winDlOpen(sqlite3_vfs *pVfs, const char *zFilename){$/;"	f	file:
winDlOpen	utilities/sqlite3/sqlite3.c	34556;"	d	file:
winDlSym	utilities/sqlite3/sqlite3.c	/^void (*winDlSym(sqlite3_vfs *pVfs, void *pHandle, const char *zSymbol))(void){$/;"	f
winDlSym	utilities/sqlite3/sqlite3.c	34558;"	d	file:
winFile	utilities/sqlite3/sqlite3.c	/^struct winFile {$/;"	s	file:
winFile	utilities/sqlite3/sqlite3.c	/^typedef struct winFile winFile;$/;"	t	typeref:struct:winFile	file:
winFileControl	utilities/sqlite3/sqlite3.c	/^static int winFileControl(sqlite3_file *id, int op, void *pArg){$/;"	f	file:
winFileSize	utilities/sqlite3/sqlite3.c	/^static int winFileSize(sqlite3_file *id, sqlite3_int64 *pSize){$/;"	f	file:
winFullPathname	utilities/sqlite3/sqlite3.c	/^static int winFullPathname($/;"	f	file:
winGetLastError	utilities/sqlite3/sqlite3.c	/^static int winGetLastError(sqlite3_vfs *pVfs, int nBuf, char *zBuf){$/;"	f	file:
winIoMethod	utilities/sqlite3/sqlite3.c	/^static const sqlite3_io_methods winIoMethod = {$/;"	v	file:
winLock	utilities/sqlite3/sqlite3.c	/^static int winLock(sqlite3_file *id, int locktype){$/;"	f	file:
winLogError	utilities/sqlite3/sqlite3.c	32189;"	d	file:
winLogErrorAtLine	utilities/sqlite3/sqlite3.c	/^static int winLogErrorAtLine($/;"	f	file:
winMemAssertMagic	utilities/sqlite3/sqlite3.c	31731;"	d	file:
winMemAssertMagic	utilities/sqlite3/sqlite3.c	31733;"	d	file:
winMemData	utilities/sqlite3/sqlite3.c	/^struct winMemData {$/;"	s	file:
winMemData	utilities/sqlite3/sqlite3.c	/^typedef struct winMemData winMemData;$/;"	t	typeref:struct:winMemData	file:
winMemFree	utilities/sqlite3/sqlite3.c	/^static void winMemFree(void *pPrior){$/;"	f	file:
winMemGetHeap	utilities/sqlite3/sqlite3.c	31736;"	d	file:
winMemInit	utilities/sqlite3/sqlite3.c	/^static int winMemInit(void *pAppData){$/;"	f	file:
winMemMalloc	utilities/sqlite3/sqlite3.c	/^static void *winMemMalloc(int nBytes){$/;"	f	file:
winMemRealloc	utilities/sqlite3/sqlite3.c	/^static void *winMemRealloc(void *pPrior, int nBytes){$/;"	f	file:
winMemRoundup	utilities/sqlite3/sqlite3.c	/^static int winMemRoundup(int n){$/;"	f	file:
winMemShutdown	utilities/sqlite3/sqlite3.c	/^static void winMemShutdown(void *pAppData){$/;"	f	file:
winMemSize	utilities/sqlite3/sqlite3.c	/^static int winMemSize(void *p){$/;"	f	file:
winMutexAlloc	utilities/sqlite3/sqlite3.c	/^static sqlite3_mutex *winMutexAlloc(int iType){$/;"	f	file:
winMutexEnd	utilities/sqlite3/sqlite3.c	/^static int winMutexEnd(void){ $/;"	f	file:
winMutexEnter	utilities/sqlite3/sqlite3.c	/^static void winMutexEnter(sqlite3_mutex *p){$/;"	f	file:
winMutexFree	utilities/sqlite3/sqlite3.c	/^static void winMutexFree(sqlite3_mutex *p){$/;"	f	file:
winMutexHeld	utilities/sqlite3/sqlite3.c	/^static int winMutexHeld(sqlite3_mutex *p){$/;"	f	file:
winMutexInit	utilities/sqlite3/sqlite3.c	/^static int winMutexInit(void){ $/;"	f	file:
winMutexLeave	utilities/sqlite3/sqlite3.c	/^static void winMutexLeave(sqlite3_mutex *p){$/;"	f	file:
winMutexNotheld	utilities/sqlite3/sqlite3.c	/^static int winMutexNotheld(sqlite3_mutex *p){$/;"	f	file:
winMutexNotheld2	utilities/sqlite3/sqlite3.c	/^static int winMutexNotheld2(sqlite3_mutex *p, DWORD tid){$/;"	f	file:
winMutexTry	utilities/sqlite3/sqlite3.c	/^static int winMutexTry(sqlite3_mutex *p){$/;"	f	file:
winMutex_isInit	utilities/sqlite3/sqlite3.c	/^static int winMutex_isInit = 0;$/;"	v	file:
winMutex_lock	utilities/sqlite3/sqlite3.c	/^static long winMutex_lock = 0;$/;"	v	file:
winMutex_staticMutexes	utilities/sqlite3/sqlite3.c	/^static sqlite3_mutex winMutex_staticMutexes[6] = {$/;"	v	file:
winOpen	utilities/sqlite3/sqlite3.c	/^static int winOpen($/;"	f	file:
winOpenSharedMemory	utilities/sqlite3/sqlite3.c	/^static int winOpenSharedMemory(winFile *pDbFd){$/;"	f	file:
winRandomness	utilities/sqlite3/sqlite3.c	/^static int winRandomness(sqlite3_vfs *pVfs, int nBuf, char *zBuf){$/;"	f	file:
winRead	utilities/sqlite3/sqlite3.c	/^static int winRead($/;"	f	file:
winSectorSize	utilities/sqlite3/sqlite3.c	/^static int winSectorSize(sqlite3_file *id){$/;"	f	file:
winShm	utilities/sqlite3/sqlite3.c	/^struct winShm {$/;"	s	file:
winShm	utilities/sqlite3/sqlite3.c	/^typedef struct winShm winShm;           \/* A connection to shared-memory *\/$/;"	t	typeref:struct:winShm	file:
winShmBarrier	utilities/sqlite3/sqlite3.c	/^static void winShmBarrier($/;"	f	file:
winShmBarrier	utilities/sqlite3/sqlite3.c	33865;"	d	file:
winShmEnterMutex	utilities/sqlite3/sqlite3.c	/^static void winShmEnterMutex(void){$/;"	f	file:
winShmLeaveMutex	utilities/sqlite3/sqlite3.c	/^static void winShmLeaveMutex(void){$/;"	f	file:
winShmLock	utilities/sqlite3/sqlite3.c	/^static int winShmLock($/;"	f	file:
winShmLock	utilities/sqlite3/sqlite3.c	33864;"	d	file:
winShmMap	utilities/sqlite3/sqlite3.c	/^static int winShmMap($/;"	f	file:
winShmMap	utilities/sqlite3/sqlite3.c	33863;"	d	file:
winShmMutexHeld	utilities/sqlite3/sqlite3.c	/^static int winShmMutexHeld(void) {$/;"	f	file:
winShmNode	utilities/sqlite3/sqlite3.c	/^struct winShmNode {$/;"	s	file:
winShmNode	utilities/sqlite3/sqlite3.c	/^typedef struct winShmNode winShmNode;   \/* A region of shared-memory *\/$/;"	t	typeref:struct:winShmNode	file:
winShmNodeList	utilities/sqlite3/sqlite3.c	/^static winShmNode *winShmNodeList = 0;$/;"	v	file:
winShmPurge	utilities/sqlite3/sqlite3.c	/^static void winShmPurge(sqlite3_vfs *pVfs, int deleteFlag){$/;"	f	file:
winShmSystemLock	utilities/sqlite3/sqlite3.c	/^static int winShmSystemLock($/;"	f	file:
winShmUnmap	utilities/sqlite3/sqlite3.c	/^static int winShmUnmap($/;"	f	file:
winShmUnmap	utilities/sqlite3/sqlite3.c	33866;"	d	file:
winSleep	utilities/sqlite3/sqlite3.c	/^static int winSleep(sqlite3_vfs *pVfs, int microsec){$/;"	f	file:
winSync	utilities/sqlite3/sqlite3.c	/^static int winSync(sqlite3_file *id, int flags){$/;"	f	file:
winSysInfo	utilities/sqlite3/sqlite3.c	/^SYSTEM_INFO winSysInfo;$/;"	v
winTruncate	utilities/sqlite3/sqlite3.c	/^static int winTruncate(sqlite3_file *id, sqlite3_int64 nByte){$/;"	f	file:
winUnlock	utilities/sqlite3/sqlite3.c	/^static int winUnlock(sqlite3_file *id, int locktype){$/;"	f	file:
winWrite	utilities/sqlite3/sqlite3.c	/^static int winWrite($/;"	f	file:
win_mem_data	utilities/sqlite3/sqlite3.c	/^static struct winMemData win_mem_data = {$/;"	v	typeref:struct:winMemData	file:
winceCreateLock	utilities/sqlite3/sqlite3.c	/^static BOOL winceCreateLock(const char *zFilename, winFile *pFile){$/;"	f	file:
winceDestroyLock	utilities/sqlite3/sqlite3.c	/^static void winceDestroyLock(winFile *pFile){$/;"	f	file:
winceLock	utilities/sqlite3/sqlite3.c	/^typedef struct winceLock {$/;"	s	file:
winceLock	utilities/sqlite3/sqlite3.c	/^} winceLock;$/;"	t	typeref:struct:winceLock	file:
winceLockFile	utilities/sqlite3/sqlite3.c	/^static BOOL winceLockFile($/;"	f	file:
winceLockFileEx	utilities/sqlite3/sqlite3.c	/^static BOOL winceLockFileEx($/;"	f	file:
winceMutexAcquire	utilities/sqlite3/sqlite3.c	/^static void winceMutexAcquire(HANDLE h){$/;"	f	file:
winceMutexRelease	utilities/sqlite3/sqlite3.c	32314;"	d	file:
winceUnlockFile	utilities/sqlite3/sqlite3.c	/^static BOOL winceUnlockFile($/;"	f	file:
wparam	include/def.h	/^	WPARAM wparam;$/;"	m	struct:msg
wrFlag	utilities/sqlite3/sqlite3.c	/^  u8 wrFlag;                \/* True if writable *\/$/;"	m	struct:BtCursor	file:
write32bits	utilities/sqlite3/sqlite3.c	/^static int write32bits(sqlite3_file *fd, i64 offset, u32 val){$/;"	f	file:
writeCoord	utilities/sqlite3/sqlite3.c	/^static int writeCoord(u8 *p, RtreeCoord *pCoord){$/;"	f	file:
writeInt16	utilities/sqlite3/sqlite3.c	/^static int writeInt16(u8 *p, int i){$/;"	f	file:
writeInt64	utilities/sqlite3/sqlite3.c	/^static int writeInt64(u8 *p, i64 i){$/;"	f	file:
writeJournalHdr	utilities/sqlite3/sqlite3.c	/^static int writeJournalHdr(Pager *pPager){$/;"	f	file:
writeLock	utilities/sqlite3/sqlite3.c	/^  u8 writeLock;              \/* True if in a write transaction *\/$/;"	m	struct:Wal	file:
writeMask	utilities/sqlite3/sqlite3.c	/^  yDbMask writeMask;   \/* Start a write transaction on these databases *\/$/;"	m	struct:Parse	file:
writeMasterJournal	utilities/sqlite3/sqlite3.c	/^static int writeMasterJournal(Pager *pPager, const char *zMaster){$/;"	f	file:
writeVdbeCnt	utilities/sqlite3/sqlite3.c	/^  int writeVdbeCnt;             \/* Number of active VDBEs that are writing *\/$/;"	m	struct:sqlite3	file:
write_pos	include/def.h	/^	int read_pos, write_pos;$/;"	m	struct:object_buf
write_pos	include/def.h	/^	int write_pos;$/;"	m	struct:msgqueue
write_single	utilities/modbus/modbus.c	/^static int write_single(modbus_t *ctx, int function, int addr, int value)$/;"	f	file:
wsFlags	utilities/sqlite3/sqlite3.c	/^  u32 wsFlags;                   \/* WHERE_* flags that describe the strategy *\/$/;"	m	struct:WherePlan	file:
wsdAutoext	utilities/sqlite3/sqlite3.c	89849;"	d	file:
wsdAutoext	utilities/sqlite3/sqlite3.c	89852;"	d	file:
wsdAutoextInit	utilities/sqlite3/sqlite3.c	89847;"	d	file:
wsdAutoextInit	utilities/sqlite3/sqlite3.c	89851;"	d	file:
wsdHooks	utilities/sqlite3/sqlite3.c	14712;"	d	file:
wsdHooks	utilities/sqlite3/sqlite3.c	14715;"	d	file:
wsdHooksInit	utilities/sqlite3/sqlite3.c	14710;"	d	file:
wsdHooksInit	utilities/sqlite3/sqlite3.c	14714;"	d	file:
wsdPrng	utilities/sqlite3/sqlite3.c	19961;"	d	file:
wsdStat	utilities/sqlite3/sqlite3.c	13011;"	d	file:
wsdStat	utilities/sqlite3/sqlite3.c	13014;"	d	file:
wsdStatInit	utilities/sqlite3/sqlite3.c	13010;"	d	file:
wsdStatInit	utilities/sqlite3/sqlite3.c	13013;"	d	file:
wtFlags	utilities/sqlite3/sqlite3.c	/^  u8 wtFlags;             \/* TERM_xxx bit flags.  See below *\/$/;"	m	struct:WhereTerm	file:
x	utilities/sqlite3/sqlite3.c	/^  } x;$/;"	m	struct:Expr	typeref:union:Expr::__anon11	file:
xAccess	utilities/sqlite3/sqlite3.c	/^  int (*xAccess)(sqlite3_vfs*, const char *zName, int flags, int *pResOut);$/;"	m	struct:sqlite3_vfs	file:
xAccess	utilities/sqlite3/sqlite3.h	/^  int (*xAccess)(sqlite3_vfs*, const char *zName, int flags, int *pResOut);$/;"	m	struct:sqlite3_vfs
xAdvance	utilities/sqlite3/sqlite3.c	/^    int (*xAdvance)(BtCursor *, int *);$/;"	m	union:VdbeOp::__anon7	file:
xAuth	utilities/sqlite3/sqlite3.c	/^  int (*xAuth)(void*,int,const char*,const char*,const char*,const char*);$/;"	m	struct:sqlite3	file:
xBacktrace	utilities/sqlite3/sqlite3.c	/^  void (*xBacktrace)(int, int, void **);$/;"	m	struct:__anon18	file:
xBegin	utilities/sqlite3/sqlite3.c	/^  int (*xBegin)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module	file:
xBegin	utilities/sqlite3/sqlite3.h	/^  int (*xBegin)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module
xBenignBegin	utilities/sqlite3/sqlite3.c	/^  void (*xBenignBegin)(void);$/;"	m	struct:BenignMallocHooks	file:
xBenignEnd	utilities/sqlite3/sqlite3.c	/^  void (*xBenignEnd)(void);$/;"	m	struct:BenignMallocHooks	file:
xBestIndex	utilities/sqlite3/sqlite3.c	/^  int (*xBestIndex)(sqlite3_vtab *pVTab, sqlite3_index_info*);$/;"	m	struct:sqlite3_module	file:
xBestIndex	utilities/sqlite3/sqlite3.h	/^  int (*xBestIndex)(sqlite3_vtab *pVTab, sqlite3_index_info*);$/;"	m	struct:sqlite3_module
xBusyHandler	utilities/sqlite3/sqlite3.c	/^  int (*xBusyHandler)(void*); \/* Function to call when busy *\/$/;"	m	struct:Pager	file:
xCachesize	utilities/sqlite3/sqlite3.c	/^  void (*xCachesize)(sqlite3_pcache*, int nCachesize);$/;"	m	struct:sqlite3_pcache_methods	file:
xCachesize	utilities/sqlite3/sqlite3.h	/^  void (*xCachesize)(sqlite3_pcache*, int nCachesize);$/;"	m	struct:sqlite3_pcache_methods
xCheckReservedLock	utilities/sqlite3/sqlite3.c	/^  int (*xCheckReservedLock)(sqlite3_file*, int *pResOut);$/;"	m	struct:sqlite3_io_methods	file:
xCheckReservedLock	utilities/sqlite3/sqlite3.h	/^  int (*xCheckReservedLock)(sqlite3_file*, int *pResOut);$/;"	m	struct:sqlite3_io_methods
xClose	utilities/sqlite3/sqlite3.c	/^  int (*xClose)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods	file:
xClose	utilities/sqlite3/sqlite3.c	/^  int (*xClose)(sqlite3_tokenizer_cursor *pCursor);$/;"	m	struct:sqlite3_tokenizer_module	file:
xClose	utilities/sqlite3/sqlite3.c	/^  int (*xClose)(sqlite3_vtab_cursor*);$/;"	m	struct:sqlite3_module	file:
xClose	utilities/sqlite3/sqlite3.h	/^  int (*xClose)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods
xClose	utilities/sqlite3/sqlite3.h	/^  int (*xClose)(sqlite3_vtab_cursor*);$/;"	m	struct:sqlite3_module
xCmp	utilities/sqlite3/sqlite3.c	/^  int (*xCmp)(void*,int, const void*, int, const void*);$/;"	m	struct:CollSeq	file:
xCodec	utilities/sqlite3/sqlite3.c	/^  void *(*xCodec)(void*,void*,Pgno,int); \/* Routine for en\/decoding data *\/$/;"	m	struct:Pager	file:
xCodecFree	utilities/sqlite3/sqlite3.c	/^  void (*xCodecFree)(void*);             \/* Destructor for the codec *\/$/;"	m	struct:Pager	file:
xCodecSizeChng	utilities/sqlite3/sqlite3.c	/^  void (*xCodecSizeChng)(void*,int,int); \/* Notify of page size changes *\/$/;"	m	struct:Pager	file:
xCollNeeded	utilities/sqlite3/sqlite3.c	/^  void(*xCollNeeded)(void*,sqlite3*,int eTextRep,const char*);$/;"	m	struct:sqlite3	file:
xCollNeeded16	utilities/sqlite3/sqlite3.c	/^  void(*xCollNeeded16)(void*,sqlite3*,int eTextRep,const void*);$/;"	m	struct:sqlite3	file:
xColumn	utilities/sqlite3/sqlite3.c	/^  int (*xColumn)(sqlite3_vtab_cursor*, sqlite3_context*, int);$/;"	m	struct:sqlite3_module	file:
xColumn	utilities/sqlite3/sqlite3.h	/^  int (*xColumn)(sqlite3_vtab_cursor*, sqlite3_context*, int);$/;"	m	struct:sqlite3_module
xCommit	utilities/sqlite3/sqlite3.c	/^  int (*xCommit)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module	file:
xCommit	utilities/sqlite3/sqlite3.h	/^  int (*xCommit)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module
xCommitCallback	utilities/sqlite3/sqlite3.c	/^  int (*xCommitCallback)(void*);    \/* Invoked at every commit. *\/$/;"	m	struct:sqlite3	file:
xConnect	utilities/sqlite3/sqlite3.c	/^  int (*xConnect)(sqlite3*, void *pAux,$/;"	m	struct:sqlite3_module	file:
xConnect	utilities/sqlite3/sqlite3.h	/^  int (*xConnect)(sqlite3*, void *pAux,$/;"	m	struct:sqlite3_module
xCreate	utilities/sqlite3/sqlite3.c	/^  int (*xCreate)($/;"	m	struct:sqlite3_tokenizer_module	file:
xCreate	utilities/sqlite3/sqlite3.c	/^  int (*xCreate)(sqlite3*, void *pAux,$/;"	m	struct:sqlite3_module	file:
xCreate	utilities/sqlite3/sqlite3.c	/^  sqlite3_pcache *(*xCreate)(int szPage, int bPurgeable);$/;"	m	struct:sqlite3_pcache_methods	file:
xCreate	utilities/sqlite3/sqlite3.h	/^  int (*xCreate)(sqlite3*, void *pAux,$/;"	m	struct:sqlite3_module
xCreate	utilities/sqlite3/sqlite3.h	/^  sqlite3_pcache *(*xCreate)(int szPage, int bPurgeable);$/;"	m	struct:sqlite3_pcache_methods
xCurrentTime	utilities/sqlite3/sqlite3.c	/^  int (*xCurrentTime)(sqlite3_vfs*, double*);$/;"	m	struct:sqlite3_vfs	file:
xCurrentTime	utilities/sqlite3/sqlite3.h	/^  int (*xCurrentTime)(sqlite3_vfs*, double*);$/;"	m	struct:sqlite3_vfs
xCurrentTimeInt64	utilities/sqlite3/sqlite3.c	/^  int (*xCurrentTimeInt64)(sqlite3_vfs*, sqlite3_int64*);$/;"	m	struct:sqlite3_vfs	file:
xCurrentTimeInt64	utilities/sqlite3/sqlite3.h	/^  int (*xCurrentTimeInt64)(sqlite3_vfs*, sqlite3_int64*);$/;"	m	struct:sqlite3_vfs
xDel	utilities/sqlite3/sqlite3.c	/^  void (*xDel)(void *);  \/* If not null, call this function to delete Mem.z *\/$/;"	m	struct:Mem	file:
xDel	utilities/sqlite3/sqlite3.c	/^  void (*xDel)(void*);  \/* Destructor for pUser *\/$/;"	m	struct:CollSeq	file:
xDelUser	utilities/sqlite3/sqlite3.c	/^  void (*xDelUser)(void *);       \/* Called by SQLite to clean up pUser *\/$/;"	m	struct:sqlite3_rtree_geometry	file:
xDelUser	utilities/sqlite3/sqlite3.h	/^  void (*xDelUser)(void *);       \/* Called by SQLite to clean up pUser *\/$/;"	m	struct:sqlite3_rtree_geometry
xDelete	utilities/sqlite3/sqlite3.c	/^    void (*xDelete)(void *);      \/* Destructor for the aux data *\/$/;"	m	struct:VdbeFunc::AuxData	file:
xDelete	utilities/sqlite3/sqlite3.c	/^  int (*xDelete)(sqlite3_vfs*, const char *zName, int syncDir);$/;"	m	struct:sqlite3_vfs	file:
xDelete	utilities/sqlite3/sqlite3.h	/^  int (*xDelete)(sqlite3_vfs*, const char *zName, int syncDir);$/;"	m	struct:sqlite3_vfs
xDestroy	utilities/sqlite3/sqlite3.c	/^  int (*xDestroy)(sqlite3_tokenizer *pTokenizer);$/;"	m	struct:sqlite3_tokenizer_module	file:
xDestroy	utilities/sqlite3/sqlite3.c	/^  int (*xDestroy)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module	file:
xDestroy	utilities/sqlite3/sqlite3.c	/^  void (*xDestroy)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods	file:
xDestroy	utilities/sqlite3/sqlite3.c	/^  void (*xDestroy)(void *);            \/* Module destructor function *\/$/;"	m	struct:Module	file:
xDestroy	utilities/sqlite3/sqlite3.c	/^  void (*xDestroy)(void *);$/;"	m	struct:FuncDestructor	file:
xDestroy	utilities/sqlite3/sqlite3.h	/^  int (*xDestroy)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module
xDestroy	utilities/sqlite3/sqlite3.h	/^  void (*xDestroy)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods
xDeviceCharacteristics	utilities/sqlite3/sqlite3.c	/^  int (*xDeviceCharacteristics)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods	file:
xDeviceCharacteristics	utilities/sqlite3/sqlite3.h	/^  int (*xDeviceCharacteristics)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods
xDisconnect	utilities/sqlite3/sqlite3.c	/^  int (*xDisconnect)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module	file:
xDisconnect	utilities/sqlite3/sqlite3.h	/^  int (*xDisconnect)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module
xDlClose	utilities/sqlite3/sqlite3.c	/^  void (*xDlClose)(sqlite3_vfs*, void*);$/;"	m	struct:sqlite3_vfs	file:
xDlClose	utilities/sqlite3/sqlite3.h	/^  void (*xDlClose)(sqlite3_vfs*, void*);$/;"	m	struct:sqlite3_vfs
xDlError	utilities/sqlite3/sqlite3.c	/^  void (*xDlError)(sqlite3_vfs*, int nByte, char *zErrMsg);$/;"	m	struct:sqlite3_vfs	file:
xDlError	utilities/sqlite3/sqlite3.h	/^  void (*xDlError)(sqlite3_vfs*, int nByte, char *zErrMsg);$/;"	m	struct:sqlite3_vfs
xDlOpen	utilities/sqlite3/sqlite3.c	/^  void *(*xDlOpen)(sqlite3_vfs*, const char *zFilename);$/;"	m	struct:sqlite3_vfs	file:
xDlOpen	utilities/sqlite3/sqlite3.h	/^  void *(*xDlOpen)(sqlite3_vfs*, const char *zFilename);$/;"	m	struct:sqlite3_vfs
xEof	utilities/sqlite3/sqlite3.c	/^  int (*xEof)(sqlite3_vtab_cursor*);$/;"	m	struct:sqlite3_module	file:
xEof	utilities/sqlite3/sqlite3.h	/^  int (*xEof)(sqlite3_vtab_cursor*);$/;"	m	struct:sqlite3_module
xExprCallback	utilities/sqlite3/sqlite3.c	/^  int (*xExprCallback)(Walker*, Expr*);     \/* Callback for expressions *\/$/;"	m	struct:Walker	file:
xFetch	utilities/sqlite3/sqlite3.c	/^  void *(*xFetch)(sqlite3_pcache*, unsigned key, int createFlag);$/;"	m	struct:sqlite3_pcache_methods	file:
xFetch	utilities/sqlite3/sqlite3.h	/^  void *(*xFetch)(sqlite3_pcache*, unsigned key, int createFlag);$/;"	m	struct:sqlite3_pcache_methods
xFileControl	utilities/sqlite3/sqlite3.c	/^  int (*xFileControl)(sqlite3_file*, int op, void *pArg);$/;"	m	struct:sqlite3_io_methods	file:
xFileControl	utilities/sqlite3/sqlite3.h	/^  int (*xFileControl)(sqlite3_file*, int op, void *pArg);$/;"	m	struct:sqlite3_io_methods
xFileSize	utilities/sqlite3/sqlite3.c	/^  int (*xFileSize)(sqlite3_file*, sqlite3_int64 *pSize);$/;"	m	struct:sqlite3_io_methods	file:
xFileSize	utilities/sqlite3/sqlite3.h	/^  int (*xFileSize)(sqlite3_file*, sqlite3_int64 *pSize);$/;"	m	struct:sqlite3_io_methods
xFilter	utilities/sqlite3/sqlite3.c	/^  int (*xFilter)(sqlite3_vtab_cursor*, int idxNum, const char *idxStr,$/;"	m	struct:sqlite3_module	file:
xFilter	utilities/sqlite3/sqlite3.h	/^  int (*xFilter)(sqlite3_vtab_cursor*, int idxNum, const char *idxStr,$/;"	m	struct:sqlite3_module
xFinalize	utilities/sqlite3/sqlite3.c	/^  void (*xFinalize)(sqlite3_context*);                \/* Aggregate finalizer *\/$/;"	m	struct:FuncDef	file:
xFindFunction	utilities/sqlite3/sqlite3.c	/^  int (*xFindFunction)(sqlite3_vtab *pVtab, int nArg, const char *zName,$/;"	m	struct:sqlite3_module	file:
xFindFunction	utilities/sqlite3/sqlite3.h	/^  int (*xFindFunction)(sqlite3_vtab *pVtab, int nArg, const char *zName,$/;"	m	struct:sqlite3_module
xFree	utilities/sqlite3/sqlite3.c	/^  void (*xFree)(void*);          \/* Free a prior allocation *\/$/;"	m	struct:sqlite3_mem_methods	file:
xFree	utilities/sqlite3/sqlite3.c	/^static void xFree(void *p){$/;"	f	file:
xFree	utilities/sqlite3/sqlite3.h	/^  void (*xFree)(void*);          \/* Free a prior allocation *\/$/;"	m	struct:sqlite3_mem_methods
xFreeSchema	utilities/sqlite3/sqlite3.c	/^  void (*xFreeSchema)(void*);  \/* Destructor for BtShared.pSchema *\/$/;"	m	struct:BtShared	file:
xFullPathname	utilities/sqlite3/sqlite3.c	/^  int (*xFullPathname)(sqlite3_vfs*, const char *zName, int nOut, char *zOut);$/;"	m	struct:sqlite3_vfs	file:
xFullPathname	utilities/sqlite3/sqlite3.h	/^  int (*xFullPathname)(sqlite3_vfs*, const char *zName, int nOut, char *zOut);$/;"	m	struct:sqlite3_vfs
xFunc	utilities/sqlite3/sqlite3.c	/^  int (*xFunc)(void *,int);  \/* The busy callback *\/$/;"	m	struct:BusyHandler	file:
xFunc	utilities/sqlite3/sqlite3.c	/^  void (*xFunc)(sqlite3_context*,int,sqlite3_value**); \/* Regular function *\/$/;"	m	struct:FuncDef	file:
xGeom	utilities/sqlite3/sqlite3.c	/^  int (*xGeom)(sqlite3_rtree_geometry *, int, double *, int *);$/;"	m	struct:RtreeConstraint	file:
xGeom	utilities/sqlite3/sqlite3.c	/^  int (*xGeom)(sqlite3_rtree_geometry *, int, double *, int *);$/;"	m	struct:RtreeGeomCallback	file:
xGeom	utilities/sqlite3/sqlite3.c	/^  int (*xGeom)(sqlite3_rtree_geometry *, int, double *, int *);$/;"	m	struct:RtreeMatchArg	file:
xGetLastError	utilities/sqlite3/sqlite3.c	/^  int (*xGetLastError)(sqlite3_vfs*, int, char *);$/;"	m	struct:sqlite3_vfs	file:
xGetLastError	utilities/sqlite3/sqlite3.h	/^  int (*xGetLastError)(sqlite3_vfs*, int, char *);$/;"	m	struct:sqlite3_vfs
xGetSystemCall	utilities/sqlite3/sqlite3.c	/^  sqlite3_syscall_ptr (*xGetSystemCall)(sqlite3_vfs*, const char *zName);$/;"	m	struct:sqlite3_vfs	file:
xGetSystemCall	utilities/sqlite3/sqlite3.h	/^  sqlite3_syscall_ptr (*xGetSystemCall)(sqlite3_vfs*, const char *zName);$/;"	m	struct:sqlite3_vfs
xInit	utilities/sqlite3/sqlite3.c	/^  int (*xInit)(void*);           \/* Initialize the memory allocator *\/$/;"	m	struct:sqlite3_mem_methods	file:
xInit	utilities/sqlite3/sqlite3.c	/^  int (*xInit)(void*);$/;"	m	struct:sqlite3_pcache_methods	file:
xInit	utilities/sqlite3/sqlite3.h	/^  int (*xInit)(void*);           \/* Initialize the memory allocator *\/$/;"	m	struct:sqlite3_mem_methods
xInit	utilities/sqlite3/sqlite3.h	/^  int (*xInit)(void*);$/;"	m	struct:sqlite3_pcache_methods
xLock	utilities/sqlite3/sqlite3.c	/^  int (*xLock)(sqlite3_file*, int);$/;"	m	struct:sqlite3_io_methods	file:
xLock	utilities/sqlite3/sqlite3.h	/^  int (*xLock)(sqlite3_file*, int);$/;"	m	struct:sqlite3_io_methods
xLog	utilities/sqlite3/sqlite3.c	/^  void (*xLog)(void*,int,const char*); \/* Function for logging *\/$/;"	m	struct:Sqlite3Config	file:
xMalloc	utilities/sqlite3/sqlite3.c	/^  void *(*xMalloc)(int);         \/* Memory allocation function *\/$/;"	m	struct:sqlite3_mem_methods	file:
xMalloc	utilities/sqlite3/sqlite3.h	/^  void *(*xMalloc)(int);         \/* Memory allocation function *\/$/;"	m	struct:sqlite3_mem_methods
xMutexAlloc	utilities/sqlite3/sqlite3.c	/^  sqlite3_mutex *(*xMutexAlloc)(int);$/;"	m	struct:sqlite3_mutex_methods	file:
xMutexAlloc	utilities/sqlite3/sqlite3.h	/^  sqlite3_mutex *(*xMutexAlloc)(int);$/;"	m	struct:sqlite3_mutex_methods
xMutexEnd	utilities/sqlite3/sqlite3.c	/^  int (*xMutexEnd)(void);$/;"	m	struct:sqlite3_mutex_methods	file:
xMutexEnd	utilities/sqlite3/sqlite3.h	/^  int (*xMutexEnd)(void);$/;"	m	struct:sqlite3_mutex_methods
xMutexEnter	utilities/sqlite3/sqlite3.c	/^  void (*xMutexEnter)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods	file:
xMutexEnter	utilities/sqlite3/sqlite3.h	/^  void (*xMutexEnter)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods
xMutexFree	utilities/sqlite3/sqlite3.c	/^  void (*xMutexFree)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods	file:
xMutexFree	utilities/sqlite3/sqlite3.h	/^  void (*xMutexFree)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods
xMutexHeld	utilities/sqlite3/sqlite3.c	/^  int (*xMutexHeld)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods	file:
xMutexHeld	utilities/sqlite3/sqlite3.h	/^  int (*xMutexHeld)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods
xMutexInit	utilities/sqlite3/sqlite3.c	/^  int (*xMutexInit)(void);$/;"	m	struct:sqlite3_mutex_methods	file:
xMutexInit	utilities/sqlite3/sqlite3.h	/^  int (*xMutexInit)(void);$/;"	m	struct:sqlite3_mutex_methods
xMutexLeave	utilities/sqlite3/sqlite3.c	/^  void (*xMutexLeave)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods	file:
xMutexLeave	utilities/sqlite3/sqlite3.h	/^  void (*xMutexLeave)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods
xMutexNotheld	utilities/sqlite3/sqlite3.c	/^  int (*xMutexNotheld)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods	file:
xMutexNotheld	utilities/sqlite3/sqlite3.h	/^  int (*xMutexNotheld)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods
xMutexTry	utilities/sqlite3/sqlite3.c	/^  int (*xMutexTry)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods	file:
xMutexTry	utilities/sqlite3/sqlite3.h	/^  int (*xMutexTry)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods
xNext	utilities/sqlite3/sqlite3.c	/^  int (*xNext)($/;"	m	struct:sqlite3_tokenizer_module	file:
xNext	utilities/sqlite3/sqlite3.c	/^  int (*xNext)(sqlite3_vtab_cursor*);$/;"	m	struct:sqlite3_module	file:
xNext	utilities/sqlite3/sqlite3.h	/^  int (*xNext)(sqlite3_vtab_cursor*);$/;"	m	struct:sqlite3_module
xNextSystemCall	utilities/sqlite3/sqlite3.c	/^  const char *(*xNextSystemCall)(sqlite3_vfs*, const char *zName);$/;"	m	struct:sqlite3_vfs	file:
xNextSystemCall	utilities/sqlite3/sqlite3.h	/^  const char *(*xNextSystemCall)(sqlite3_vfs*, const char *zName);$/;"	m	struct:sqlite3_vfs
xOpen	utilities/sqlite3/sqlite3.c	/^  int (*xOpen)($/;"	m	struct:sqlite3_tokenizer_module	file:
xOpen	utilities/sqlite3/sqlite3.c	/^  int (*xOpen)(sqlite3_vfs*, const char *zName, sqlite3_file*,$/;"	m	struct:sqlite3_vfs	file:
xOpen	utilities/sqlite3/sqlite3.c	/^  int (*xOpen)(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor);$/;"	m	struct:sqlite3_module	file:
xOpen	utilities/sqlite3/sqlite3.h	/^  int (*xOpen)(sqlite3_vfs*, const char *zName, sqlite3_file*,$/;"	m	struct:sqlite3_vfs
xOpen	utilities/sqlite3/sqlite3.h	/^  int (*xOpen)(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor);$/;"	m	struct:sqlite3_module
xPagecount	utilities/sqlite3/sqlite3.c	/^  int (*xPagecount)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods	file:
xPagecount	utilities/sqlite3/sqlite3.h	/^  int (*xPagecount)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods
xProfile	utilities/sqlite3/sqlite3.c	/^  void (*xProfile)(void*,const char*,u64);  \/* Profiling function *\/$/;"	m	struct:sqlite3	file:
xProgress	utilities/sqlite3/sqlite3.c	/^  int (*xProgress)(void *);     \/* The progress callback *\/$/;"	m	struct:sqlite3	file:
xRandomness	utilities/sqlite3/sqlite3.c	/^  int (*xRandomness)(sqlite3_vfs*, int nByte, char *zOut);$/;"	m	struct:sqlite3_vfs	file:
xRandomness	utilities/sqlite3/sqlite3.h	/^  int (*xRandomness)(sqlite3_vfs*, int nByte, char *zOut);$/;"	m	struct:sqlite3_vfs
xRead	utilities/sqlite3/sqlite3.c	/^  int (*xRead)(sqlite3_file*, void*, int iAmt, sqlite3_int64 iOfst);$/;"	m	struct:sqlite3_io_methods	file:
xRead	utilities/sqlite3/sqlite3.h	/^  int (*xRead)(sqlite3_file*, void*, int iAmt, sqlite3_int64 iOfst);$/;"	m	struct:sqlite3_io_methods
xRealloc	utilities/sqlite3/sqlite3.c	/^  void *(*xRealloc)(void*,int);  \/* Resize an allocation *\/$/;"	m	struct:sqlite3_mem_methods	file:
xRealloc	utilities/sqlite3/sqlite3.h	/^  void *(*xRealloc)(void*,int);  \/* Resize an allocation *\/$/;"	m	struct:sqlite3_mem_methods
xReiniter	utilities/sqlite3/sqlite3.c	/^  void (*xReiniter)(DbPage*); \/* Call this routine when reloading pages *\/$/;"	m	struct:Pager	file:
xRekey	utilities/sqlite3/sqlite3.c	/^  void (*xRekey)(sqlite3_pcache*, void*, unsigned oldKey, unsigned newKey);$/;"	m	struct:sqlite3_pcache_methods	file:
xRekey	utilities/sqlite3/sqlite3.h	/^  void (*xRekey)(sqlite3_pcache*, void*, unsigned oldKey, unsigned newKey);$/;"	m	struct:sqlite3_pcache_methods
xRelease	utilities/sqlite3/sqlite3.c	/^  int (*xRelease)(sqlite3_vtab *pVTab, int);$/;"	m	struct:sqlite3_module	file:
xRelease	utilities/sqlite3/sqlite3.h	/^  int (*xRelease)(sqlite3_vtab *pVTab, int);$/;"	m	struct:sqlite3_module
xRename	utilities/sqlite3/sqlite3.c	/^  int (*xRename)(sqlite3_vtab *pVtab, const char *zNew);$/;"	m	struct:sqlite3_module	file:
xRename	utilities/sqlite3/sqlite3.h	/^  int (*xRename)(sqlite3_vtab *pVtab, const char *zNew);$/;"	m	struct:sqlite3_module
xRollback	utilities/sqlite3/sqlite3.c	/^  int (*xRollback)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module	file:
xRollback	utilities/sqlite3/sqlite3.h	/^  int (*xRollback)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module
xRollbackCallback	utilities/sqlite3/sqlite3.c	/^  void (*xRollbackCallback)(void*); \/* Invoked at every commit. *\/$/;"	m	struct:sqlite3	file:
xRollbackTo	utilities/sqlite3/sqlite3.c	/^  int (*xRollbackTo)(sqlite3_vtab *pVTab, int);$/;"	m	struct:sqlite3_module	file:
xRollbackTo	utilities/sqlite3/sqlite3.h	/^  int (*xRollbackTo)(sqlite3_vtab *pVTab, int);$/;"	m	struct:sqlite3_module
xRoundup	utilities/sqlite3/sqlite3.c	/^  int (*xRoundup)(int);          \/* Round up request size to allocation size *\/$/;"	m	struct:sqlite3_mem_methods	file:
xRoundup	utilities/sqlite3/sqlite3.h	/^  int (*xRoundup)(int);          \/* Round up request size to allocation size *\/$/;"	m	struct:sqlite3_mem_methods
xRowid	utilities/sqlite3/sqlite3.c	/^  int (*xRowid)(sqlite3_vtab_cursor*, sqlite3_int64 *pRowid);$/;"	m	struct:sqlite3_module	file:
xRowid	utilities/sqlite3/sqlite3.h	/^  int (*xRowid)(sqlite3_vtab_cursor*, sqlite3_int64 *pRowid);$/;"	m	struct:sqlite3_module
xSavepoint	utilities/sqlite3/sqlite3.c	/^  int (*xSavepoint)(sqlite3_vtab *pVTab, int);$/;"	m	struct:sqlite3_module	file:
xSavepoint	utilities/sqlite3/sqlite3.h	/^  int (*xSavepoint)(sqlite3_vtab *pVTab, int);$/;"	m	struct:sqlite3_module
xSectorSize	utilities/sqlite3/sqlite3.c	/^  int (*xSectorSize)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods	file:
xSectorSize	utilities/sqlite3/sqlite3.h	/^  int (*xSectorSize)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods
xSelectCallback	utilities/sqlite3/sqlite3.c	/^  int (*xSelectCallback)(Walker*,Select*);  \/* Callback for SELECTs *\/$/;"	m	struct:Walker	file:
xSetSystemCall	utilities/sqlite3/sqlite3.c	/^  int (*xSetSystemCall)(sqlite3_vfs*, const char *zName, sqlite3_syscall_ptr);$/;"	m	struct:sqlite3_vfs	file:
xSetSystemCall	utilities/sqlite3/sqlite3.h	/^  int (*xSetSystemCall)(sqlite3_vfs*, const char *zName, sqlite3_syscall_ptr);$/;"	m	struct:sqlite3_vfs
xShmBarrier	utilities/sqlite3/sqlite3.c	/^  void (*xShmBarrier)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods	file:
xShmBarrier	utilities/sqlite3/sqlite3.h	/^  void (*xShmBarrier)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods
xShmLock	utilities/sqlite3/sqlite3.c	/^  int (*xShmLock)(sqlite3_file*, int offset, int n, int flags);$/;"	m	struct:sqlite3_io_methods	file:
xShmLock	utilities/sqlite3/sqlite3.h	/^  int (*xShmLock)(sqlite3_file*, int offset, int n, int flags);$/;"	m	struct:sqlite3_io_methods
xShmMap	utilities/sqlite3/sqlite3.c	/^  int (*xShmMap)(sqlite3_file*, int iPg, int pgsz, int, void volatile**);$/;"	m	struct:sqlite3_io_methods	file:
xShmMap	utilities/sqlite3/sqlite3.h	/^  int (*xShmMap)(sqlite3_file*, int iPg, int pgsz, int, void volatile**);$/;"	m	struct:sqlite3_io_methods
xShmUnmap	utilities/sqlite3/sqlite3.c	/^  int (*xShmUnmap)(sqlite3_file*, int deleteFlag);$/;"	m	struct:sqlite3_io_methods	file:
xShmUnmap	utilities/sqlite3/sqlite3.h	/^  int (*xShmUnmap)(sqlite3_file*, int deleteFlag);$/;"	m	struct:sqlite3_io_methods
xShutdown	utilities/sqlite3/sqlite3.c	/^  void (*xShutdown)(void*);      \/* Deinitialize the memory allocator *\/$/;"	m	struct:sqlite3_mem_methods	file:
xShutdown	utilities/sqlite3/sqlite3.c	/^  void (*xShutdown)(void*);$/;"	m	struct:sqlite3_pcache_methods	file:
xShutdown	utilities/sqlite3/sqlite3.h	/^  void (*xShutdown)(void*);      \/* Deinitialize the memory allocator *\/$/;"	m	struct:sqlite3_mem_methods
xShutdown	utilities/sqlite3/sqlite3.h	/^  void (*xShutdown)(void*);$/;"	m	struct:sqlite3_pcache_methods
xSize	utilities/sqlite3/sqlite3.c	/^  int (*xSize)(void*);           \/* Return the size of an allocation *\/$/;"	m	struct:sqlite3_mem_methods	file:
xSize	utilities/sqlite3/sqlite3.h	/^  int (*xSize)(void*);           \/* Return the size of an allocation *\/$/;"	m	struct:sqlite3_mem_methods
xSleep	utilities/sqlite3/sqlite3.c	/^  int (*xSleep)(sqlite3_vfs*, int microseconds);$/;"	m	struct:sqlite3_vfs	file:
xSleep	utilities/sqlite3/sqlite3.h	/^  int (*xSleep)(sqlite3_vfs*, int microseconds);$/;"	m	struct:sqlite3_vfs
xStep	utilities/sqlite3/sqlite3.c	/^  void (*xStep)(sqlite3_context*,int,sqlite3_value**); \/* Aggregate step *\/$/;"	m	struct:FuncDef	file:
xStress	utilities/sqlite3/sqlite3.c	/^  int (*xStress)(void*,PgHdr*);       \/* Call to try make a page clean *\/$/;"	m	struct:PCache	file:
xSync	utilities/sqlite3/sqlite3.c	/^  int (*xSync)(sqlite3_file*, int flags);$/;"	m	struct:sqlite3_io_methods	file:
xSync	utilities/sqlite3/sqlite3.c	/^  int (*xSync)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module	file:
xSync	utilities/sqlite3/sqlite3.h	/^  int (*xSync)(sqlite3_file*, int flags);$/;"	m	struct:sqlite3_io_methods
xSync	utilities/sqlite3/sqlite3.h	/^  int (*xSync)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module
xTrace	utilities/sqlite3/sqlite3.c	/^  void (*xTrace)(void*,const char*);        \/* Trace function *\/$/;"	m	struct:sqlite3	file:
xTruncate	utilities/sqlite3/sqlite3.c	/^  int (*xTruncate)(sqlite3_file*, sqlite3_int64 size);$/;"	m	struct:sqlite3_io_methods	file:
xTruncate	utilities/sqlite3/sqlite3.c	/^  void (*xTruncate)(sqlite3_pcache*, unsigned iLimit);$/;"	m	struct:sqlite3_pcache_methods	file:
xTruncate	utilities/sqlite3/sqlite3.h	/^  int (*xTruncate)(sqlite3_file*, sqlite3_int64 size);$/;"	m	struct:sqlite3_io_methods
xTruncate	utilities/sqlite3/sqlite3.h	/^  void (*xTruncate)(sqlite3_pcache*, unsigned iLimit);$/;"	m	struct:sqlite3_pcache_methods
xUnlock	utilities/sqlite3/sqlite3.c	/^  int (*xUnlock)(sqlite3_file*, int);$/;"	m	struct:sqlite3_io_methods	file:
xUnlock	utilities/sqlite3/sqlite3.h	/^  int (*xUnlock)(sqlite3_file*, int);$/;"	m	struct:sqlite3_io_methods
xUnlockNotify	utilities/sqlite3/sqlite3.c	/^  void (*xUnlockNotify)(void **, int);  \/* Unlock notify callback *\/$/;"	m	struct:sqlite3	file:
xUnpin	utilities/sqlite3/sqlite3.c	/^  void (*xUnpin)(sqlite3_pcache*, void*, int discard);$/;"	m	struct:sqlite3_pcache_methods	file:
xUnpin	utilities/sqlite3/sqlite3.h	/^  void (*xUnpin)(sqlite3_pcache*, void*, int discard);$/;"	m	struct:sqlite3_pcache_methods
xUpdate	utilities/sqlite3/sqlite3.c	/^  int (*xUpdate)(sqlite3_vtab *, int, sqlite3_value **, sqlite3_int64 *);$/;"	m	struct:sqlite3_module	file:
xUpdate	utilities/sqlite3/sqlite3.h	/^  int (*xUpdate)(sqlite3_vtab *, int, sqlite3_value **, sqlite3_int64 *);$/;"	m	struct:sqlite3_module
xUpdateCallback	utilities/sqlite3/sqlite3.c	/^  void (*xUpdateCallback)(void*,int, const char*,const char*,sqlite_int64);$/;"	m	struct:sqlite3	file:
xWalCallback	utilities/sqlite3/sqlite3.c	/^  int (*xWalCallback)(void *, sqlite3 *, const char *, int);$/;"	m	struct:sqlite3	file:
xWrite	utilities/sqlite3/sqlite3.c	/^  int (*xWrite)(sqlite3_file*, const void*, int iAmt, sqlite3_int64 iOfst);$/;"	m	struct:sqlite3_io_methods	file:
xWrite	utilities/sqlite3/sqlite3.h	/^  int (*xWrite)(sqlite3_file*, const void*, int iAmt, sqlite3_int64 iOfst);$/;"	m	struct:sqlite3_io_methods
xferCompatibleCollation	utilities/sqlite3/sqlite3.c	/^static int xferCompatibleCollation(const char *z1, const char *z2){$/;"	f	file:
xferCompatibleIndex	utilities/sqlite3/sqlite3.c	/^static int xferCompatibleIndex(Index *pDest, Index *pSrc){$/;"	f	file:
xferOptimization	utilities/sqlite3/sqlite3.c	/^static int xferOptimization($/;"	f	file:
xthreadsafe	utilities/sqlite3/sqlite3.c	/^  int (*xthreadsafe)(void);$/;"	m	struct:sqlite3_api_routines	file:
yColCache	utilities/sqlite3/sqlite3.c	/^  struct yColCache {$/;"	s	struct:Parse	file:
yDbMask	utilities/sqlite3/sqlite3.c	/^  typedef sqlite3_uint64 yDbMask;$/;"	t	file:
yDbMask	utilities/sqlite3/sqlite3.c	/^  typedef unsigned int yDbMask;$/;"	t	file:
ynVar	utilities/sqlite3/sqlite3.c	/^typedef i16 ynVar;$/;"	t	file:
ynVar	utilities/sqlite3/sqlite3.c	/^typedef int ynVar;$/;"	t	file:
yy0	utilities/sqlite3/sqlite3.c	/^  sqlite3ParserTOKENTYPE yy0;$/;"	m	union:__anon24	file:
yy118	utilities/sqlite3/sqlite3.c	/^  ExprSpan yy118;$/;"	m	union:__anon24	file:
yy203	utilities/sqlite3/sqlite3.c	/^  TriggerStep* yy203;$/;"	m	union:__anon24	file:
yy210	utilities/sqlite3/sqlite3.c	/^  u8 yy210;$/;"	m	union:__anon24	file:
yy215	utilities/sqlite3/sqlite3.c	/^  struct {int value; int mask;} yy215;$/;"	m	union:__anon24	typeref:struct:__anon24::__anon25	file:
yy259	utilities/sqlite3/sqlite3.c	/^  SrcList* yy259;$/;"	m	union:__anon24	file:
yy292	utilities/sqlite3/sqlite3.c	/^  struct LimitVal yy292;$/;"	m	union:__anon24	typeref:struct:__anon24::LimitVal	file:
yy314	utilities/sqlite3/sqlite3.c	/^  Expr* yy314;$/;"	m	union:__anon24	file:
yy322	utilities/sqlite3/sqlite3.c	/^  ExprList* yy322;$/;"	m	union:__anon24	file:
yy342	utilities/sqlite3/sqlite3.c	/^  struct LikeOp yy342;$/;"	m	union:__anon24	typeref:struct:__anon24::LikeOp	file:
yy384	utilities/sqlite3/sqlite3.c	/^  IdList* yy384;$/;"	m	union:__anon24	file:
yy387	utilities/sqlite3/sqlite3.c	/^  Select* yy387;$/;"	m	union:__anon24	file:
yy4	utilities/sqlite3/sqlite3.c	/^  int yy4;$/;"	m	union:__anon24	file:
yy90	utilities/sqlite3/sqlite3.c	/^  struct TrigEvent yy90;$/;"	m	union:__anon24	typeref:struct:__anon24::TrigEvent	file:
yyFallback	utilities/sqlite3/sqlite3.c	/^static const YYCODETYPE yyFallback[] = {$/;"	v	file:
yyGrowStack	utilities/sqlite3/sqlite3.c	/^static void yyGrowStack(yyParser *p){$/;"	f	file:
yyParser	utilities/sqlite3/sqlite3.c	/^struct yyParser {$/;"	s	file:
yyParser	utilities/sqlite3/sqlite3.c	/^typedef struct yyParser yyParser;$/;"	t	typeref:struct:yyParser	file:
yyRuleInfo	utilities/sqlite3/sqlite3.c	/^} yyRuleInfo[] = {$/;"	v	typeref:struct:__anon26	file:
yyRuleName	utilities/sqlite3/sqlite3.c	/^static const char *const yyRuleName[] = {$/;"	v	file:
yyStackEntry	utilities/sqlite3/sqlite3.c	/^struct yyStackEntry {$/;"	s	file:
yyStackEntry	utilities/sqlite3/sqlite3.c	/^typedef struct yyStackEntry yyStackEntry;$/;"	t	typeref:struct:yyStackEntry	file:
yyStackOverflow	utilities/sqlite3/sqlite3.c	/^static void yyStackOverflow(yyParser *yypParser, YYMINORTYPE *yypMinor){$/;"	f	file:
yyTokenName	utilities/sqlite3/sqlite3.c	/^static const char *const yyTokenName[] = { $/;"	v	file:
yyTraceFILE	utilities/sqlite3/sqlite3.c	/^static FILE *yyTraceFILE = 0;$/;"	v	file:
yyTracePrompt	utilities/sqlite3/sqlite3.c	/^static char *yyTracePrompt = 0;$/;"	v	file:
yy_accept	utilities/sqlite3/sqlite3.c	/^static void yy_accept($/;"	f	file:
yy_action	utilities/sqlite3/sqlite3.c	/^static const YYACTIONTYPE yy_action[] = {$/;"	v	file:
yy_default	utilities/sqlite3/sqlite3.c	/^static const YYACTIONTYPE yy_default[] = {$/;"	v	file:
yy_destructor	utilities/sqlite3/sqlite3.c	/^static void yy_destructor($/;"	f	file:
yy_find_reduce_action	utilities/sqlite3/sqlite3.c	/^static int yy_find_reduce_action($/;"	f	file:
yy_find_shift_action	utilities/sqlite3/sqlite3.c	/^static int yy_find_shift_action($/;"	f	file:
yy_lookahead	utilities/sqlite3/sqlite3.c	/^static const YYCODETYPE yy_lookahead[] = {$/;"	v	file:
yy_parse_failed	utilities/sqlite3/sqlite3.c	/^static void yy_parse_failed($/;"	f	file:
yy_pop_parser_stack	utilities/sqlite3/sqlite3.c	/^static int yy_pop_parser_stack(yyParser *pParser){$/;"	f	file:
yy_reduce	utilities/sqlite3/sqlite3.c	/^static void yy_reduce($/;"	f	file:
yy_reduce_ofst	utilities/sqlite3/sqlite3.c	/^static const short yy_reduce_ofst[] = {$/;"	v	file:
yy_shift	utilities/sqlite3/sqlite3.c	/^static void yy_shift($/;"	f	file:
yy_shift_ofst	utilities/sqlite3/sqlite3.c	/^static const short yy_shift_ofst[] = {$/;"	v	file:
yy_syntax_error	utilities/sqlite3/sqlite3.c	/^static void yy_syntax_error($/;"	f	file:
yyerrcnt	utilities/sqlite3/sqlite3.c	/^  int yyerrcnt;                 \/* Shifts left before out of the error *\/$/;"	m	struct:yyParser	file:
yyidx	utilities/sqlite3/sqlite3.c	/^  int yyidx;                    \/* Index of top element in stack *\/$/;"	m	struct:yyParser	file:
yyidxMax	utilities/sqlite3/sqlite3.c	/^  int yyidxMax;                 \/* Maximum value of yyidx *\/$/;"	m	struct:yyParser	file:
yyinit	utilities/sqlite3/sqlite3.c	/^  int yyinit;$/;"	m	union:__anon24	file:
yystack	utilities/sqlite3/sqlite3.c	/^  yyStackEntry *yystack;        \/* The parser's stack *\/$/;"	m	struct:yyParser	file:
yystksz	utilities/sqlite3/sqlite3.c	/^  int yystksz;                  \/* Current side of the stack *\/$/;"	m	struct:yyParser	file:
yytestcase	utilities/sqlite3/sqlite3.c	105559;"	d	file:
yytestcase	utilities/sqlite3/sqlite3.c	105766;"	d	file:
yyzerominor	utilities/sqlite3/sqlite3.c	/^static const YYMINORTYPE yyzerominor = { 0 };$/;"	v	file:
z	utilities/sqlite3/sqlite3.c	/^    char *z;               \/* Pointer to data for string (char array) types *\/$/;"	m	union:VdbeOp::__anon7	file:
z	utilities/sqlite3/sqlite3.c	/^    char *z;        \/* Value if eType is SQLITE_TEXT or SQLITE_BLOB *\/$/;"	m	union:IndexSample::__anon9	file:
z	utilities/sqlite3/sqlite3.c	/^  char *z;                        \/* Pointer to buffer containing string *\/$/;"	m	struct:StrBuffer	file:
z	utilities/sqlite3/sqlite3.c	/^  char *z;                        \/* Text of the token *\/$/;"	m	struct:Fts3PhraseToken	file:
z	utilities/sqlite3/sqlite3.c	/^  char *z;            \/* String or BLOB value *\/$/;"	m	struct:Mem	file:
z	utilities/sqlite3/sqlite3.c	/^  const char *z;     \/* Text of the token.  Not NULL-terminated! *\/$/;"	m	struct:Token	file:
zAlias	utilities/sqlite3/sqlite3.c	/^    char *zAlias;     \/* The "B" part of a "A AS B" phrase.  zName is the "A" *\/$/;"	m	struct:SrcList::SrcList_item	file:
zAuthContext	utilities/sqlite3/sqlite3.c	/^  const char *zAuthContext;   \/* Put saved Parse.zAuthContext here *\/$/;"	m	struct:AuthContext	file:
zAuthContext	utilities/sqlite3/sqlite3.c	/^  const char *zAuthContext; \/* The 6th parameter to db->xAuth callbacks *\/$/;"	m	struct:Parse	file:
zBase	utilities/sqlite3/sqlite3.c	/^  char *zBase;         \/* A base allocation.  Not from malloc. *\/$/;"	m	struct:StrAccum	file:
zBuf	utilities/sqlite3/sqlite3.c	/^  char *zBuf;                     \/* Space to buffer journal writes *\/$/;"	m	struct:JournalFile	file:
zBuffer	utilities/sqlite3/sqlite3.c	/^  char *zBuffer;$/;"	m	struct:IcuCursor	file:
zCanonicalName	utilities/sqlite3/sqlite3.c	/^  char *zCanonicalName;         \/* Canonical filename *\/$/;"	m	struct:vxworksFileId	file:
zChunk	utilities/sqlite3/sqlite3.c	/^  u8 zChunk[JOURNAL_CHUNKSIZE];   \/* Content of this chunk *\/$/;"	m	struct:FileChunk	file:
zCol	utilities/sqlite3/sqlite3.c	/^    char *zCol;        \/* Name of column in zTo.  If 0 use PRIMARY KEY *\/$/;"	m	struct:FKey::sColMap	file:
zColAff	utilities/sqlite3/sqlite3.c	/^  char *zColAff;       \/* String defining the affinity of each column *\/$/;"	m	struct:Table	file:
zColAff	utilities/sqlite3/sqlite3.c	/^  char *zColAff;   \/* String defining the affinity of each column *\/$/;"	m	struct:Index	file:
zColl	utilities/sqlite3/sqlite3.c	/^  char *zColl;     \/* Collating sequence.  If NULL, use the default *\/$/;"	m	struct:Column	file:
zComment	utilities/sqlite3/sqlite3.c	/^  char *zComment;          \/* Comment to improve readability *\/$/;"	m	struct:VdbeOp	file:
zData	utilities/sqlite3/sqlite3.c	/^  u8 *zData;$/;"	m	struct:RtreeNode	file:
zDatabase	utilities/sqlite3/sqlite3.c	/^    char *zDatabase;  \/* Name of database holding this table *\/$/;"	m	struct:SrcList::SrcList_item	file:
zDatabase	utilities/sqlite3/sqlite3.c	/^  const char *zDatabase;$/;"	m	struct:analysisInfo	file:
zDb	utilities/sqlite3/sqlite3.c	/^  char *zDb;                  \/* Name of database containing r-tree table *\/$/;"	m	struct:Rtree	file:
zDb	utilities/sqlite3/sqlite3.c	/^  const char *zDb;                \/* logical database name *\/$/;"	m	struct:Fts3Table	file:
zDb	utilities/sqlite3/sqlite3.c	/^  const char *zDb;    \/* Make sure all objects are contained in this database *\/$/;"	m	struct:DbFixer	file:
zDeleteOnClose	utilities/sqlite3/sqlite3.c	/^  WCHAR *zDeleteOnClose;  \/* Name of file to delete when closing *\/$/;"	m	struct:winFile	file:
zDflt	utilities/sqlite3/sqlite3.c	/^  char *zDflt;     \/* Original text of the default value *\/$/;"	m	struct:Column	file:
zEnd	utilities/sqlite3/sqlite3.c	/^  const char *zEnd;     \/* One character past the end of input text *\/$/;"	m	struct:ExprSpan	file:
zErrMsg	utilities/sqlite3/sqlite3.c	/^  char *zErrMsg;                  \/* Error message from sqlite3_mprintf() *\/$/;"	m	struct:sqlite3_vtab	file:
zErrMsg	utilities/sqlite3/sqlite3.c	/^  char *zErrMsg;                \/* Most recent error message (UTF-8 encoded) *\/$/;"	m	struct:sqlite3	file:
zErrMsg	utilities/sqlite3/sqlite3.c	/^  char *zErrMsg;          \/* Error message written here *\/$/;"	m	struct:Vdbe	file:
zErrMsg	utilities/sqlite3/sqlite3.c	/^  char *zErrMsg;       \/* An error message *\/$/;"	m	struct:Parse	file:
zErrMsg	utilities/sqlite3/sqlite3.c	/^  char *zErrMsg;     \/* Error message text, if an error occurs *\/$/;"	m	struct:TabResult	file:
zErrMsg	utilities/sqlite3/sqlite3.h	/^  char *zErrMsg;                  \/* Error message from sqlite3_mprintf() *\/$/;"	m	struct:sqlite3_vtab
zErrMsg16	utilities/sqlite3/sqlite3.c	/^  char *zErrMsg16;              \/* Most recent error message (UTF-16 encoded) *\/$/;"	m	struct:sqlite3	file:
zFilename	utilities/sqlite3/sqlite3.c	/^  char *zFilename;            \/* Name of the database file *\/$/;"	m	struct:Pager	file:
zFilename	utilities/sqlite3/sqlite3.c	/^  char *zFilename;           \/* Name of the file *\/$/;"	m	struct:winShmNode	file:
zFilename	utilities/sqlite3/sqlite3.c	/^  char *zFilename;           \/* Name of the mmapped file *\/$/;"	m	struct:unixShmNode	file:
zFullPathCp	utilities/sqlite3/sqlite3.c	/^  char *zFullPathCp;        \/* Full path name of this file *\/$/;"	m	struct:os2File	file:
zIndex	utilities/sqlite3/sqlite3.c	/^    char *zIndex;     \/* Identifier from "INDEXED BY <zIndex>" clause *\/$/;"	m	struct:SrcList::SrcList_item	file:
zInput	utilities/sqlite3/sqlite3.c	/^  const char *zInput;          \/* input we are tokenizing *\/$/;"	m	struct:porter_tokenizer_cursor	file:
zJournal	utilities/sqlite3/sqlite3.c	/^  char *zJournal;             \/* Name of the journal file *\/$/;"	m	struct:Pager	file:
zJournal	utilities/sqlite3/sqlite3.c	/^  const char *zJournal;           \/* Name of the journal file *\/$/;"	m	struct:JournalFile	file:
zLocale	utilities/sqlite3/sqlite3.c	/^  char *zLocale;$/;"	m	struct:IcuTokenizer	file:
zMagicHeader	utilities/sqlite3/sqlite3.c	/^static const char zMagicHeader[] = SQLITE_FILE_HEADER;$/;"	v	file:
zMalloc	utilities/sqlite3/sqlite3.c	/^  char *zMalloc;                  \/* Malloc'd space (possibly) used for zTerm *\/$/;"	m	struct:SegmentNode	file:
zMalloc	utilities/sqlite3/sqlite3.c	/^  char *zMalloc;                  \/* Malloc'd space (possibly) used for zTerm *\/$/;"	m	struct:SegmentWriter	file:
zMalloc	utilities/sqlite3/sqlite3.c	/^  char *zMalloc;      \/* Dynamic buffer allocated by sqlite3_malloc() *\/$/;"	m	struct:Mem	file:
zMatchinfo	utilities/sqlite3/sqlite3.c	/^  char *zMatchinfo;               \/* Matchinfo specification *\/$/;"	m	struct:Fts3Cursor	file:
zName	utilities/sqlite3/sqlite3.c	/^    char *zName;           \/* Token associated with this expression *\/$/;"	m	struct:ExprList::ExprList_item	file:
zName	utilities/sqlite3/sqlite3.c	/^    char *zName;      \/* Name of the identifier *\/$/;"	m	struct:IdList::IdList_item	file:
zName	utilities/sqlite3/sqlite3.c	/^    char *zName;      \/* Name of the table *\/$/;"	m	struct:SrcList::SrcList_item	file:
zName	utilities/sqlite3/sqlite3.c	/^  char *zName;                        \/* Savepoint name (nul-terminated) *\/$/;"	m	struct:Savepoint	file:
zName	utilities/sqlite3/sqlite3.c	/^  char *zName;                \/* Name of r-tree table *\/ $/;"	m	struct:Rtree	file:
zName	utilities/sqlite3/sqlite3.c	/^  char *zName;            \/* The name of the trigger                        *\/$/;"	m	struct:Trigger	file:
zName	utilities/sqlite3/sqlite3.c	/^  char *zName;          \/* Name of the collating sequence, UTF-8 encoded *\/$/;"	m	struct:CollSeq	file:
zName	utilities/sqlite3/sqlite3.c	/^  char *zName;         \/* Name of the table or view *\/$/;"	m	struct:Table	file:
zName	utilities/sqlite3/sqlite3.c	/^  char *zName;         \/* Name of this database *\/$/;"	m	struct:Db	file:
zName	utilities/sqlite3/sqlite3.c	/^  char *zName;         \/* SQL name of the function. *\/$/;"	m	struct:FuncDef	file:
zName	utilities/sqlite3/sqlite3.c	/^  char *zName;     \/* Name of this column *\/$/;"	m	struct:Column	file:
zName	utilities/sqlite3/sqlite3.c	/^  char *zName;     \/* Name of this index *\/$/;"	m	struct:Index	file:
zName	utilities/sqlite3/sqlite3.c	/^  const char *zName;                   \/* Name passed to create_module() *\/$/;"	m	struct:Module	file:
zName	utilities/sqlite3/sqlite3.c	/^  const char *zName;              \/* virtual table name *\/$/;"	m	struct:Fts3Table	file:
zName	utilities/sqlite3/sqlite3.c	/^  const char *zName;            \/* Name of the sytem call *\/$/;"	m	struct:unix_syscall	file:
zName	utilities/sqlite3/sqlite3.c	/^  const char *zName;       \/* Name of this virtual file system *\/$/;"	m	struct:sqlite3_vfs	file:
zName	utilities/sqlite3/sqlite3.c	/^  const char *zName;   \/* Name of the table *\/$/;"	m	struct:TableLock	file:
zName	utilities/sqlite3/sqlite3.h	/^  const char *zName;       \/* Name of this virtual file system *\/$/;"	m	struct:sqlite3_vfs
zPath	utilities/sqlite3/sqlite3.c	/^  const char *zPath;                  \/* Name of the file *\/$/;"	m	struct:unixFile	file:
zPath	utilities/sqlite3/sqlite3.c	/^  const char *zPath;      \/* Full pathname of this file *\/$/;"	m	struct:winFile	file:
zPool	utilities/sqlite3/sqlite3.c	/^  u8 *zPool;       \/* Memory available to be allocated *\/$/;"	m	struct:Mem5Global	file:
zReadExprlist	utilities/sqlite3/sqlite3.c	/^  char *zReadExprlist;$/;"	m	struct:Fts3Table	file:
zSegmentsTbl	utilities/sqlite3/sqlite3.c	/^  char *zSegmentsTbl;             \/* Name of %_segments table *\/$/;"	m	struct:Fts3Table	file:
zSpan	utilities/sqlite3/sqlite3.c	/^    char *zSpan;           \/* Original text of the expression *\/$/;"	m	struct:ExprList::ExprList_item	file:
zSql	utilities/sqlite3/sqlite3.c	/^  char *zSql;             \/* Text of the SQL statement that generated this *\/$/;"	m	struct:Vdbe	file:
zStart	utilities/sqlite3/sqlite3.c	/^  const char *zStart;   \/* First character of input text *\/$/;"	m	struct:ExprSpan	file:
zStop	utilities/sqlite3/sqlite3.c	/^  char *zStop;$/;"	m	struct:Fts3auxCursor	file:
zTail	utilities/sqlite3/sqlite3.c	/^  const char *zTail;   \/* All SQL text past the last semicolon parsed *\/$/;"	m	struct:Parse	file:
zTerm	utilities/sqlite3/sqlite3.c	/^  char *zTerm;                    \/* Pointer to current term *\/$/;"	m	struct:Fts3SegReader	file:
zTerm	utilities/sqlite3/sqlite3.c	/^  char *zTerm;                    \/* Pointer to previous term buffer *\/$/;"	m	struct:SegmentNode	file:
zTerm	utilities/sqlite3/sqlite3.c	/^  char *zTerm;                    \/* Pointer to previous term buffer *\/$/;"	m	struct:SegmentWriter	file:
zTerm	utilities/sqlite3/sqlite3.c	/^  char *zTerm;                    \/* Pointer to term buffer *\/$/;"	m	struct:Fts3MultiSegReader	file:
zTerm	utilities/sqlite3/sqlite3.c	/^  const char *zTerm;$/;"	m	struct:Fts3SegFilter	file:
zText	utilities/sqlite3/sqlite3.c	/^  char *zText;         \/* The string collected so far *\/$/;"	m	struct:StrAccum	file:
zTitle	utilities/sqlite3/sqlite3.c	/^  char zTitle[100];  \/* The title text *\/$/;"	m	struct:__anon18	file:
zTo	utilities/sqlite3/sqlite3.c	/^  char *zTo;        \/* Name of table that the key points to (aka: Parent) *\/$/;"	m	struct:FKey	file:
zToken	utilities/sqlite3/sqlite3.c	/^    char *zToken;          \/* Token value. Zero terminated and dequoted *\/$/;"	m	union:Expr::__anon10	file:
zToken	utilities/sqlite3/sqlite3.c	/^  char *zToken;                \/* storage for current token *\/$/;"	m	struct:porter_tokenizer_cursor	file:
zType	utilities/sqlite3/sqlite3.c	/^  char *zType;     \/* Data type for this column *\/$/;"	m	struct:Column	file:
zType	utilities/sqlite3/sqlite3.c	/^  const char *zType;  \/* Type of the container - used for error messages *\/$/;"	m	struct:DbFixer	file:
zWal	utilities/sqlite3/sqlite3.c	/^  char *zWal;                 \/* File name for write-ahead log *\/$/;"	m	struct:Pager	file:
zWalName	utilities/sqlite3/sqlite3.c	/^  const char *zWalName;      \/* Name of WAL file *\/$/;"	m	struct:Wal	file:
zWriteExprlist	utilities/sqlite3/sqlite3.c	/^  char *zWriteExprlist;$/;"	m	struct:Fts3Table	file:
zeroJournalHdr	utilities/sqlite3/sqlite3.c	/^static int zeroJournalHdr(Pager *pPager, int doTruncate){$/;"	f	file:
zeroPage	utilities/sqlite3/sqlite3.c	/^static void zeroPage(MemPage *pPage, int flags){$/;"	f	file:
zeroblobFunc	utilities/sqlite3/sqlite3.c	/^static void zeroblobFunc($/;"	f	file:
zeroed	utilities/sqlite3/sqlite3.c	/^  Bool zeroed;          \/* True if zeroed out and ready for reuse *\/$/;"	m	struct:VdbeCursor	file:
